{
    "event": "suiteStart",
    "suite": "api",
    "tests": 881
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollection)",
    "status": "pass",
    "time": 2.8672780990601,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkPagination)",
    "status": "pass",
    "time": 5.1387248039246,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.AlertCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.AlertCest.hasFilters)",
    "status": "pass",
    "time": 0.46855998039246,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkFilters)",
    "status": "pass",
    "time": 0.4103729724884,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.65368914604187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntity)",
    "status": "pass",
    "time": 0.84584593772888,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGet)",
    "status": "pass",
    "time": 36.34583902359,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 3.7799417972565,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.32066082954407,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.35781002044678,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.AlertCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.AlertCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.87044620513916,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.82157421112061,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.8141610622406,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.31589388847351,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.AlertCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.AlertCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.31618905067444,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.AlertCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.AlertCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.3217978477478,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32348012924194,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.AlertCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.AlertCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.31697511672974,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.AlertCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.AlertCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.33012104034424,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32188487052917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertCest.viewInHal)",
    "status": "pass",
    "time": 1.1719830036163,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.2155079841614,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertCest.checkUplink)",
    "status": "pass",
    "time": 1.2510650157928,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.988312959671,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32532501220703,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.31917190551758,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.1339280605316,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [alert] => alert 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.alert",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [alert] => alert 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 1.1481649875641,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.AlertCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.AlertCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.32336497306824,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.AlertCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.AlertCest.getSortDirections)",
    "status": "pass",
    "time": 0.35920190811157,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.AlertCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.AlertCest.checkSortCollection)",
    "status": "fail",
    "time": 1.9351980686188,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                [
                    {
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "timestamp": "2013-10-10 06:00:00",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/6"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "timestamp": "2013-10-10 04:00:00",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/4"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "timestamp": "2013-10-10 03:00:00",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/3"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "timestamp": "2013-10-10 02:00:00",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/2"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "timestamp": "2013-10-10 01:00:00",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/1"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\AlertPage",
                "\/order\/1411-10\/alert?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.33542799949646,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.35588312149048,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.3842520713806,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.3074369430542,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 1.0257489681244,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32094788551331,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32176899909973,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32192015647888,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.31603598594666,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.33136677742004,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.0537550449371,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.7919380664825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.8803420066833,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.0756251811981,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32176303863525,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.31470894813538,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32285213470459,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.0728368759155,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88514590263367,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkUplink)",
    "status": "pass",
    "time": 4.0842289924622,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.8357582092285,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.AlertEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.AlertEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.1128940582275,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.81831407547,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.0734870433807,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.8516919612885,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.8984479904175,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.9446170330048,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.1513440608978,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.1983499526978,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/alert\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/alert\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 19.128303050995,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.1342220306396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.1163439750671,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.32462406158447,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.31882190704346,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.5240490436554,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.2565472126007,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.33887696266174,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.33477592468262,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.33823704719543,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.3303759098053,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.34276604652405,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.33749508857727,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.33504605293274,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.33495497703552,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.31752300262451,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.31655597686768,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32086491584778,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32569193840027,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.309818983078,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.3061540126801,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.6492791175842,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.3959851264954,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollection)",
    "status": "pass",
    "time": 1.1286559104919,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkPagination)",
    "status": "pass",
    "time": 3.3197751045227,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.NoteCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.NoteCest.hasFilters)",
    "status": "pass",
    "time": 0.32147192955017,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkFilters)",
    "status": "pass",
    "time": 0.31920099258423,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.31966996192932,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntity)",
    "status": "pass",
    "time": 0.3458468914032,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGet)",
    "status": "pass",
    "time": 1.8529181480408,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.8541188240051,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.32076501846313,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.32472991943359,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.NoteCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.NoteCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.76749300956726,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.75926494598389,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.76229310035706,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.3676381111145,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.NoteCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.NoteCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32313704490662,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.NoteCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.NoteCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32666492462158,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32769799232483,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.NoteCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.NoteCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.32300806045532,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.NoteCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.NoteCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32414197921753,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32253885269165,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteCest.viewInHal)",
    "status": "pass",
    "time": 1.1082241535187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.203094959259,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteCest.checkUplink)",
    "status": "pass",
    "time": 1.0446820259094,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.7284770011902,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32920908927917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32782411575317,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.1050341129303,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [note] => Note 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.note",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [note] => Note 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 1.0624511241913,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.NoteCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.NoteCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.33076310157776,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.NoteCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.NoteCest.getSortDirections)",
    "status": "pass",
    "time": 0.31818699836731,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.NoteCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.NoteCest.checkSortCollection)",
    "status": "fail",
    "time": 1.0770370960236,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                [
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "timestamp": "2013-10-10 06:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/6"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "timestamp": "2013-10-10 04:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/4"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "timestamp": "2013-10-10 03:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/3"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "timestamp": "2013-10-10 02:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/2"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "timestamp": "2013-10-10 01:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/1"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\NotePage",
                "\/order\/1411-10\/note?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.32438588142395,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.32677817344666,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.091961145401,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.0127029418945,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 1.0566999912262,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.31703114509583,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.31725096702576,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32863807678223,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32199096679688,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.3183228969574,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.0294990539551,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.7842240333557,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.7582440376282,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.209734916687,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32778000831604,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32988905906677,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.31253790855408,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.1119918823242,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.89254403114319,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.1664099693298,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.8394420146942,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.NoteEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.NoteEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.0104758739471,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.8323659896851,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.0654780864716,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.9087448120117,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 5.221822977066,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 2.0346009731293,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.1289701461792,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.1366391181946,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/note\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/note\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.772528886795,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.1668100357056,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.086658000946,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.32169198989868,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollection)",
    "status": "pass",
    "time": 1.0340738296509,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkPagination)",
    "status": "pass",
    "time": 3.148185968399,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.TrackingCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.TrackingCest.hasFilters)",
    "status": "pass",
    "time": 0.3243100643158,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFilters)",
    "status": "pass",
    "time": 0.32873511314392,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.32094717025757,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntity)",
    "status": "pass",
    "time": 0.34455990791321,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGet)",
    "status": "pass",
    "time": 1.9224519729614,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.7336390018463,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.36504983901978,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.32262110710144,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.78166007995605,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.78531789779663,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.78104615211487,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.31908893585205,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32665801048279,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32581806182861,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32761001586914,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.TrackingCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.TrackingCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.31775712966919,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.TrackingCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.TrackingCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32173013687134,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32023191452026,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingCest.viewInHal)",
    "status": "pass",
    "time": 1.0218739509583,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1861810684204,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingCest.checkUplink)",
    "status": "pass",
    "time": 0.97314095497131,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.7756998538971,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32282495498657,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.31669807434082,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.0196430683136,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [number] => 1235\n    [carrier] => carrier 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.tracking",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [number] => 1235\n    [carrier] => carrier 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 1.0614259243011,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.31946992874146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.TrackingCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.TrackingCest.getSortDirections)",
    "status": "pass",
    "time": 0.3359260559082,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSortCollection)",
    "status": "fail",
    "time": 1.053475856781,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                [
                    {
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "timestamp": "2013-10-10 06:00:00",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/6"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "timestamp": "2013-10-10 04:00:00",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/4"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "timestamp": "2013-10-10 03:00:00",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/3"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "timestamp": "2013-10-10 02:00:00",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/2"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "timestamp": "2013-10-10 01:00:00",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/1"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\TrackingPage",
                "\/order\/1411-10\/tracking?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.31483483314514,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.33869290351868,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.053307056427,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.0257639884949,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.94430899620056,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32501411437988,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.31899189949036,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.3259129524231,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32045602798462,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.3234760761261,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.0601229667664,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.7506990432739,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.8082189559937,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.1327991485596,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.33493399620056,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.3439998626709,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32958006858826,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.0002589225769,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.89248919487,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkUplink)",
    "status": "pass",
    "time": 3.5904657840729,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.7655820846558,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.0676579475403,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.7115168571472,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.0741770267487,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 2.0872700214386,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.8715741634369,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.8813121318817,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.1060099601746,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.172297000885,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/tracking\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/tracking\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.706710100174,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.046875,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.1671948432922,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.31960082054138,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.98724508285522,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.95855093002319,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 244,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                1,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "isEqual",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                1,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "organisationUnitId",
                1,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "changes": {
                        "totalDiscount": 0.1
                    },
                    "organisationUnitId": 1
                }
            ]
        }
    ],
    "message": "Failed asserting that 2 matches expected 1.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.95125913619995,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32469081878662,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.31871795654297,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32194995880127,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32152104377747,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32286596298218,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.90988111495972,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.5161190032959,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.32500004768372,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.9061598777771,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32549095153809,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32554697990417,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.3325879573822,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.0019800662994,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88179206848145,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.99662685394287,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5190539360046,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.94358801841736,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.6121461391449,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.97284197807312,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 2.5593240261078,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.9406540393829,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.806282043457,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.1365668773651,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.0620591640472,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/userchange\"'s etag to change (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/userchange\"'s etag to change (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.508900880814,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.0693180561066,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.98470616340637,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.3292920589447,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollection)",
    "status": "pass",
    "time": 1.3390829563141,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkPagination)",
    "status": "pass",
    "time": 3.3746349811554,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderBatchCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderBatchCest.hasFilters)",
    "status": "pass",
    "time": 0.32982707023621,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkFilters)",
    "status": "pass",
    "time": 1.1412410736084,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkMultiFilters)",
    "status": "pass",
    "time": 1.3437910079956,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEntity)",
    "status": "pass",
    "time": 0.33207702636719,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32766699790955,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.32702493667603,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.32867002487183,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.32790398597717,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.32945489883423,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderBatchCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderBatchCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.33520603179932,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.3249409198761,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.34018993377686,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderBatchCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderBatchCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.33253788948059,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderBatchCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderBatchCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32378506660461,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testRangeFilters)",
    "status": "pass",
    "time": 0.3285059928894,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.73792695999146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.77836179733276,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderBatchCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderBatchCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32809805870056,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchCest.viewInHal)",
    "status": "pass",
    "time": 1.0938880443573,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.4447050094604,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchCest.checkUplink)",
    "status": "pass",
    "time": 1.2053120136261,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.9114811420441,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32722496986389,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.33448004722595,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.0808570384979,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.74903702735901,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderBatchCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderBatchCest.checkFiltersPagination)",
    "status": "pass",
    "time": 2.6051120758057,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderBatchCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderBatchCest.getSortDirections)",
    "status": "pass",
    "time": 0.32826089859009,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkSortCollection)",
    "status": "fail",
    "time": 0.7668240070343,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.orderBatch"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.orderBatch"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderBatchPage",
                "\/orderBatch?orderBy=name&orderDirection=ASC",
                [
                    {
                        "name": "1",
                        "organisationUnitId": 1,
                        "id": "1-1",
                        "active": 1
                    },
                    {
                        "name": "1",
                        "organisationUnitId": 2,
                        "id": "2-1",
                        "active": 1
                    },
                    {
                        "name": "2",
                        "organisationUnitId": 1,
                        "id": "1-2",
                        "active": 1
                    },
                    {
                        "name": "3",
                        "organisationUnitId": 1,
                        "id": "1-3",
                        "active": 1
                    },
                    {
                        "name": "4",
                        "organisationUnitId": 1,
                        "id": "1-4",
                        "active": 1
                    },
                    {
                        "name": "5",
                        "organisationUnitId": 1,
                        "id": "1-5",
                        "active": 0
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.35003900527954,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.36220598220825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.0284698009491,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.0450079441071,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.97768998146057,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32903385162354,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.3340380191803,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32345294952393,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.33613300323486,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.3307580947876,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.96513509750366,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.7653651237488,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 2.1283609867096,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.0252628326416,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.36946392059326,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.3325080871582,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32060599327087,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.97171783447266,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.85885810852051,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.98061418533325,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.7696690559387,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderBatchEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderBatchEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.0074200630188,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.7473800182343,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.0311970710754,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.5123591423035,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.527715921402,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.8550181388855,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 3.4172580242157,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.1377739906311,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderbatch\/1-1\"'s etag to change (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderbatch\/1-1\"'s etag to change (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.506944894791,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.75931811332703,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.75610899925232,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.32131505012512,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryFilter)",
    "status": "fail",
    "time": 0.86537003517151,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 35,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 400 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryExcludeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryExcludeFilter)",
    "status": "fail",
    "time": 0.79500102996826,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 56,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 400 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multiline orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiLineFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multiline orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiLineFilter)",
    "status": "fail",
    "time": 1.655161857605,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 117,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Failed asserting that 5 is equal to 1"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 95,
            "function": "isOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                5,
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 84,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                1
            ]
        }
    ],
    "message": "Failed asserting that 5 is equal to 1",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multi same item orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiSameItemFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multi same item orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiSameItemFilter)",
    "status": "fail",
    "time": 1.7169749736786,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 117,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Failed asserting that 5 is equal to 2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 95,
            "function": "isOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                5,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 112,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                2
            ]
        }
    ],
    "message": "Failed asserting that 5 is equal to 2",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check archive filter works for this collection (CG.Order.Test.Api.Cest.OrderCest.checkIncludeArchivedFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "check archive filter works for this collection (CG.Order.Test.Api.Cest.OrderCest.checkIncludeArchivedFilter)",
    "status": "fail",
    "time": 0.79234385490417,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 139,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [

                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollection)",
    "status": "pass",
    "time": 1.5360500812531,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkPagination)",
    "status": "pass",
    "time": 4.9325091838837,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderCest.hasFilters)",
    "status": "pass",
    "time": 0.32239198684692,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkFilters)",
    "status": "fail",
    "time": 1.3713300228119,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 146,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                {
                    "1411-10": {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkMultiFilters)",
    "status": "fail",
    "time": 1.4143710136414,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 185,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                {
                    "1411-10": {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderCest.createEntity)",
    "status": "pass",
    "time": 0.31697607040405,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32844996452332,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.3230459690094,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.31645584106445,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.33121085166931,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.32012820243835,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.32388401031494,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32524800300598,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32192397117615,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.31945085525513,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32297205924988,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by a single range filter. (CG.Order.Test.Api.Cest.OrderCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by a single range filter. (CG.Order.Test.Api.Cest.OrderCest.testRangeFilters)",
    "status": "fail",
    "time": 0.768061876297,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 634,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 3.6013059616089,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32860803604126,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by searchterm (CG.Order.Test.Api.Cest.OrderCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by searchterm (CG.Order.Test.Api.Cest.OrderCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 23.753329992294,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderCest.viewInHal)",
    "status": "pass",
    "time": 1.6304960250854,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.427540063858,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderCest.checkUplink)",
    "status": "pass",
    "time": 1.4645299911499,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.725821018219,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32392191886902,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32952189445496,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.5686581134796,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.77827787399292,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderCest.checkFiltersPagination)",
    "status": "fail",
    "time": 1.4533958435059,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 91,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 108,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderPage",
                {
                    "id": [
                        "1411-10"
                    ],
                    "organisationUnitId": [
                        1
                    ],
                    "status": [
                        "1"
                    ],
                    "accountId": [
                        1411
                    ],
                    "channel": [
                        "ebay"
                    ],
                    "shippingMethod": [
                        "standard"
                    ],
                    "batch": [
                        1
                    ]
                },
                {
                    "1411-10": {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderCest.getSortDirections)",
    "status": "pass",
    "time": 0.32432985305786,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderCest.checkSortCollection)",
    "status": "fail",
    "time": 1.6940088272095,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ],
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1",
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ],
                                "shippingAmount": 10.99
                            }
                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1411-11",
                                    "externalId": null,
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item 1",
                                    "itemSku": "test-sku-1",
                                    "individualItemPrice": 1.99,
                                    "itemQuantity": 10,
                                    "itemTaxPercentage": 0.1,
                                    "individualItemDiscountPrice": 0.199,
                                    "itemVariationAttribute": {
                                        "colour": "red",
                                        "size": "10cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-11"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    },
                                    "_embedded": {
                                        "fee": [
                                            {
                                                "name": "eBayFee",
                                                "amount": 1.99,
                                                "orderItemId": "1411-11",
                                                "id": 1,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/1"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 2.99,
                                                "orderItemId": "1411-11",
                                                "id": 2,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/2"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 3.99,
                                                "orderItemId": "1411-11",
                                                "id": 3,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/3"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 4.99,
                                                "orderItemId": "1411-11",
                                                "id": 4,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/4"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 6.99,
                                                "orderItemId": "1411-11",
                                                "id": 6,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/6"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            }
                                        ],
                                        "giftWrap": [
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 1",
                                                "giftWrapPrice": 1.99,
                                                "giftWrapTaxPercentage": 0.1,
                                                "orderItemId": "1411-11",
                                                "id": 1,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/1"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 2",
                                                "giftWrapPrice": 2.99,
                                                "giftWrapTaxPercentage": 0.2,
                                                "orderItemId": "1411-11",
                                                "id": 2,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/2"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 3",
                                                "giftWrapPrice": 3.99,
                                                "giftWrapTaxPercentage": 0.3,
                                                "orderItemId": "1411-11",
                                                "id": 3,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/3"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 4",
                                                "giftWrapPrice": 4.99,
                                                "giftWrapTaxPercentage": 0.4,
                                                "orderItemId": "1411-11",
                                                "id": 4,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/4"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 6",
                                                "giftWrapPrice": 6.99,
                                                "giftWrapTaxPercentage": 0.6,
                                                "orderItemId": "1411-11",
                                                "id": 6,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/6"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": "1411-12",
                                    "externalId": null,
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item 2",
                                    "itemSku": "test-sku-2",
                                    "individualItemPrice": 2.99,
                                    "itemQuantity": 20,
                                    "itemTaxPercentage": 0.2,
                                    "individualItemDiscountPrice": 0.299,
                                    "itemVariationAttribute": {
                                        "colour": "blue",
                                        "size": "20cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-12"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    },
                                    "_embedded": {
                                        "fee": [
                                            {
                                                "name": "eBayFee",
                                                "amount": 5.99,
                                                "orderItemId": "1411-12",
                                                "id": 5,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-12\/fee\/5"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-12\/fee"
                                                    }
                                                }
                                            }
                                        ],
                                        "giftWrap": [
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 5",
                                                "giftWrapPrice": 5.99,
                                                "giftWrapTaxPercentage": 0.5,
                                                "orderItemId": "1411-12",
                                                "id": 5,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-12\/giftWrap\/5"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-12\/giftWrap"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": "1411-13",
                                    "externalId": null,
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item 3",
                                    "itemSku": "test-sku-3",
                                    "individualItemPrice": 3.99,
                                    "itemQuantity": 30,
                                    "itemTaxPercentage": 0.3,
                                    "individualItemDiscountPrice": 0.399,
                                    "itemVariationAttribute": {
                                        "colour": "yellow",
                                        "size": "30cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-13"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                },
                                {
                                    "id": "1411-44",
                                    "externalId": null,
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item-1",
                                    "itemSku": "test-sku-4",
                                    "individualItemPrice": 4.99,
                                    "itemQuantity": 40,
                                    "itemTaxPercentage": 0.4,
                                    "individualItemDiscountPrice": 0.499,
                                    "itemVariationAttribute": {
                                        "colour": "green",
                                        "size": "40cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-44"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                },
                                {
                                    "id": "1411-46",
                                    "externalId": null,
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item-6",
                                    "itemSku": "test-sku-6",
                                    "individualItemPrice": 6.99,
                                    "itemQuantity": 60,
                                    "itemTaxPercentage": 0.6,
                                    "individualItemDiscountPrice": 0.699,
                                    "itemVariationAttribute": {
                                        "colour": "red",
                                        "size": "60cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-46"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ],
                            "alert": [
                                {
                                    "orderId": "1411-10",
                                    "userId": 6,
                                    "alert": "alert 6",
                                    "timestamp": "2013-10-10 06:00:00",
                                    "id": 6,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/6"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 4,
                                    "alert": "alert 4",
                                    "timestamp": "2013-10-10 04:00:00",
                                    "id": 4,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/4"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 3,
                                    "alert": "alert 3",
                                    "timestamp": "2013-10-10 03:00:00",
                                    "id": 3,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/3"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 2,
                                    "alert": "alert 2",
                                    "timestamp": "2013-10-10 02:00:00",
                                    "id": 2,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/2"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 1,
                                    "alert": "alert 1",
                                    "timestamp": "2013-10-10 01:00:00",
                                    "id": 1,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/1"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                }
                            ],
                            "note": [
                                {
                                    "id": 6,
                                    "orderId": "1411-10",
                                    "userId": 6,
                                    "note": "Note 6",
                                    "timestamp": "2013-10-10 06:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/6"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 4,
                                    "orderId": "1411-10",
                                    "userId": 4,
                                    "note": "Note 4",
                                    "timestamp": "2013-10-10 04:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/4"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 3,
                                    "orderId": "1411-10",
                                    "userId": 3,
                                    "note": "Note 3",
                                    "timestamp": "2013-10-10 03:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/3"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 2,
                                    "orderId": "1411-10",
                                    "userId": 2,
                                    "note": "Note 2",
                                    "timestamp": "2013-10-10 02:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/2"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 1,
                                    "orderId": "1411-10",
                                    "userId": 1,
                                    "note": "Note 1",
                                    "timestamp": "2013-10-10 01:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/1"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                }
                            ],
                            "tracking": [
                                {
                                    "orderId": "1411-10",
                                    "userId": 6,
                                    "number": "1236",
                                    "carrier": "carrier 6",
                                    "timestamp": "2013-10-10 06:00:00",
                                    "id": 6,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/6"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 4,
                                    "number": "1234",
                                    "carrier": "carrier 4",
                                    "timestamp": "2013-10-10 04:00:00",
                                    "id": 4,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/4"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 3,
                                    "number": "1233",
                                    "carrier": "carrier 3",
                                    "timestamp": "2013-10-10 03:00:00",
                                    "id": 3,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/3"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 2,
                                    "number": "1232",
                                    "carrier": "carrier 2",
                                    "timestamp": "2013-10-10 02:00:00",
                                    "id": 2,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/2"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 1,
                                    "number": "1231",
                                    "carrier": "carrier 1",
                                    "timestamp": "2013-10-10 01:00:00",
                                    "id": 1,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/1"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                }
                            ],
                            "userChange": [
                                {
                                    "orderId": "1411-10",
                                    "changes": {
                                        "shippingAddressCompanyName": "Wilki Ltd"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1412-20"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1411-45",
                                    "externalId": null,
                                    "orderId": "1412-20",
                                    "accountId": 1411,
                                    "itemName": "Order Item-2",
                                    "itemSku": "test-sku-5",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 50,
                                    "itemTaxPercentage": 0.5,
                                    "individualItemDiscountPrice": 0.599,
                                    "itemVariationAttribute": {
                                        "colour": "red",
                                        "size": "50cm"
                                    },
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-45"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ],
                            "alert": [
                                {
                                    "orderId": "1412-20",
                                    "userId": 5,
                                    "alert": "alert 5",
                                    "timestamp": "2013-10-10 05:00:00",
                                    "id": 5,
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/alert\/5"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20\/alert"
                                        }
                                    }
                                }
                            ],
                            "note": [
                                {
                                    "id": 5,
                                    "orderId": "1412-20",
                                    "userId": 5,
                                    "note": "Note 5",
                                    "timestamp": "2013-10-10 05:00:00",
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/note\/5"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20\/note"
                                        }
                                    }
                                }
                            ],
                            "tracking": [
                                {
                                    "orderId": "1412-20",
                                    "userId": 5,
                                    "number": "1235",
                                    "carrier": "carrier 5",
                                    "timestamp": "2013-10-10 05:00:00",
                                    "id": 5,
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/tracking\/5"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20\/tracking"
                                        }
                                    }
                                }
                            ],
                            "userChange": [
                                {
                                    "orderId": "1412-20",
                                    "changes": {
                                        "totalDiscount": 0.1
                                    },
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1413-30"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "userChange": [
                                {
                                    "orderId": "1413-30",
                                    "changes": {
                                        "billingAddressCompanyName": "Wilki Ltd",
                                        "billingAddressFullName": "Matthew King"
                                    },
                                    "organisationUnitId": 3,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1413-30\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1413-30"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1414-40"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "userChange": [
                                {
                                    "orderId": "1414-40",
                                    "changes": {
                                        "totalDiscount": 0.1,
                                        "shippingAddressCompanyName": "Wilki Ltd",
                                        "shippingAddressFullName": "Matthew King"
                                    },
                                    "organisationUnitId": 4,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1414-40\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1414-40"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1415-50"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "userChange": [
                                {
                                    "orderId": "1415-50",
                                    "changes": {
                                        "total": 23.99,
                                        "shippingPrice": 13.99,
                                        "totalDiscount": 0.1,
                                        "billingAddressCompanyName": "Wilki Ltd",
                                        "billingAddressFullName": "Matthew King"
                                    },
                                    "organisationUnitId": 5,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1415-50\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1415-50"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderPage",
                "\/order?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.31624698638916,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.3288049697876,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.3743269443512,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.2939610481262,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 1.4886879920959,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32587504386902,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32329082489014,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.31793785095215,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.31842994689941,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32276701927185,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.2811560630798,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 2.3681271076202,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 2.4710130691528,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.210734128952,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 2.4539849758148,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "fail",
    "time": 0.97854208946228,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 382,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32602000236511,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.5763220787048,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.93132996559143,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.5273568630219,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.3635301589966,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.3527970314026,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 2.5281159877777,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.4440650939941,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 2.5171518325806,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 2.5225331783295,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 2.5286769866943,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.5522129535675,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.4536509513855,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\"'s etag to change (CG.Order.Test.Api.Cest.OrderEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\"'s etag to change (CG.Order.Test.Api.Cest.OrderEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 20.429417848587,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.4397339820862,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.4518640041351,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 1.7250921726227,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 328,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollection)",
    "status": "pass",
    "time": 1.0334768295288,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkPagination)",
    "status": "pass",
    "time": 3.1028289794922,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.hasFilters)",
    "status": "pass",
    "time": 0.32677316665649,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFilters)",
    "status": "pass",
    "time": 0.32593512535095,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.31896805763245,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntity)",
    "status": "pass",
    "time": 0.32038402557373,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32333612442017,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.8993120193481,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.3291449546814,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.31853199005127,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.74602103233337,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.7525680065155,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.76646494865417,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.31899881362915,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32025599479675,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.31598687171936,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32122611999512,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.34604597091675,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.33641600608826,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 2.1328239440918,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewInHal)",
    "status": "pass",
    "time": 1.0495841503143,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1476459503174,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkUplink)",
    "status": "pass",
    "time": 0.97862911224365,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.666088104248,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32765984535217,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32218599319458,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.0772931575775,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field orderItemId is \"1411-12\" and should be \"1411-12\" or maybe this is missing: Array\n(\n    [orderItemId] => 1411-12\n    [amount] => 5.99\n    [id] => 5\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.fee",
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field orderItemId is \"1411-12\" and should be \"1411-12\" or maybe this is missing: Array\n(\n    [orderItemId] => 1411-12\n    [amount] => 5.99\n    [id] => 5\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 1.025456905365,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.31839919090271,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.FeeCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.FeeCest.getSortDirections)",
    "status": "pass",
    "time": 0.32820892333984,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSortCollection)",
    "status": "fail",
    "time": 1.0692090988159,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 1
                    }
                ],
                [
                    {
                        "name": "eBayFee",
                        "amount": 1.99,
                        "orderItemId": "1411-11",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/1"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 2.99,
                        "orderItemId": "1411-11",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/2"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 3.99,
                        "orderItemId": "1411-11",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/3"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 4.99,
                        "orderItemId": "1411-11",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/4"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 6.99,
                        "orderItemId": "1411-11",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/6"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItem\\FeePage",
                "\/orderItem\/1411-11\/fee?orderBy=orderItemId&orderDirection=ASC",
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.32579112052917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.33278799057007,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.0570390224457,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.0175580978394,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.98142504692078,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32188391685486,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32203984260559,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32859992980957,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32367706298828,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.33306908607483,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.9538950920105,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.668643951416,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.8114731311798,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.0077610015869,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.31917905807495,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.31930613517761,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32375812530518,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.010274887085,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88391184806824,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.98891186714172,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.6754660606384,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.1303119659424,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.6717319488525,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.96198797225952,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.8344669342041,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 4.1160199642181,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.9296438694,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.0655100345612,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.0861768722534,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/fee\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/fee\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.647769927979,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.1019878387451,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.0538442134857,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.3198070526123,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollection)",
    "status": "pass",
    "time": 1.0206611156464,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkPagination)",
    "status": "pass",
    "time": 3.3281791210175,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.hasFilters)",
    "status": "pass",
    "time": 0.32089185714722,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFilters)",
    "status": "pass",
    "time": 0.32274603843689,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.32236504554749,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntity)",
    "status": "pass",
    "time": 0.32185912132263,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32332396507263,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 2.0270760059357,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.33496189117432,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.32205390930176,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.74846005439758,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.73699998855591,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.75300812721252,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32205700874329,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32161998748779,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32946395874023,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32928800582886,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.32004714012146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32606506347656,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32579398155212,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewInHal)",
    "status": "pass",
    "time": 0.99909400939941,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1442620754242,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkUplink)",
    "status": "pass",
    "time": 1.0353450775146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.7167830467224,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32323503494263,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.31763315200806,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.0413298606873,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderItemId] => 1411-12\n    [giftWrapMessage] => Wrap Message 5\n    [giftWrapPrice] => 5.99\n    [giftWrapTaxPercentage] => 0.5\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.giftWrap",
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderItemId] => 1411-12\n    [giftWrapMessage] => Wrap Message 5\n    [giftWrapPrice] => 5.99\n    [giftWrapTaxPercentage] => 0.5\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 1.0255451202393,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.32414889335632,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.getSortDirections)",
    "status": "pass",
    "time": 0.32817792892456,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSortCollection)",
    "status": "fail",
    "time": 1.0998179912567,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ],
                [
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "orderItemId": "1411-11",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/1"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "orderItemId": "1411-11",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/2"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "orderItemId": "1411-11",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/3"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "orderItemId": "1411-11",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/4"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "orderItemId": "1411-11",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/6"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItem\\GiftWrapPage",
                "\/orderItem\/1411-11\/giftWrap?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.32842588424683,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.33319902420044,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.0596950054169,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.0182390213013,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.97839689254761,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32350707054138,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.33257508277893,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32436895370483,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32917714118958,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32220220565796,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.0014019012451,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.7219970226288,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 2.0360069274902,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.0255510807037,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32767987251282,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32100701332092,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32702898979187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.002818107605,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88626503944397,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.0214459896088,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 5.727077960968,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.070347070694,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.7477221488953,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.96707916259766,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.9665150642395,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.8653321266174,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 2.0839259624481,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.1229457855225,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.1165769100189,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/giftwrap\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/giftwrap\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.132233858109,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.3252289295197,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.416533946991,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.3321590423584,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollection)",
    "status": "pass",
    "time": 1.2823419570923,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItemCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItemCest.checkPagination)",
    "status": "pass",
    "time": 3.8986461162567,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItemCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItemCest.hasFilters)",
    "status": "pass",
    "time": 0.33055901527405,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItemCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItemCest.checkFilters)",
    "status": "pass",
    "time": 0.3470311164856,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItemCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItemCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.34545612335205,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItemCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItemCest.createEntity)",
    "status": "pass",
    "time": 0.34246301651001,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.33736801147461,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.3186399936676,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.31528496742249,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.3221800327301,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderItemCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderItemCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.32257485389709,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderItemCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderItemCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.31857895851135,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32669401168823,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32341194152832,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItemCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItemCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32350015640259,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItemCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItemCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32248497009277,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItemCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItemCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32473397254944,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItemCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItemCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.32301712036133,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItemCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItemCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.3059298992157,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItemCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItemCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32934880256653,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemCest.viewInHal)",
    "status": "pass",
    "time": 1.1954469680786,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.4355869293213,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemCest.checkUplink)",
    "status": "pass",
    "time": 1.2457420825958,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.3735690116882,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.31893706321716,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32288813591003,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.2135329246521,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.73099398612976,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItemCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItemCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.32272410392761,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItemCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItemCest.getSortDirections)",
    "status": "pass",
    "time": 0.32176899909973,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItemCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItemCest.checkSortCollection)",
    "status": "fail",
    "time": 0.72353887557983,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.item"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.item"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItemPage",
                "\/orderItem?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-11",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 1",
                        "individualItemPrice": 1.99,
                        "itemQuantity": 10,
                        "itemSku": "test-sku-1",
                        "itemTaxPercentage": 0.1,
                        "individualItemDiscountPrice": 0.199,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "10cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-12",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 2",
                        "individualItemPrice": 2.99,
                        "itemQuantity": 20,
                        "itemSku": "test-sku-2",
                        "itemTaxPercentage": 0.2,
                        "individualItemDiscountPrice": 0.299,
                        "itemVariationAttribute": {
                            "colour": "blue",
                            "size": "20cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-13",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 3",
                        "individualItemPrice": 3.99,
                        "itemQuantity": 30,
                        "itemSku": "test-sku-3",
                        "itemTaxPercentage": 0.3,
                        "individualItemDiscountPrice": 0.399,
                        "itemVariationAttribute": {
                            "colour": "yellow",
                            "size": "30cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-44",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-1",
                        "individualItemPrice": 4.99,
                        "itemQuantity": 40,
                        "itemSku": "test-sku-4",
                        "itemTaxPercentage": 0.4,
                        "individualItemDiscountPrice": 0.499,
                        "itemVariationAttribute": {
                            "colour": "green",
                            "size": "40cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-45",
                        "orderId": "1412-20",
                        "accountId": 1411,
                        "itemName": "Order Item-2",
                        "individualItemPrice": 5.99,
                        "itemQuantity": 50,
                        "itemSku": "test-sku-5",
                        "itemTaxPercentage": 0.5,
                        "individualItemDiscountPrice": 0.599,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "50cm"
                        },
                        "organisationUnitId": 2
                    },
                    {
                        "id": "1411-46",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-6",
                        "individualItemPrice": 6.99,
                        "itemQuantity": 60,
                        "itemSku": "test-sku-6",
                        "itemTaxPercentage": 0.6,
                        "individualItemDiscountPrice": 0.699,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "60cm"
                        },
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.32489323616028,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.32790017127991,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.1377720832825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.1626889705658,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 1.0726449489594,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32354211807251,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.3229808807373,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.32608199119568,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32880306243896,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.31845998764038,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.1489551067352,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 4.7909178733826,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.9438290596008,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 1.0229969024658,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 2.0334000587463,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "fail",
    "time": 1.0224709510803,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 382,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32518196105957,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.1576600074768,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.85512208938599,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.1169948577881,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.0004410743713,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItemEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItemEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.1507968902588,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 2.0494301319122,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.2020788192749,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 2.0999889373779,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 2.2611889839172,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 2.1377999782562,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.2271120548248,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.2098109722137,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\"'s etag to change (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\"'s etag to change (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 17.866152048111,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.1942040920258,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.2735888957977,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 1.8954071998596,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 328,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollection)",
    "status": "pass",
    "time": 1.2258141040802,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkPagination)",
    "status": "pass",
    "time": 3.4538869857788,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderTagCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderTagCest.hasFilters)",
    "status": "pass",
    "time": 0.3260931968689,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkFilters)",
    "status": "pass",
    "time": 1.0703058242798,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkMultiFilters)",
    "status": "pass",
    "time": 1.0511009693146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderTagCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderTagCest.createEntity)",
    "status": "pass",
    "time": 0.3205988407135,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.31945586204529,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.3268518447876,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.32589983940125,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.31948804855347,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderTagCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderTagCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.31835794448853,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderTagCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderTagCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.32014393806458,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.34524893760681,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32167601585388,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderTagCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderTagCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32275891304016,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderTagCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderTagCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32128190994263,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderTagCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderTagCest.testRangeFilters)",
    "status": "pass",
    "time": 0.31930804252625,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderTagCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderTagCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 1.1482388973236,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderTagCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderTagCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32247304916382,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderTagCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderTagCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32674908638,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagCest.viewInHal)",
    "status": "pass",
    "time": 1.1138200759888,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.3986699581146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagCest.checkUplink)",
    "status": "pass",
    "time": 3.0171248912811,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.8277871608734,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32195997238159,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32412815093994,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.0670139789581,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.74508309364319,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderTagCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderTagCest.checkFiltersPagination)",
    "status": "pass",
    "time": 1.7898519039154,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderTagCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderTagCest.getSortDirections)",
    "status": "pass",
    "time": 0.31781387329102,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderTagCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderTagCest.checkSortCollection)",
    "status": "fail",
    "time": 0.72409701347351,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.orderTag"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.orderTag"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderTagPage",
                "\/orderTag?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-10-tag1",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag1"
                    },
                    {
                        "id": "1411-10-tag2",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag2"
                    },
                    {
                        "id": "1411-10-tag5",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag5"
                    },
                    {
                        "id": "1412-20-tag3",
                        "orderId": "1412-20",
                        "organisationUnitId": 2,
                        "tag": "tag3"
                    },
                    {
                        "id": "1413-30-tag4",
                        "orderId": "1413-30",
                        "organisationUnitId": 3,
                        "tag": "tag4"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.33425211906433,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.35156297683716,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get page class (CG.Order.Test.Api.Cest.OrderTagEntityCest.getPageClass)"
}{
    "event": "test",
    "suite": "api",
    "test": "get page class (CG.Order.Test.Api.Cest.OrderTagEntityCest.getPageClass)",
    "status": "pass",
    "time": 0.36331796646118,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.97417902946472,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.99900913238525,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 244,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "1411-10-tag2",
                "1412-20-tag2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "isEqual",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "1411-10-tag2",
                "1412-20-tag2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1411-10-tag2",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1411-10-tag2",
                    "orderId": "1411-10",
                    "organisationUnitId": 1,
                    "tag": "tag2"
                }
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.92727589607239,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32264399528503,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32358598709106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.3195698261261,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.32627487182617,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.31457901000977,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.86011910438538,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.5886590480804,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.7249550819397,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.92109513282776,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32816791534424,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32259488105774,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.3210780620575,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.98820996284485,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88989615440369,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.93330478668213,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5237090587616,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the \/ endpoints (CG.Order.Test.Api.Cest.RootCest.viewEndpoints)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the \/ endpoints (CG.Order.Test.Api.Cest.RootCest.viewEndpoints)",
    "status": "pass",
    "time": 0.69794297218323,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.RootCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.RootCest.viewInHal)",
    "status": "pass",
    "time": 0.64373993873596,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.RootCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.RootCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.4071500301361,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check uplink (CG.Order.Test.Api.Cest.RootCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check uplink (CG.Order.Test.Api.Cest.RootCest.checkUplink)",
    "status": "pass",
    "time": 0.32988786697388,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.RootCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.RootCest.checkHeadRequest)",
    "status": "pass",
    "time": 0.92153787612915,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollection)",
    "status": "fail",
    "time": 0.92165088653564,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.event",
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.event",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkPagination)",
    "status": "fail",
    "time": 0.92576098442078,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 91,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "event",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventPage",
                [

                ],
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.event",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.hasFilters)",
    "status": "pass",
    "time": 0.3368091583252,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFilters)",
    "status": "pass",
    "time": 0.32192277908325,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.32501602172852,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntity)",
    "status": "pass",
    "time": 2.8573741912842,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32549214363098,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollection)",
    "status": "fail",
    "time": 0.97896885871887,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 263,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                null,
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 308,
            "function": "createEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.31935596466064,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.33414816856384,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.70672702789307,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.72252798080444,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.71894502639771,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.33557081222534,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.34616708755493,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.34851479530334,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testRangeFilters)",
    "status": "pass",
    "time": 0.34143805503845,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.32904481887817,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.3184130191803,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32306098937988,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewInHal)",
    "status": "fail",
    "time": 0.92418694496155,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service\/1\/event?page=1&limit=10"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1483681201935,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkUplink)",
    "status": "fail",
    "time": 0.88119006156921,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.94971895217896,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32375407218933,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32636022567749,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.88906407356262,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.event",
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    },
                    {
                        "id": 6,
                        "serviceId": 2,
                        "type": "type6",
                        "instances": 6,
                        "endpoint": "http:\/\/example6.com"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.event",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.94350004196167,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.34646892547607,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.getSortDirections)",
    "status": "pass",
    "time": 0.33614110946655,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSortCollection)",
    "status": "fail",
    "time": 0.93867683410645,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventPage",
                "\/service\/1\/event?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    },
                    {
                        "id": 6,
                        "serviceId": 2,
                        "type": "type6",
                        "instances": 6,
                        "endpoint": "http:\/\/example6.com"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.32451605796814,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.33144998550415,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.90715003013611,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                1,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 1,
                    "serviceId": 1,
                    "type": "type1",
                    "instances": 1,
                    "endpoint": "http:\/\/example1.com"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.90571904182434,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                2,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 2,
                    "serviceId": 1,
                    "type": "type2",
                    "instances": 2,
                    "endpoint": "http:\/\/example2.com"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewNonExistentEntity)",
    "status": "fail",
    "time": 0.91521501541138,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 70,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.34391593933105,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32728505134583,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.33356404304504,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.3207221031189,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.31804800033569,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.93036389350891,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.94255304336548,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.87905621528625,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deleteNonExistentEntity)",
    "status": "fail",
    "time": 0.94419407844543,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 298,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32246804237366,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32537198066711,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32724905014038,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.92938280105591,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service\/1\/event\/1"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.87080693244934,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.95092701911926,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.89454889297485,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.91385197639465,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.86806488037109,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.96371293067932,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 3.9105010032654,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.93410205841064,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.90281009674072,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 1.0578308105469,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "fail",
    "time": 0.98792695999146,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 184,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\/event\/1\"'s etag to change (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\/event\/1\"'s etag to change (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.89189887046814,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 223,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.99517488479614,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 1.0160460472107,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.32646298408508,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollection)",
    "status": "fail",
    "time": 1.0363259315491,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.service",
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.service",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.ServiceCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.ServiceCest.checkPagination)",
    "status": "fail",
    "time": 0.92313003540039,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 91,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "service",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\ServicePage",
                [

                ],
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.service",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.ServiceCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.ServiceCest.hasFilters)",
    "status": "pass",
    "time": 0.32456994056702,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.ServiceCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.ServiceCest.checkFilters)",
    "status": "pass",
    "time": 0.3277440071106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.ServiceCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.ServiceCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.32125902175903,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.ServiceCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.ServiceCest.createEntity)",
    "status": "pass",
    "time": 0.31832599639893,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32536196708679,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollection)",
    "status": "fail",
    "time": 1.044410943985,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 263,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                null,
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 308,
            "function": "createEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.3233699798584,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.ServiceCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.ServiceCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.33466386795044,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.ServiceCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.ServiceCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.71877193450928,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.ServiceCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.ServiceCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.72248697280884,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.73601007461548,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32452702522278,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.ServiceCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.ServiceCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32318782806396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.ServiceCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.ServiceCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32340002059937,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.ServiceCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.ServiceCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32735800743103,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.ServiceCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.ServiceCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.32477593421936,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.ServiceCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.ServiceCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32707905769348,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.ServiceCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.ServiceCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32205200195312,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceCest.viewInHal)",
    "status": "fail",
    "time": 0.93005919456482,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service?page=1&limit=10"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1276271343231,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceCest.checkUplink)",
    "status": "fail",
    "time": 0.91139197349548,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.9854850769043,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32373404502869,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32262897491455,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.9452269077301,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.service",
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.service",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.95528078079224,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.ServiceCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.ServiceCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.32218503952026,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.ServiceCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.ServiceCest.getSortDirections)",
    "status": "pass",
    "time": 0.32952499389648,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.ServiceCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.ServiceCest.checkSortCollection)",
    "status": "fail",
    "time": 0.962730884552,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\ServicePage",
                "\/service?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.ServiceCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.ServiceCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.31546497344971,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.ServiceCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.ServiceCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.32666993141174,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.98191714286804,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                1,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 1,
                    "type": "Type1",
                    "endpoint": "endpoint1"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.97709584236145,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                2,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 2,
                    "type": "Type2",
                    "endpoint": "endpoint2"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewNonExistentEntity)",
    "status": "fail",
    "time": 0.9890410900116,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 70,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.329017162323,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32212495803833,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.31450796127319,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 3.5356328487396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.3215229511261,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.95786595344543,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 1.031641960144,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 1.0044760704041,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deleteNonExistentEntity)",
    "status": "fail",
    "time": 0.97845005989075,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 298,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.ServiceEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.ServiceEntityCest.checkEntityEmbed)",
    "status": "fail",
    "time": 1.0163059234619,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 327,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "fail",
    "time": 0.90055298805237,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 382,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32669901847839,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.98296308517456,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service\/1"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.86510014533997,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceEntityCest.checkUplink)",
    "status": "fail",
    "time": 1.0049240589142,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.98274207115173,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.ServiceEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.ServiceEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.99543881416321,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.ServiceEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.ServiceEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.99152398109436,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.ServiceEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.ServiceEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.97732901573181,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.98709011077881,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.99781203269958,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.93940401077271,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 1.1090760231018,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "fail",
    "time": 1.0413661003113,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 184,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\"'s etag to change (CG.Order.Test.Api.Cest.ServiceEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\"'s etag to change (CG.Order.Test.Api.Cest.ServiceEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.96805095672607,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 223,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 1.0594182014465,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 1.0422298908234,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 0.92961406707764,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 323,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollection)",
    "status": "pass",
    "time": 1.5248620510101,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.TemplateCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.TemplateCest.checkPagination)",
    "status": "pass",
    "time": 3.2803020477295,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.TemplateCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.TemplateCest.hasFilters)",
    "status": "pass",
    "time": 0.34009599685669,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkFilters)",
    "status": "pass",
    "time": 1.1219840049744,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkMultiFilters)",
    "status": "pass",
    "time": 1.0915288925171,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.TemplateCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.TemplateCest.createEntity)",
    "status": "pass",
    "time": 0.32145500183105,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGet)",
    "status": "pass",
    "time": 3.5935609340668,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 2.310840845108,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 3.9931418895721,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.TemplateCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.TemplateCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.32382202148438,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.TemplateCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.TemplateCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.74205803871155,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.TemplateCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.TemplateCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.74887204170227,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.76237893104553,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32090282440186,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.TemplateCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.TemplateCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.31478190422058,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.TemplateCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.TemplateCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.32911086082458,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.TemplateCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.TemplateCest.testRangeFilters)",
    "status": "pass",
    "time": 0.32987189292908,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.TemplateCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.TemplateCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 1.5321750640869,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.TemplateCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.TemplateCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.33106398582458,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.TemplateCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.TemplateCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.33540391921997,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateCest.viewInHal)",
    "status": "pass",
    "time": 1.0931549072266,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1474039554596,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateCest.checkUplink)",
    "status": "pass",
    "time": 1.0802900791168,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.8600959777832,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.31210708618164,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.31854391098022,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.0746068954468,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.74129295349121,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.TemplateCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.TemplateCest.checkFiltersPagination)",
    "status": "pass",
    "time": 1.7482049465179,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.TemplateCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.TemplateCest.getSortDirections)",
    "status": "pass",
    "time": 0.32233691215515,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.TemplateCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.TemplateCest.checkSortCollection)",
    "status": "fail",
    "time": 0.71112108230591,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\TemplatePage",
                "\/template?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ]
                    },
                    {
                        "id": "2",
                        "type": "product",
                        "organisationUnitId": 2,
                        "minHeight": 200,
                        "minWidth": 300,
                        "elements": [
                            {
                                "templateType": "SellerAddress",
                                "fontSize": 14,
                                "fontFamily": "CG\\Template\\FontFamily\\Helvetica",
                                "fontColour": "blue"
                            }
                        ]
                    },
                    {
                        "id": "3",
                        "type": "ebay",
                        "organisationUnitId": 3,
                        "minHeight": 300,
                        "minWidth": 400,
                        "elements": [
                            {
                                "templateType": "DeliveryAddress",
                                "fontSize": 16,
                                "fontFamily": "CG\\Template\\FontFamily\\Symbol",
                                "fontColour": "green"
                            }
                        ]
                    },
                    {
                        "id": "4",
                        "type": "amazon",
                        "organisationUnitId": 4,
                        "minHeight": 400,
                        "minWidth": 500,
                        "elements": [
                            {
                                "templateType": "OrderTable"
                            }
                        ]
                    },
                    {
                        "id": "5",
                        "type": "invoice",
                        "organisationUnitId": 5,
                        "minHeight": 500,
                        "minWidth": 600,
                        "elements": [
                            {
                                "templateType": "Image",
                                "source": "data:\/\/image\/jpeg;base64,base64encodedImageData",
                                "format": "jpeg"
                            }
                        ]
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.TemplateCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.TemplateCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.32424306869507,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.TemplateCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.TemplateCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.31832480430603,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.99760913848877,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.97632813453674,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.91247391700745,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32261300086975,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.31953597068787,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.31818199157715,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.3227059841156,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32102394104004,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.92791080474854,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.5813040733337,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 4.2235159873962,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.93950200080872,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.32571601867676,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32236313819885,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32058596611023,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.99663305282593,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.8653199672699,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.1761119365692,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5353469848633,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.TemplateEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.TemplateEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.97173500061035,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.TemplateEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.TemplateEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.5987780094147,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.TemplateEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.TemplateEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.98472595214844,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.6937570571899,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.6883840560913,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.698089838028,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.0656728744507,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.108757019043,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/template\/1\"'s etag to change (CG.Order.Test.Api.Cest.TemplateEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/template\/1\"'s etag to change (CG.Order.Test.Api.Cest.TemplateEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 18.230674028397,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.199294090271,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.078192949295,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.32738900184631,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollection)",
    "status": "pass",
    "time": 0.98267078399658,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkPagination)",
    "status": "pass",
    "time": 2.7490100860596,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.UserPreference.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.UserPreference.hasFilters)",
    "status": "pass",
    "time": 0.32531595230103,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.UserPreference.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.UserPreference.checkFilters)",
    "status": "pass",
    "time": 0.32119297981262,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.UserPreference.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.UserPreference.checkMultiFilters)",
    "status": "pass",
    "time": 0.31694006919861,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.UserPreference.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.UserPreference.createEntity)",
    "status": "pass",
    "time": 0.31539392471313,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGet)",
    "status": "pass",
    "time": 0.32505488395691,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.31905007362366,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.32417583465576,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.31985592842102,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.UserPreference.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.UserPreference.createEmptyEntity)",
    "status": "pass",
    "time": 0.32926893234253,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.UserPreference.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.UserPreference.createInvalidEntity)",
    "status": "pass",
    "time": 0.32297897338867,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.UserPreference.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.UserPreference.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32186698913574,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.UserPreference.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.UserPreference.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.32099509239197,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.UserPreference.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.UserPreference.testSingleDateFilter)",
    "status": "pass",
    "time": 0.32152891159058,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.UserPreference.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.UserPreference.testDateRangeFilter)",
    "status": "pass",
    "time": 0.31966114044189,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.UserPreference.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.UserPreference.testRangeFilters)",
    "status": "pass",
    "time": 0.31662702560425,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.UserPreference.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.UserPreference.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.32039618492126,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.UserPreference.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.UserPreference.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.32037496566772,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.UserPreference.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.UserPreference.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.32630181312561,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreference.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreference.viewInHal)",
    "status": "pass",
    "time": 0.90955996513367,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreference.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreference.checkAllowedMethods)",
    "status": "pass",
    "time": 1.4113190174103,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreference.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreference.checkUplink)",
    "status": "pass",
    "time": 0.90573501586914,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreference.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreference.checkHeadRequest)",
    "status": "pass",
    "time": 1.5058479309082,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.32712817192078,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.32023787498474,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionAll)",
    "status": "fail",
    "time": 1.1210470199585,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.userPreference",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.userPreference",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.9575400352478,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.UserPreference.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.UserPreference.checkFiltersPagination)",
    "status": "pass",
    "time": 0.32077598571777,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.UserPreference.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.UserPreference.getSortDirections)",
    "status": "pass",
    "time": 0.32204794883728,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.UserPreference.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.UserPreference.checkSortCollection)",
    "status": "fail",
    "time": 0.91920304298401,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ],
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/1"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/2"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/3"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/4"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/5"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\UserPreferencePage",
                "\/userPreference?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.UserPreference.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.UserPreference.testTimestampFilter)",
    "status": "pass",
    "time": 0.32786202430725,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.UserPreference.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.UserPreference.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.32514500617981,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.91231489181519,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.94947695732117,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.91417288780212,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.32302093505859,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.32028198242188,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.31678795814514,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 3.6061689853668,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.32677006721497,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.92845582962036,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.594514131546,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.6108298301697,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.91046190261841,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.33143997192383,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32300209999084,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.32338500022888,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreferenceCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreferenceCest.viewInHal)",
    "status": "pass",
    "time": 0.96613693237305,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.84247517585754,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreferenceCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreferenceCest.checkUplink)",
    "status": "pass",
    "time": 0.91228890419006,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreferenceCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreferenceCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5894310474396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.UserPreferenceCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.UserPreferenceCest.hasETagHeader)",
    "status": "pass",
    "time": 0.98158597946167,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.UserPreferenceCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.UserPreferenceCest.sendETagGet304)",
    "status": "fail",
    "time": 1.5152640342712,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.UserPreferenceCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.UserPreferenceCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.95802903175354,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.7938411235809,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.7125971317291,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.6367678642273,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 1.0741910934448,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.97945523262024,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/userpreference\/1\"'s etag to change (CG.Order.Test.Api.Cest.UserPreferenceCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/userpreference\/1\"'s etag to change (CG.Order.Test.Api.Cest.UserPreferenceCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 17.992279052734,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 1.0287201404572,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 1.0761618614197,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.32277393341064,
    "trace": [

    ],
    "message": "",
    "output": ""
}
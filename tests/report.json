{
    "event": "suiteStart",
    "suite": "api",
    "tests": 784
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollection)",
    "status": "pass",
    "time": 0.6387939453125,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkPagination)",
    "status": "pass",
    "time": 2.6862180233002,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.AlertCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.AlertCest.hasFilters)",
    "status": "pass",
    "time": 0.28241491317749,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkFilters)",
    "status": "pass",
    "time": 0.2831711769104,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.27900290489197,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntity)",
    "status": "pass",
    "time": 0.28688383102417,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.27824997901917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.5153820514679,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.28534817695618,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28193783760071,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.AlertCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.AlertCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.61941814422607,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.61264085769653,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.6158618927002,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28331208229065,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.AlertCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.AlertCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28000092506409,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.AlertCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.AlertCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28219699859619,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testRangeFilters)",
    "status": "pass",
    "time": 0.28252601623535,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.AlertCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.AlertCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.2829852104187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.AlertCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.AlertCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.27941799163818,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.30498504638672,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertCest.viewInHal)",
    "status": "pass",
    "time": 0.79872512817383,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.90470194816589,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertCest.checkUplink)",
    "status": "pass",
    "time": 0.81569695472717,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5477359294891,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28565001487732,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28425478935242,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.92516207695007,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [alert] => alert 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.alert",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [alert] => alert 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.81643795967102,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.AlertCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.AlertCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.29319000244141,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.AlertCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.AlertCest.getSortDirections)",
    "status": "pass",
    "time": 0.28208708763123,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.AlertCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.AlertCest.checkSortCollection)",
    "status": "fail",
    "time": 0.8560049533844,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                [
                    {
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "timestamp": "2013-10-10 06:00:00",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/6"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "timestamp": "2013-10-10 04:00:00",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/4"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "timestamp": "2013-10-10 03:00:00",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/3"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "timestamp": "2013-10-10 02:00:00",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/2"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "timestamp": "2013-10-10 01:00:00",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/alert\/1"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/alert"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\AlertPage",
                "\/order\/1411-10\/alert?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28222107887268,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28433084487915,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.83920097351074,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.82417511940002,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.7977728843689,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28640103340149,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 2.7076950073242,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28477811813354,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28296279907227,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28359603881836,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.83354210853577,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.3671751022339,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.3513779640198,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.79237198829651,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28391003608704,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28045296669006,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.2795250415802,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.86649394035339,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.68938994407654,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.80999207496643,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.55814909935,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.AlertEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.AlertEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.883465051651,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.5930261611938,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.83134818077087,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.4254510402679,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.4623329639435,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.4855818748474,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.91345906257629,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.89929103851318,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/alert\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/alert\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 13.251527070999,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.90738415718079,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.86398196220398,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.28348302841187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.27860593795776,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.0388419628143,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.045401096344,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28695511817932,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.27629804611206,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.2810378074646,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.2795569896698,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.281898021698,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.27972602844238,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.28651404380798,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.2771430015564,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.28004002571106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.289635181427,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28044104576111,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28035807609558,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.1100361347198,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88839507102966,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.0491089820862,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.8667488098145,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollection)",
    "status": "pass",
    "time": 0.8341109752655,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkPagination)",
    "status": "pass",
    "time": 2.7012460231781,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.NoteCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.NoteCest.hasFilters)",
    "status": "pass",
    "time": 0.29468989372253,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkFilters)",
    "status": "pass",
    "time": 0.2888069152832,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.28024411201477,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntity)",
    "status": "pass",
    "time": 0.30015397071838,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.28834080696106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.5105500221252,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.28894400596619,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28365588188171,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.NoteCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.NoteCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.6125340461731,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.590176820755,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.61697101593018,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28185105323792,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.NoteCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.NoteCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.2826681137085,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.NoteCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.NoteCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28286099433899,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testRangeFilters)",
    "status": "pass",
    "time": 0.29457783699036,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.NoteCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.NoteCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.28282999992371,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.NoteCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.NoteCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.29252099990845,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.28564310073853,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteCest.viewInHal)",
    "status": "pass",
    "time": 0.8220739364624,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.91194486618042,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteCest.checkUplink)",
    "status": "pass",
    "time": 0.80050492286682,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.3621969223022,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.29068422317505,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28065204620361,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.84372282028198,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [note] => Note 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.note",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [note] => Note 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.81862902641296,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.NoteCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.NoteCest.checkFiltersPagination)",
    "status": "pass",
    "time": 2.1560399532318,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.NoteCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.NoteCest.getSortDirections)",
    "status": "pass",
    "time": 0.27797698974609,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.NoteCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.NoteCest.checkSortCollection)",
    "status": "fail",
    "time": 1.0487859249115,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                [
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "timestamp": "2013-10-10 06:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/6"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "timestamp": "2013-10-10 04:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/4"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "timestamp": "2013-10-10 03:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/3"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "timestamp": "2013-10-10 02:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/2"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    },
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "timestamp": "2013-10-10 01:00:00",
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/note\/1"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/note"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\NotePage",
                "\/order\/1411-10\/note?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28008699417114,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28051209449768,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.80410289764404,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.83728814125061,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.81212902069092,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28382611274719,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.27792406082153,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28273487091064,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28333401679993,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28663420677185,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.85200381278992,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.5934422016144,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.647922039032,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.81676506996155,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.31996202468872,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.31111812591553,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28536891937256,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.88416600227356,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.71144890785217,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.80034399032593,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5781509876251,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.NoteEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.NoteEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.8618528842926,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.3717827796936,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.82853603363037,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.4880599975586,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.4699568748474,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.4168820381165,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.90151810646057,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.88549590110779,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/note\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/note\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 14.238835096359,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.1214849948883,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.91340398788452,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.29702496528625,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollection)",
    "status": "pass",
    "time": 0.88177299499512,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkPagination)",
    "status": "pass",
    "time": 2.4825119972229,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.TrackingCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.TrackingCest.hasFilters)",
    "status": "pass",
    "time": 0.29734086990356,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFilters)",
    "status": "pass",
    "time": 0.28795099258423,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.282879114151,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntity)",
    "status": "pass",
    "time": 0.29413104057312,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.28581595420837,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.4728629589081,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.27946996688843,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28184509277344,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.62073588371277,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.60670399665833,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.59733295440674,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28305006027222,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28354907035828,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28493809700012,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testRangeFilters)",
    "status": "pass",
    "time": 0.2824079990387,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.TrackingCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.TrackingCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.29665112495422,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.TrackingCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.TrackingCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.28440189361572,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.2821569442749,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingCest.viewInHal)",
    "status": "pass",
    "time": 0.84648704528809,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.901859998703,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingCest.checkUplink)",
    "status": "pass",
    "time": 0.82539391517639,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5765779018402,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28531694412231,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28347611427307,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.0332021713257,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [number] => 1235\n    [carrier] => carrier 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.tracking",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderId] => 1412-20\n    [userId] => 5\n    [number] => 1235\n    [carrier] => carrier 5\n    [organisationUnitId] => 2\n    [timestamp] => 2013-10-10 05:00:00\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.8531858921051,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.28363680839539,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.TrackingCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.TrackingCest.getSortDirections)",
    "status": "pass",
    "time": 0.28128480911255,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSortCollection)",
    "status": "fail",
    "time": 0.81762099266052,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                [
                    {
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "timestamp": "2013-10-10 06:00:00",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/6"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "timestamp": "2013-10-10 04:00:00",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/4"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "timestamp": "2013-10-10 03:00:00",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/3"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "timestamp": "2013-10-10 02:00:00",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/2"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    },
                    {
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "timestamp": "2013-10-10 01:00:00",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10\/tracking\/1"
                            },
                            "up": {
                                "href": "\/order\/1411-10\/tracking"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\TrackingPage",
                "\/order\/1411-10\/tracking?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28757500648499,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28007197380066,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.83261108398438,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.81535887718201,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.85173606872559,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 1.9306259155273,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.27950406074524,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.27840495109558,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28758502006531,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.280592918396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.80561089515686,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.3730359077454,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.3805158138275,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.82048296928406,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28206396102905,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.29173707962036,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28322887420654,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.0491261482239,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.69871091842651,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.82295799255371,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.3558661937714,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.81264400482178,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.3842658996582,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.83359098434448,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.4396758079529,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.488765001297,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.4510419368744,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.87492895126343,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.91420388221741,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/tracking\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/tracking\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 14.716974020004,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.92877912521362,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.92814707756042,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.28408885002136,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.75919890403748,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.79377603530884,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 201,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                1,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 162,
            "function": "isEqual",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                1,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 148,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "organisationUnitId",
                1,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "changes": {
                        "totalDiscount": 0.1
                    },
                    "organisationUnitId": 1
                }
            ]
        }
    ],
    "message": "Failed asserting that 2 matches expected 1.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.96692299842834,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28361296653748,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.28325796127319,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.27877593040466,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28040790557861,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28887605667114,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.76490807533264,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.2671139240265,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.29130601882935,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.78799486160278,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28601002693176,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.2808690071106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28632211685181,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.82466602325439,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.73051285743713,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.77582097053528,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.3170840740204,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.80063891410828,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.3307540416718,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.77985596656799,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.3356997966766,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.3418350219727,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.3102469444275,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.85345888137817,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.82029294967651,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/userchange\"'s etag to change (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/userchange\"'s etag to change (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 13.654238939285,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.86882996559143,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.82072305679321,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.30333495140076,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollection)",
    "status": "pass",
    "time": 0.89314699172974,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkPagination)",
    "status": "pass",
    "time": 2.8762199878693,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderBatchCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderBatchCest.hasFilters)",
    "status": "pass",
    "time": 0.28234887123108,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkFilters)",
    "status": "pass",
    "time": 0.8578200340271,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.91918396949768,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEntity)",
    "status": "pass",
    "time": 0.28256916999817,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.28041505813599,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.27875804901123,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.27806091308594,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28435897827148,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.28869295120239,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderBatchCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderBatchCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.2824718952179,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28746700286865,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28263711929321,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderBatchCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderBatchCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28590989112854,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderBatchCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderBatchCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28115105628967,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testRangeFilters)",
    "status": "pass",
    "time": 0.28858399391174,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.60577917098999,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.59549379348755,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderBatchCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderBatchCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.29212999343872,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchCest.viewInHal)",
    "status": "pass",
    "time": 0.86776089668274,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.2085340023041,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchCest.checkUplink)",
    "status": "pass",
    "time": 0.91342711448669,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.4924800395966,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28562808036804,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28331089019775,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionAll)",
    "status": "pass",
    "time": 0.96682476997375,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.7069571018219,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderBatchCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderBatchCest.checkFiltersPagination)",
    "status": "pass",
    "time": 2.1441578865051,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderBatchCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderBatchCest.getSortDirections)",
    "status": "pass",
    "time": 0.28951287269592,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkSortCollection)",
    "status": "fail",
    "time": 0.61190605163574,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.orderBatch"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.orderBatch"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderBatchPage",
                "\/orderBatch?orderBy=name&orderDirection=ASC",
                [
                    {
                        "name": "1",
                        "organisationUnitId": 1,
                        "id": "1-1",
                        "active": 1
                    },
                    {
                        "name": "1",
                        "organisationUnitId": 2,
                        "id": "2-1",
                        "active": 1
                    },
                    {
                        "name": "2",
                        "organisationUnitId": 1,
                        "id": "1-2",
                        "active": 1
                    },
                    {
                        "name": "3",
                        "organisationUnitId": 1,
                        "id": "1-3",
                        "active": 1
                    },
                    {
                        "name": "4",
                        "organisationUnitId": 1,
                        "id": "1-4",
                        "active": 1
                    },
                    {
                        "name": "5",
                        "organisationUnitId": 1,
                        "id": "1-5",
                        "active": 0
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28810906410217,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.29168510437012,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.83405303955078,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.88741588592529,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 2.3776540756226,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28814911842346,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.2871310710907,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28286814689636,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.2843029499054,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28526592254639,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.79980301856995,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.3864209651947,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.4338290691376,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.79484415054321,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.27961683273315,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28101396560669,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.27934288978577,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.86411094665527,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.68896579742432,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.82450914382935,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.4083731174469,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderBatchEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderBatchEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.0055270195007,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.6017038822174,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.82696294784546,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.1711959838867,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.0971248149872,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.6657400131226,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.61847114562988,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.1111748218536,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderbatch\/1-1\"'s etag to change (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderbatch\/1-1\"'s etag to change (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 13.401128053665,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.66018104553223,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.63271188735962,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.29166913032532,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryFilter)",
    "status": "pass",
    "time": 1.1991810798645,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryExcludeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryExcludeFilter)",
    "status": "pass",
    "time": 1.3295121192932,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multiline orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiLineFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multiline orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiLineFilter)",
    "status": "fail",
    "time": 1.3444819450378,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 74,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Failed asserting that 5 is equal to 1"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 52,
            "function": "isOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                5,
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 37,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 84,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                1
            ]
        }
    ],
    "message": "Failed asserting that 5 is equal to 1",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multi same item orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiSameItemFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multi same item orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiSameItemFilter)",
    "status": "fail",
    "time": 1.2621958255768,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 74,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Failed asserting that 5 is equal to 2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 52,
            "function": "isOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                5,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 37,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 112,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                2
            ]
        }
    ],
    "message": "Failed asserting that 5 is equal to 2",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check archive filter works for this collection (CG.Order.Test.Api.Cest.OrderCest.checkIncludeArchivedFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "check archive filter works for this collection (CG.Order.Test.Api.Cest.OrderCest.checkIncludeArchivedFilter)",
    "status": "fail",
    "time": 1.3177769184113,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 74,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Failed asserting that 5 is equal to 0"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 52,
            "function": "isOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                5,
                0
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 37,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                0
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 140,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                0
            ]
        }
    ],
    "message": "Failed asserting that 5 is equal to 0",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollection)",
    "status": "pass",
    "time": 1.2102069854736,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkPagination)",
    "status": "pass",
    "time": 4.0745170116425,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderCest.hasFilters)",
    "status": "pass",
    "time": 0.29201912879944,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkFilters)",
    "status": "pass",
    "time": 1.3156650066376,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkMultiFilters)",
    "status": "pass",
    "time": 1.2056088447571,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderCest.createEntity)",
    "status": "pass",
    "time": 0.2828471660614,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.28666591644287,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28485918045044,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.28442001342773,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28067588806152,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.28220105171204,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.28777098655701,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28694009780884,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28785800933838,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28691506385803,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28406500816345,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by a single range filter. (CG.Order.Test.Api.Cest.OrderCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by a single range filter. (CG.Order.Test.Api.Cest.OrderCest.testRangeFilters)",
    "status": "pass",
    "time": 1.1314218044281,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 2.608402967453,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.28751611709595,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by searchterm (CG.Order.Test.Api.Cest.OrderCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by searchterm (CG.Order.Test.Api.Cest.OrderCest.checkSearchTermFilters)",
    "status": "fail",
    "time": 18.619638204575,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 749,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 713,
            "function": "checkSearchTermFilter",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderCest",
            "type": "->",
            "args": [
                {

                },
                "test-sku-1",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                ]
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderCest.viewInHal)",
    "status": "pass",
    "time": 1.2871088981628,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1526679992676,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderCest.checkUplink)",
    "status": "pass",
    "time": 1.263279914856,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.239837884903,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28730797767639,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28135395050049,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.331001996994,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.63433289527893,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderCest.checkFiltersPagination)",
    "status": "pass",
    "time": 1.9920380115509,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderCest.getSortDirections)",
    "status": "pass",
    "time": 0.27971506118774,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderCest.checkSortCollection)",
    "status": "fail",
    "time": 1.2617039680481,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ],
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1",
                        "_links": {
                            "self": {
                                "href": "\/order\/1411-10"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1411-11",
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item 1",
                                    "itemSku": "test-sku-1",
                                    "individualItemPrice": 1.99,
                                    "itemQuantity": 10,
                                    "itemTaxPercentage": 0.1,
                                    "individualItemDiscountPrice": 0.199,
                                    "itemVariationAttribute": {
                                        "colour": "red",
                                        "size": "10cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-11"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    },
                                    "_embedded": {
                                        "fee": [
                                            {
                                                "name": "eBayFee",
                                                "amount": 1.99,
                                                "orderItemId": "1411-11",
                                                "id": 1,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/1"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 2.99,
                                                "orderItemId": "1411-11",
                                                "id": 2,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/2"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 3.99,
                                                "orderItemId": "1411-11",
                                                "id": 3,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/3"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 4.99,
                                                "orderItemId": "1411-11",
                                                "id": 4,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/4"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "eBayFee",
                                                "amount": 6.99,
                                                "orderItemId": "1411-11",
                                                "id": 6,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/fee\/6"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/fee"
                                                    }
                                                }
                                            }
                                        ],
                                        "giftWrap": [
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 1",
                                                "giftWrapPrice": 1.99,
                                                "giftWrapTaxPercentage": 0.1,
                                                "orderItemId": "1411-11",
                                                "id": 1,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/1"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 2",
                                                "giftWrapPrice": 2.99,
                                                "giftWrapTaxPercentage": 0.2,
                                                "orderItemId": "1411-11",
                                                "id": 2,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/2"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 3",
                                                "giftWrapPrice": 3.99,
                                                "giftWrapTaxPercentage": 0.3,
                                                "orderItemId": "1411-11",
                                                "id": 3,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/3"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 4",
                                                "giftWrapPrice": 4.99,
                                                "giftWrapTaxPercentage": 0.4,
                                                "orderItemId": "1411-11",
                                                "id": 4,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/4"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            },
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 6",
                                                "giftWrapPrice": 6.99,
                                                "giftWrapTaxPercentage": 0.6,
                                                "orderItemId": "1411-11",
                                                "id": 6,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap\/6"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-11\/giftWrap"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": "1411-12",
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item 2",
                                    "itemSku": "test-sku-2",
                                    "individualItemPrice": 2.99,
                                    "itemQuantity": 20,
                                    "itemTaxPercentage": 0.2,
                                    "individualItemDiscountPrice": 0.299,
                                    "itemVariationAttribute": {
                                        "colour": "blue",
                                        "size": "20cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-12"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    },
                                    "_embedded": {
                                        "fee": [
                                            {
                                                "name": "eBayFee",
                                                "amount": 5.99,
                                                "orderItemId": "1411-12",
                                                "id": 5,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-12\/fee\/5"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-12\/fee"
                                                    }
                                                }
                                            }
                                        ],
                                        "giftWrap": [
                                            {
                                                "giftWrapType": "Standard",
                                                "giftWrapMessage": "Wrap Message 5",
                                                "giftWrapPrice": 5.99,
                                                "giftWrapTaxPercentage": 0.5,
                                                "orderItemId": "1411-12",
                                                "id": 5,
                                                "organisationUnitId": 1,
                                                "_links": {
                                                    "self": {
                                                        "href": "\/orderItem\/1411-12\/giftWrap\/5"
                                                    },
                                                    "up": {
                                                        "href": "\/orderItem\/1411-12\/giftWrap"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "id": "1411-13",
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item 3",
                                    "itemSku": "test-sku-3",
                                    "individualItemPrice": 3.99,
                                    "itemQuantity": 30,
                                    "itemTaxPercentage": 0.3,
                                    "individualItemDiscountPrice": 0.399,
                                    "itemVariationAttribute": {
                                        "colour": "yellow",
                                        "size": "30cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-13"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                },
                                {
                                    "id": "1411-44",
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item-1",
                                    "itemSku": "test-sku-4",
                                    "individualItemPrice": 4.99,
                                    "itemQuantity": 40,
                                    "itemTaxPercentage": 0.4,
                                    "individualItemDiscountPrice": 0.499,
                                    "itemVariationAttribute": {
                                        "colour": "green",
                                        "size": "40cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-44"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                },
                                {
                                    "id": "1411-46",
                                    "orderId": "1411-10",
                                    "accountId": 1411,
                                    "itemName": "Order Item-6",
                                    "itemSku": "test-sku-6",
                                    "individualItemPrice": 6.99,
                                    "itemQuantity": 60,
                                    "itemTaxPercentage": 0.6,
                                    "individualItemDiscountPrice": 0.699,
                                    "itemVariationAttribute": {
                                        "colour": "red",
                                        "size": "60cm"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-46"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ],
                            "alert": [
                                {
                                    "orderId": "1411-10",
                                    "userId": 6,
                                    "alert": "alert 6",
                                    "timestamp": "2013-10-10 06:00:00",
                                    "id": 6,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/6"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 4,
                                    "alert": "alert 4",
                                    "timestamp": "2013-10-10 04:00:00",
                                    "id": 4,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/4"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 3,
                                    "alert": "alert 3",
                                    "timestamp": "2013-10-10 03:00:00",
                                    "id": 3,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/3"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 2,
                                    "alert": "alert 2",
                                    "timestamp": "2013-10-10 02:00:00",
                                    "id": 2,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/2"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 1,
                                    "alert": "alert 1",
                                    "timestamp": "2013-10-10 01:00:00",
                                    "id": 1,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/alert\/1"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/alert"
                                        }
                                    }
                                }
                            ],
                            "note": [
                                {
                                    "id": 6,
                                    "orderId": "1411-10",
                                    "userId": 6,
                                    "note": "Note 6",
                                    "timestamp": "2013-10-10 06:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/6"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 4,
                                    "orderId": "1411-10",
                                    "userId": 4,
                                    "note": "Note 4",
                                    "timestamp": "2013-10-10 04:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/4"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 3,
                                    "orderId": "1411-10",
                                    "userId": 3,
                                    "note": "Note 3",
                                    "timestamp": "2013-10-10 03:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/3"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 2,
                                    "orderId": "1411-10",
                                    "userId": 2,
                                    "note": "Note 2",
                                    "timestamp": "2013-10-10 02:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/2"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                },
                                {
                                    "id": 1,
                                    "orderId": "1411-10",
                                    "userId": 1,
                                    "note": "Note 1",
                                    "timestamp": "2013-10-10 01:00:00",
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/note\/1"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/note"
                                        }
                                    }
                                }
                            ],
                            "tracking": [
                                {
                                    "orderId": "1411-10",
                                    "userId": 6,
                                    "number": "1236",
                                    "carrier": "carrier 6",
                                    "timestamp": "2013-10-10 06:00:00",
                                    "id": 6,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/6"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 4,
                                    "number": "1234",
                                    "carrier": "carrier 4",
                                    "timestamp": "2013-10-10 04:00:00",
                                    "id": 4,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/4"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 3,
                                    "number": "1233",
                                    "carrier": "carrier 3",
                                    "timestamp": "2013-10-10 03:00:00",
                                    "id": 3,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/3"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 2,
                                    "number": "1232",
                                    "carrier": "carrier 2",
                                    "timestamp": "2013-10-10 02:00:00",
                                    "id": 2,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/2"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                },
                                {
                                    "orderId": "1411-10",
                                    "userId": 1,
                                    "number": "1231",
                                    "carrier": "carrier 1",
                                    "timestamp": "2013-10-10 01:00:00",
                                    "id": 1,
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/tracking\/1"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10\/tracking"
                                        }
                                    }
                                }
                            ],
                            "userChange": [
                                {
                                    "orderId": "1411-10",
                                    "changes": {
                                        "shippingAddressCompanyName": "Wilki Ltd"
                                    },
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1411-10\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1411-10"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2",
                        "_links": {
                            "self": {
                                "href": "\/order\/1412-20"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1411-45",
                                    "orderId": "1412-20",
                                    "accountId": 1411,
                                    "itemName": "Order Item-2",
                                    "itemSku": "test-sku-5",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 50,
                                    "itemTaxPercentage": 0.5,
                                    "individualItemDiscountPrice": 0.599,
                                    "itemVariationAttribute": {
                                        "colour": "red",
                                        "size": "50cm"
                                    },
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1411-45"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ],
                            "alert": [
                                {
                                    "orderId": "1412-20",
                                    "userId": 5,
                                    "alert": "alert 5",
                                    "timestamp": "2013-10-10 05:00:00",
                                    "id": 5,
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/alert\/5"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20\/alert"
                                        }
                                    }
                                }
                            ],
                            "note": [
                                {
                                    "id": 5,
                                    "orderId": "1412-20",
                                    "userId": 5,
                                    "note": "Note 5",
                                    "timestamp": "2013-10-10 05:00:00",
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/note\/5"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20\/note"
                                        }
                                    }
                                }
                            ],
                            "tracking": [
                                {
                                    "orderId": "1412-20",
                                    "userId": 5,
                                    "number": "1235",
                                    "carrier": "carrier 5",
                                    "timestamp": "2013-10-10 05:00:00",
                                    "id": 5,
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/tracking\/5"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20\/tracking"
                                        }
                                    }
                                }
                            ],
                            "userChange": [
                                {
                                    "orderId": "1412-20",
                                    "changes": {
                                        "totalDiscount": 0.1
                                    },
                                    "organisationUnitId": 2,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1412-20\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1412-20"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3",
                        "_links": {
                            "self": {
                                "href": "\/order\/1413-30"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "userChange": [
                                {
                                    "orderId": "1413-30",
                                    "changes": {
                                        "billingAddressCompanyName": "Wilki Ltd",
                                        "billingAddressFullName": "Matthew King"
                                    },
                                    "organisationUnitId": 3,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1413-30\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1413-30"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4",
                        "_links": {
                            "self": {
                                "href": "\/order\/1414-40"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "userChange": [
                                {
                                    "orderId": "1414-40",
                                    "changes": {
                                        "totalDiscount": 0.1,
                                        "shippingAddressCompanyName": "Wilki Ltd",
                                        "shippingAddressFullName": "Matthew King"
                                    },
                                    "organisationUnitId": 4,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1414-40\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1414-40"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5",
                        "_links": {
                            "self": {
                                "href": "\/order\/1415-50"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "userChange": [
                                {
                                    "orderId": "1415-50",
                                    "changes": {
                                        "total": 23.99,
                                        "shippingPrice": 13.99,
                                        "totalDiscount": 0.1,
                                        "billingAddressCompanyName": "Wilki Ltd",
                                        "billingAddressFullName": "Matthew King"
                                    },
                                    "organisationUnitId": 5,
                                    "_links": {
                                        "self": {
                                            "href": "\/order\/1415-50\/userChange"
                                        },
                                        "up": {
                                            "href": "\/order\/1415-50"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderPage",
                "\/order?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28507614135742,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28432083129883,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.18195104599,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.1984541416168,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 1.1976461410522,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28478097915649,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.28132891654968,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.2838408946991,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.2786660194397,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28041195869446,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 1.0013720989227,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 3.4870290756226,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 2.1752150058746,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.99636507034302,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 1.9720640182495,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "fail",
    "time": 0.83376097679138,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 382,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28161883354187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderEntityCest.viewInHal)",
    "status": "pass",
    "time": 1.1693890094757,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.69761085510254,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderEntityCest.checkUplink)",
    "status": "pass",
    "time": 1.0688378810883,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 2.07736992836,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 1.1712880134583,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 2.0672190189362,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.0698599815369,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.9958498477936,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 2.4457240104675,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 2.0303990840912,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.1959948539734,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.0696241855621,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\"'s etag to change (CG.Order.Test.Api.Cest.OrderEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\"'s etag to change (CG.Order.Test.Api.Cest.OrderEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 16.374213933945,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.1809220314026,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.1464068889618,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 1.4398920536041,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 328,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollection)",
    "status": "pass",
    "time": 0.81851696968079,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkPagination)",
    "status": "pass",
    "time": 2.6441190242767,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.hasFilters)",
    "status": "pass",
    "time": 0.30114698410034,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFilters)",
    "status": "pass",
    "time": 0.29102993011475,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.28666090965271,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntity)",
    "status": "pass",
    "time": 0.28613901138306,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.29090690612793,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.4612867832184,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.28336000442505,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.2812659740448,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.59338402748108,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.58699202537537,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.61383581161499,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28312301635742,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28301000595093,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28316402435303,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testRangeFilters)",
    "status": "pass",
    "time": 0.28332114219666,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.27875590324402,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.2792661190033,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.28208303451538,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewInHal)",
    "status": "pass",
    "time": 1.0225081443787,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.91213202476501,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkUplink)",
    "status": "pass",
    "time": 0.81172704696655,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.3452839851379,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28110599517822,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28753304481506,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionAll)",
    "status": "fail",
    "time": 1.070582151413,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field orderItemId is \"1411-12\" and should be \"1411-12\" or maybe this is missing: Array\n(\n    [orderItemId] => 1411-12\n    [amount] => 5.99\n    [id] => 5\n    [organisationUnitId] => 2\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.fee",
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 2
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field orderItemId is \"1411-12\" and should be \"1411-12\" or maybe this is missing: Array\n(\n    [orderItemId] => 1411-12\n    [amount] => 5.99\n    [id] => 5\n    [organisationUnitId] => 2\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.83895802497864,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFiltersPagination)",
    "status": "pass",
    "time": 1.6023941040039,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.FeeCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.FeeCest.getSortDirections)",
    "status": "pass",
    "time": 0.28138208389282,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSortCollection)",
    "status": "fail",
    "time": 0.8039698600769,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 2
                    }
                ],
                [
                    {
                        "name": "eBayFee",
                        "amount": 1.99,
                        "orderItemId": "1411-11",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/1"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 2.99,
                        "orderItemId": "1411-11",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/2"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 3.99,
                        "orderItemId": "1411-11",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/3"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 4.99,
                        "orderItemId": "1411-11",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/4"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 6.99,
                        "orderItemId": "1411-11",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/6"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItem\\FeePage",
                "\/orderItem\/1411-11\/fee?orderBy=orderItemId&orderDirection=ASC",
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 2
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28608894348145,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28650903701782,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.84229588508606,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.79217791557312,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.81953191757202,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28514003753662,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.27934885025024,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28450202941895,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.29103803634644,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28062915802002,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.85198402404785,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.4014239311218,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.3582618236542,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.81201100349426,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28338599205017,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.27992606163025,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28477001190186,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.89029502868652,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.69986796379089,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.824551820755,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.5578198432922,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.86419296264648,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.3795719146729,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.83005499839783,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.6061520576477,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.7365291118622,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.4250581264496,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.0429499149323,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.95144104957581,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/fee\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/fee\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 13.536654949188,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.85953307151794,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 1.1328730583191,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.28556513786316,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollection)",
    "status": "pass",
    "time": 0.85278105735779,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkPagination)",
    "status": "pass",
    "time": 2.4376871585846,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.hasFilters)",
    "status": "pass",
    "time": 0.28419494628906,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFilters)",
    "status": "pass",
    "time": 0.2884349822998,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.28579592704773,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntity)",
    "status": "pass",
    "time": 0.28167796134949,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.28674006462097,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 1.5087881088257,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.29389405250549,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.2924427986145,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.63904285430908,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.62753105163574,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.60273504257202,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.29098200798035,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28643298149109,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28728008270264,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testRangeFilters)",
    "status": "pass",
    "time": 0.29103589057922,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.28724098205566,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.28542685508728,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.28886890411377,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewInHal)",
    "status": "pass",
    "time": 0.78224301338196,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.91253089904785,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkUplink)",
    "status": "pass",
    "time": 0.80886483192444,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.3188319206238,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28136706352234,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28246593475342,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.8466010093689,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderItemId] => 1411-12\n    [giftWrapMessage] => Wrap Message 5\n    [giftWrapPrice] => 5.99\n    [giftWrapTaxPercentage] => 0.5\n    [organisationUnitId] => 2\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.giftWrap",
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 2
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderItemId] => 1411-12\n    [giftWrapMessage] => Wrap Message 5\n    [giftWrapPrice] => 5.99\n    [giftWrapTaxPercentage] => 0.5\n    [organisationUnitId] => 2\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.86552000045776,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.28332686424255,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.getSortDirections)",
    "status": "pass",
    "time": 0.28673195838928,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSortCollection)",
    "status": "fail",
    "time": 0.84055805206299,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 2
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ],
                [
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "orderItemId": "1411-11",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/1"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "orderItemId": "1411-11",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/2"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "orderItemId": "1411-11",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/3"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "orderItemId": "1411-11",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/4"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "orderItemId": "1411-11",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/6"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItem\\GiftWrapPage",
                "\/orderItem\/1411-11\/giftWrap?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 2
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.29859900474548,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.29307198524475,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 1.0477380752563,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 1.0244851112366,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.79597687721252,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.29318904876709,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.28709816932678,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 2.1254601478577,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28310108184814,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28556489944458,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.83818387985229,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.4393150806427,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.4911828041077,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.85812282562256,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.29073691368103,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28253507614136,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28166913986206,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.851891040802,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.71612000465393,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.84596419334412,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.2700259685516,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.79285287857056,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.6017858982086,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.81218194961548,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.3616280555725,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.4630839824677,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.4889140129089,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.80946803092957,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.87348508834839,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/giftwrap\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/giftwrap\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 12.720090150833,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.2172858715057,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.87533092498779,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.28578090667725,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.85248517990112,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.94733500480652,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.88606691360474,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28794288635254,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.28325986862183,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.29255986213684,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28522205352783,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28228497505188,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.90529704093933,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.5785541534424,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.28369092941284,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.80931878089905,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 1.8723528385162,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "fail",
    "time": 0.81113195419312,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 382,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28526520729065,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.85332322120667,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.73155689239502,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.9521951675415,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.6042850017548,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItemEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItemEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.84588408470154,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 1.7208981513977,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.95754599571228,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.6464729309082,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.5267250537872,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.5767250061035,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 1.0429401397705,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 1.2233610153198,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\"'s etag to change (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\"'s etag to change (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 13.322020053864,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.98541498184204,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.94283890724182,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 1.3298490047455,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 328,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollection)",
    "status": "pass",
    "time": 0.82042479515076,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkPagination)",
    "status": "pass",
    "time": 2.5710098743439,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderTagCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderTagCest.hasFilters)",
    "status": "pass",
    "time": 0.28055596351624,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkFilters)",
    "status": "pass",
    "time": 0.839595079422,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.81129217147827,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderTagCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderTagCest.createEntity)",
    "status": "pass",
    "time": 0.28500390052795,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.28473615646362,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28097295761108,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.28664517402649,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28096389770508,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderTagCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderTagCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.28458786010742,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderTagCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderTagCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.29824686050415,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28020811080933,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.27873110771179,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderTagCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderTagCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28196406364441,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderTagCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderTagCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28554010391235,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderTagCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderTagCest.testRangeFilters)",
    "status": "pass",
    "time": 0.2850489616394,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderTagCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderTagCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.92120003700256,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderTagCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderTagCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.28414797782898,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderTagCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderTagCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.2808620929718,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagCest.viewInHal)",
    "status": "pass",
    "time": 0.83401894569397,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1056702136993,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagCest.checkUplink)",
    "status": "pass",
    "time": 0.88511681556702,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.3370018005371,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28285098075867,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.2792329788208,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionAll)",
    "status": "pass",
    "time": 1.081827878952,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.60813212394714,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderTagCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderTagCest.checkFiltersPagination)",
    "status": "pass",
    "time": 1.4358718395233,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderTagCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderTagCest.getSortDirections)",
    "status": "pass",
    "time": 0.30224895477295,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderTagCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderTagCest.checkSortCollection)",
    "status": "fail",
    "time": 0.59630918502808,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.orderTag"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.orderTag"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderTagPage",
                "\/orderTag?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-10-tag1",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag1"
                    },
                    {
                        "id": "1411-10-tag2",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag2"
                    },
                    {
                        "id": "1411-10-tag5",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag5"
                    },
                    {
                        "id": "1412-20-tag3",
                        "orderId": "1412-20",
                        "organisationUnitId": 2,
                        "tag": "tag3"
                    },
                    {
                        "id": "1413-30-tag4",
                        "orderId": "1413-30",
                        "organisationUnitId": 3,
                        "tag": "tag4"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampFilter)",
    "status": "pass",
    "time": 1.4533050060272,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28603315353394,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get page class (CG.Order.Test.Api.Cest.OrderTagEntityCest.getPageClass)"
}{
    "event": "test",
    "suite": "api",
    "test": "get page class (CG.Order.Test.Api.Cest.OrderTagEntityCest.getPageClass)",
    "status": "pass",
    "time": 0.27996301651001,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.68726396560669,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.73969006538391,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 201,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "1411-10-tag2",
                "1412-20-tag2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 162,
            "function": "isEqual",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "1411-10-tag2",
                "1412-20-tag2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 148,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1411-10-tag2",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1411-10-tag2",
                    "orderId": "1411-10",
                    "organisationUnitId": 1,
                    "tag": "tag2"
                }
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.69016981124878,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28200602531433,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.2817690372467,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.27965593338013,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28205513954163,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28286004066467,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.74543190002441,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.2286341190338,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.2593619823456,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.70369291305542,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28352880477905,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28933000564575,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28624701499939,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.77953505516052,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.70804190635681,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.67746782302856,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.1443750858307,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the \/ endpoints (CG.Order.Test.Api.Cest.RootCest.viewEndpoints)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the \/ endpoints (CG.Order.Test.Api.Cest.RootCest.viewEndpoints)",
    "status": "fail",
    "time": 0.51294684410095,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json "
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EndpointsTrait.php",
            "line": 28,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_links",
                {
                    "self": {
                        "href": "\/"
                    },
                    "order": {
                        "href": "\/order"
                    },
                    "service": {
                        "href": "\/service"
                    },
                    "userPreference": {
                        "href": "\/userPreference"
                    }
                }
            ]
        }
    ],
    "message": "Expected value not found in the response Json \nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.RootCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.RootCest.viewInHal)",
    "status": "pass",
    "time": 0.52888894081116,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.RootCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.RootCest.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1217150688171,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check uplink (CG.Order.Test.Api.Cest.RootCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check uplink (CG.Order.Test.Api.Cest.RootCest.checkUplink)",
    "status": "pass",
    "time": 0.28709506988525,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.RootCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.RootCest.checkHeadRequest)",
    "status": "pass",
    "time": 0.75610089302063,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollection)",
    "status": "fail",
    "time": 0.7223801612854,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 225,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 233,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.event",
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.event",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkPagination)",
    "status": "fail",
    "time": 0.69336104393005,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 48,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 37,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "event",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventPage",
                [

                ],
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.event",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.hasFilters)",
    "status": "pass",
    "time": 0.27906084060669,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFilters)",
    "status": "pass",
    "time": 0.30070304870605,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.28404188156128,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntity)",
    "status": "pass",
    "time": 0.27811002731323,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.2834210395813,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollection)",
    "status": "fail",
    "time": 0.77191114425659,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 140,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 247,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                null,
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 292,
            "function": "createEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.2828369140625,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28171396255493,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.58864688873291,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.57707595825195,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.60686206817627,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.28429794311523,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.27990198135376,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28456091880798,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testRangeFilters)",
    "status": "pass",
    "time": 0.28921580314636,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.28357696533203,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.29422187805176,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.27746295928955,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewInHal)",
    "status": "fail",
    "time": 0.72435808181763,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 140,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service\/1\/event?page=1&limit=10"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.94051790237427,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkUplink)",
    "status": "fail",
    "time": 0.72756600379944,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.72716403007507,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.29479098320007,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28199195861816,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.71089506149292,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 225,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 233,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.event",
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    },
                    {
                        "id": 6,
                        "serviceId": 2,
                        "type": "type6",
                        "instances": 6,
                        "endpoint": "http:\/\/example6.com"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.event",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.67528080940247,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.28330087661743,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.getSortDirections)",
    "status": "pass",
    "time": 0.281986951828,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.checkSortCollection)",
    "status": "fail",
    "time": 0.75849008560181,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.event"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventPage",
                "\/service\/1\/event?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "serviceId": 1,
                        "type": "type1",
                        "instances": 1,
                        "endpoint": "http:\/\/example1.com"
                    },
                    {
                        "id": 2,
                        "serviceId": 1,
                        "type": "type2",
                        "instances": 2,
                        "endpoint": "http:\/\/example2.com"
                    },
                    {
                        "id": 3,
                        "serviceId": 1,
                        "type": "type3",
                        "instances": 3,
                        "endpoint": "http:\/\/example3.com"
                    },
                    {
                        "id": 4,
                        "serviceId": 1,
                        "type": "type4",
                        "instances": 4,
                        "endpoint": "http:\/\/example4.com"
                    },
                    {
                        "id": 5,
                        "serviceId": 1,
                        "type": "type5",
                        "instances": 5,
                        "endpoint": "http:\/\/example5.com"
                    },
                    {
                        "id": 6,
                        "serviceId": 2,
                        "type": "type6",
                        "instances": 6,
                        "endpoint": "http:\/\/example6.com"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28316497802734,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Service.SubscribedEventCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28161215782166,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 2.8894770145416,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 162,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 148,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                1,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 1,
                    "serviceId": 1,
                    "type": "type1",
                    "instances": 1,
                    "endpoint": "http:\/\/example1.com"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.74072289466858,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 162,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 148,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                2,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 2,
                    "serviceId": 1,
                    "type": "type2",
                    "instances": 2,
                    "endpoint": "http:\/\/example2.com"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewNonExistentEntity)",
    "status": "fail",
    "time": 0.74327611923218,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 70,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.29338097572327,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.30175709724426,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28545689582825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28050088882446,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28343105316162,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.71347498893738,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.68007898330688,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.75970888137817,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.deleteNonExistentEntity)",
    "status": "fail",
    "time": 0.73699402809143,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 298,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28579998016357,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28280401229858,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.2796618938446,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.77440285682678,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 140,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service\/1\/event\/1"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.74710702896118,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.679936170578,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.73780703544617,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.710697889328,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.74890398979187,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.7499361038208,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.7208411693573,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.68018913269043,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.73196792602539,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.73666405677795,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "fail",
    "time": 0.78777384757996,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 184,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\/event\/1\"'s etag to change (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\/event\/1\"'s etag to change (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.73936200141907,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\Service\\SubscribedEventEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 223,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Service\\SubscribedEventEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.79244089126587,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.73895502090454,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Service.SubscribedEventEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.27945017814636,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollection)",
    "status": "fail",
    "time": 0.75303792953491,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 225,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 233,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.service",
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.service",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.ServiceCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.ServiceCest.checkPagination)",
    "status": "fail",
    "time": 0.72152304649353,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 48,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 37,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "service",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\ServicePage",
                [

                ],
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.service",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.ServiceCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.ServiceCest.hasFilters)",
    "status": "pass",
    "time": 0.26755213737488,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.ServiceCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.ServiceCest.checkFilters)",
    "status": "pass",
    "time": 0.28435206413269,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.ServiceCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.ServiceCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.28473997116089,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.ServiceCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.ServiceCest.createEntity)",
    "status": "pass",
    "time": 0.29477596282959,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.27928686141968,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollection)",
    "status": "fail",
    "time": 0.80482792854309,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 140,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 247,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                null,
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 292,
            "function": "createEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.2841808795929,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.ServiceCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.ServiceCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.27846908569336,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.ServiceCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.ServiceCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.58837199211121,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.ServiceCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.ServiceCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.58767795562744,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.59393382072449,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.ServiceCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.2888331413269,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.ServiceCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.ServiceCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28263998031616,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.ServiceCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.ServiceCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28032803535461,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.ServiceCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.ServiceCest.testRangeFilters)",
    "status": "pass",
    "time": 0.3015570640564,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.ServiceCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.ServiceCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.28070998191833,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.ServiceCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.ServiceCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.28354501724243,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.ServiceCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.ServiceCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.28111290931702,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceCest.viewInHal)",
    "status": "fail",
    "time": 0.74245691299438,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 140,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service?page=1&limit=10"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.88729882240295,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceCest.checkUplink)",
    "status": "fail",
    "time": 0.7314019203186,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.68915987014771,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28975796699524,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.ServiceCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.27946209907532,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.74734401702881,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 225,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 233,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.service",
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.service",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.ServiceCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 2.8358240127563,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.ServiceCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.ServiceCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.28651905059814,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.ServiceCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.ServiceCest.getSortDirections)",
    "status": "pass",
    "time": 0.28158712387085,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.ServiceCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.ServiceCest.checkSortCollection)",
    "status": "fail",
    "time": 0.75406217575073,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.service"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\ServicePage",
                "\/service?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "type": "Type1",
                        "endpoint": "endpoint1"
                    },
                    {
                        "id": 2,
                        "type": "Type2",
                        "endpoint": "endpoint2"
                    },
                    {
                        "id": 3,
                        "type": "Type3",
                        "endpoint": "endpoint3"
                    },
                    {
                        "id": 4,
                        "type": "Type4",
                        "endpoint": "endpoint4"
                    },
                    {
                        "id": 5,
                        "type": "Type5",
                        "endpoint": "endpoint5"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.ServiceCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.ServiceCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.28190207481384,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.ServiceCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.ServiceCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.28029584884644,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.77666902542114,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 162,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 148,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                1,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 1,
                    "type": "Type1",
                    "endpoint": "endpoint1"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.76235389709473,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 80,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 162,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 148,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                2,
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": 2,
                    "type": "Type2",
                    "endpoint": "endpoint2"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.viewNonExistentEntity)",
    "status": "fail",
    "time": 0.7199399471283,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 70,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.2843120098114,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.28383016586304,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28175687789917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.29886293411255,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.ServiceEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28546595573425,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.77348113059998,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.72034597396851,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.79132485389709,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.ServiceEntityCest.deleteNonExistentEntity)",
    "status": "fail",
    "time": 0.78706097602844,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 298,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.ServiceEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.ServiceEntityCest.checkEntityEmbed)",
    "status": "fail",
    "time": 0.76358890533447,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 327,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "fail",
    "time": 0.67006993293762,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 382,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                404
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 404.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28480195999146,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.ServiceEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.76621007919312,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 140,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/service\/1"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.ServiceEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.69550108909607,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.ServiceEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.79849600791931,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.ServiceEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.77153897285461,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.ServiceEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.ServiceEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.73636293411255,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.ServiceEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.ServiceEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.81517601013184,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.ServiceEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.ServiceEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.72536611557007,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.80980706214905,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.78358197212219,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.76946306228638,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.78462290763855,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "fail",
    "time": 0.84416103363037,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 184,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\"'s etag to change (CG.Order.Test.Api.Cest.ServiceEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/service\/1\"'s etag to change (CG.Order.Test.Api.Cest.ServiceEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.73764395713806,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 223,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\ServiceEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.83191800117493,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.ServiceEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.87482404708862,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.ServiceEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 0.73427391052246,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 497,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 323,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/service\/1\/event\/1",
                "CG\\Order\\Test\\Api\\Page\\ServiceEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollection)",
    "status": "pass",
    "time": 0.71223092079163,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkPagination)",
    "status": "pass",
    "time": 2.1280019283295,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.UserPreference.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.UserPreference.hasFilters)",
    "status": "pass",
    "time": 0.28604793548584,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.UserPreference.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.UserPreference.checkFilters)",
    "status": "pass",
    "time": 0.28869485855103,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.UserPreference.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.UserPreference.checkMultiFilters)",
    "status": "pass",
    "time": 0.28007388114929,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.UserPreference.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.UserPreference.createEntity)",
    "status": "pass",
    "time": 0.27870988845825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGet)",
    "status": "pass",
    "time": 0.30333495140076,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28734421730042,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.29875802993774,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28403902053833,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.UserPreference.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.UserPreference.createEmptyEntity)",
    "status": "pass",
    "time": 0.28183197975159,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.UserPreference.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.UserPreference.createInvalidEntity)",
    "status": "pass",
    "time": 0.28440308570862,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.UserPreference.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.UserPreference.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28428602218628,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.UserPreference.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.UserPreference.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.2798547744751,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.UserPreference.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.UserPreference.testSingleDateFilter)",
    "status": "pass",
    "time": 0.28338313102722,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.UserPreference.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.UserPreference.testDateRangeFilter)",
    "status": "pass",
    "time": 0.28148293495178,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.UserPreference.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.UserPreference.testRangeFilters)",
    "status": "pass",
    "time": 2.4263200759888,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.UserPreference.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.UserPreference.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.27725887298584,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.UserPreference.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.UserPreference.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.28082418441772,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.UserPreference.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.UserPreference.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.28314995765686,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreference.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreference.viewInHal)",
    "status": "pass",
    "time": 0.77731108665466,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreference.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreference.checkAllowedMethods)",
    "status": "pass",
    "time": 1.1106321811676,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreference.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreference.checkUplink)",
    "status": "pass",
    "time": 0.75846290588379,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreference.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreference.checkHeadRequest)",
    "status": "pass",
    "time": 1.1496109962463,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.28930997848511,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.28177094459534,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionAll)",
    "status": "fail",
    "time": 0.74014115333557,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 219,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 225,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 233,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.userPreference",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.userPreference",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.70520901679993,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.UserPreference.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.UserPreference.checkFiltersPagination)",
    "status": "pass",
    "time": 0.2856810092926,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.UserPreference.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.UserPreference.getSortDirections)",
    "status": "pass",
    "time": 0.28403377532959,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.UserPreference.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.UserPreference.checkSortCollection)",
    "status": "fail",
    "time": 0.74121594429016,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 409,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ],
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/1"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/2"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/3"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/4"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/5"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\UserPreferencePage",
                "\/userPreference?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.UserPreference.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.UserPreference.testTimestampFilter)",
    "status": "pass",
    "time": 0.27726793289185,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.UserPreference.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.UserPreference.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.27753591537476,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.7741961479187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.74171090126038,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.69695782661438,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.28583097457886,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.27680206298828,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.28058505058289,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.28228902816772,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.28167295455933,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.74731588363647,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 1.2081649303436,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 1.2132439613342,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.70402693748474,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.28141617774963,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28347110748291,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.28256678581238,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreferenceCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreferenceCest.viewInHal)",
    "status": "pass",
    "time": 0.78050708770752,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.68721604347229,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreferenceCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreferenceCest.checkUplink)",
    "status": "pass",
    "time": 0.7776939868927,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreferenceCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreferenceCest.checkHeadRequest)",
    "status": "pass",
    "time": 1.1726400852203,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.UserPreferenceCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.UserPreferenceCest.hasETagHeader)",
    "status": "pass",
    "time": 0.76627087593079,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.UserPreferenceCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.UserPreferenceCest.sendETagGet304)",
    "status": "fail",
    "time": 1.1766400337219,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.UserPreferenceCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.UserPreferenceCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.77842092514038,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETag)",
    "status": "fail",
    "time": 1.2204849720001,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 1.2267689704895,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 1.3104181289673,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.78641200065613,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.75383281707764,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/userpreference\/1\"'s etag to change (CG.Order.Test.Api.Cest.UserPreferenceCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/userpreference\/1\"'s etag to change (CG.Order.Test.Api.Cest.UserPreferenceCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 12.690397977829,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.81556701660156,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.74538111686707,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.28604412078857,
    "trace": [

    ],
    "message": "",
    "output": ""
}
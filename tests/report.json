{
    "event": "suiteStart",
    "suite": "api",
    "tests": 766
}{
    "event": "testStart",
    "suite": "api",
    "test": "view collection all (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view collection all (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionAll)",
    "status": "pass",
    "time": 0.0046899318695068,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollection)",
    "status": "pass",
    "time": 0.19787311553955,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkPagination)",
    "status": "pass",
    "time": 0.45041584968567,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.AlertCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.27383184432983,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.AlertCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.AlertCest.hasFilters)",
    "status": "pass",
    "time": 0.1123378276825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkFilters)",
    "status": "pass",
    "time": 0.11704301834106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.11591100692749,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntity)",
    "status": "pass",
    "time": 0.1131010055542,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.37135100364685,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.29981017112732,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.1171190738678,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11628794670105,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.AlertCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.AlertCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.18118500709534,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.18919515609741,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.19489097595215,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11495399475098,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.AlertCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.AlertCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.12988710403442,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.AlertCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.AlertCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11610102653503,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testRangeFilters)",
    "status": "pass",
    "time": 0.11259508132935,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.AlertCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.AlertCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.14785218238831,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.AlertCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.AlertCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.12312793731689,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.AlertCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11217594146729,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertCest.viewInHal)",
    "status": "pass",
    "time": 0.19553899765015,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.28981781005859,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertCest.checkUplink)",
    "status": "pass",
    "time": 0.19855380058289,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.27613997459412,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.12391686439514,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.AlertCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.1121289730072,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.AlertCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.19275093078613,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.AlertCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.AlertCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.11595606803894,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.AlertCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.AlertCest.getSortDirections)",
    "status": "pass",
    "time": 0.11057186126709,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.AlertCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.AlertCest.checkSortCollection)",
    "status": "fail",
    "time": 0.18907690048218,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.alert"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.alert"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\AlertPage",
                "\/order\/1411-10\/alert?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "alert": "alert 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "alert": "alert 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "alert": "alert 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "alert": "alert 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "alert": "alert 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "alert": "alert 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.11615204811096,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.AlertCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11258506774902,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.20916295051575,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.19365906715393,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.1974618434906,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.1168909072876,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11430907249451,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.17923092842102,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11773896217346,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11318397521973,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.26178884506226,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.27057290077209,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.27676200866699,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.20573091506958,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11123704910278,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11416602134705,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11068892478943,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.AlertEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.18859815597534,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.23096108436584,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.1933159828186,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.29316282272339,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.AlertEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.AlertEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.2213408946991,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.28239107131958,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.AlertEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.21029090881348,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.28935980796814,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.26380515098572,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.28385186195374,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.20429015159607,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.20339107513428,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/alert\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/alert\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.29261016845703,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.20765995979309,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.AlertEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.19708395004272,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.AlertEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.12695908546448,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.11587119102478,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.2364649772644,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "orderId"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "orderId"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "orderId",
                "1411-10",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "orderId": "1411-10",
                    "archived": false
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.22279119491577,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "orderId"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "orderId"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "orderId",
                "1411-10",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "orderId": "1411-10",
                    "archived": false
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.11394596099854,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11341404914856,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11293005943298,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.12617492675781,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11250400543213,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.11456489562988,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.11177492141724,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.14743804931641,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete non existent entity (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.11786794662476,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11178612709045,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.12087798118591,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.13334107398987,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.22554802894592,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/order\/1411-10\/archive"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.28327894210815,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.21935892105103,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.ArchiveEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.21533107757568,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view collection all (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view collection all (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionAll)",
    "status": "pass",
    "time": 0.1116418838501,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollection)",
    "status": "pass",
    "time": 0.19851398468018,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkPagination)",
    "status": "pass",
    "time": 0.44926500320435,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.NoteCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.27644419670105,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.NoteCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.NoteCest.hasFilters)",
    "status": "pass",
    "time": 0.11678910255432,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkFilters)",
    "status": "pass",
    "time": 0.11028909683228,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.11183881759644,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntity)",
    "status": "pass",
    "time": 0.12605810165405,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.32402300834656,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.27849411964417,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11727380752563,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11352300643921,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.NoteCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.NoteCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.19737100601196,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.18864703178406,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.18204307556152,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.13102388381958,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.NoteCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.NoteCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.11253905296326,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.NoteCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.NoteCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11131596565247,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testRangeFilters)",
    "status": "pass",
    "time": 0.11982083320618,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.NoteCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.NoteCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.12207698822021,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.NoteCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.NoteCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.11517095565796,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.NoteCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11734795570374,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteCest.viewInHal)",
    "status": "pass",
    "time": 0.1972279548645,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.31450200080872,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteCest.checkUplink)",
    "status": "pass",
    "time": 0.20833206176758,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.27691316604614,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11116409301758,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.NoteCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11301803588867,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.NoteCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.20448303222656,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.NoteCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.NoteCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.11698079109192,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.NoteCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.NoteCest.getSortDirections)",
    "status": "pass",
    "time": 0.11305999755859,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.NoteCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.NoteCest.checkSortCollection)",
    "status": "fail",
    "time": 0.18123698234558,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.note"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.note"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\NotePage",
                "\/order\/1411-10\/note?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "note": "Note 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "note": "Note 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "note": "Note 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "note": "Note 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "note": "Note 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "note": "Note 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.11925411224365,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.NoteCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11323189735413,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.18716907501221,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.20083785057068,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.19367814064026,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.10999989509583,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11877489089966,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.14855217933655,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11241602897644,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11225008964539,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.20883703231812,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.27457308769226,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.27178597450256,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.19338488578796,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11895179748535,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11324501037598,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.12665605545044,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.NoteEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.19584012031555,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.23183584213257,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.38173913955688,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.26410293579102,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Fri, 06 Jun 2014 10:41:31 GMT",
                "Fri, 06 Jun 2014 10:41:32 GMT"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "Fri, 06 Jun 2014 10:41:31 GMT",
                "Fri, 06 Jun 2014 10:41:32 GMT"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.NoteEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.NoteEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.1935760974884,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.25524091720581,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.NoteEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.18829298019409,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.27524399757385,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.2721049785614,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.27370977401733,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.2000298500061,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.19852685928345,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/note\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/note\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.29923319816589,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.19700884819031,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.NoteEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.21595406532288,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.NoteEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.1128191947937,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view collection all (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view collection all (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionAll)",
    "status": "pass",
    "time": 0.11376619338989,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollection)",
    "status": "pass",
    "time": 0.19891595840454,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkPagination)",
    "status": "pass",
    "time": 0.44393706321716,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.Order.TrackingCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.26448202133179,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.TrackingCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.Order.TrackingCest.hasFilters)",
    "status": "pass",
    "time": 0.11967587471008,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFilters)",
    "status": "pass",
    "time": 0.11123108863831,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.11259293556213,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntity)",
    "status": "pass",
    "time": 0.11344313621521,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.35387516021729,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.28075695037842,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11487913131714,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11314296722412,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.18082499504089,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.18181300163269,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.20284414291382,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11208987236023,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.11321401596069,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11185812950134,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testRangeFilters)",
    "status": "pass",
    "time": 0.17415189743042,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.TrackingCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.Order.TrackingCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.11704897880554,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.TrackingCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.Order.TrackingCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.12469816207886,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11242008209229,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingCest.viewInHal)",
    "status": "pass",
    "time": 0.21462392807007,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.29046702384949,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingCest.checkUplink)",
    "status": "pass",
    "time": 0.19845199584961,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.29538989067078,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11046600341797,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.Order.TrackingCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11354303359985,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.Order.TrackingCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.20025396347046,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.Order.TrackingCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.1219789981842,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.TrackingCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.Order.TrackingCest.getSortDirections)",
    "status": "pass",
    "time": 0.11346817016602,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.Order.TrackingCest.checkSortCollection)",
    "status": "fail",
    "time": 0.18914794921875,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.tracking"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.tracking"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\Order\\TrackingPage",
                "\/order\/1411-10\/tracking?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderId": "1411-10",
                        "userId": 1,
                        "number": "1231",
                        "carrier": "carrier 1",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 01:00:00"
                    },
                    {
                        "id": 2,
                        "orderId": "1411-10",
                        "userId": 2,
                        "number": "1232",
                        "carrier": "carrier 2",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 02:00:00"
                    },
                    {
                        "id": 3,
                        "orderId": "1411-10",
                        "userId": 3,
                        "number": "1233",
                        "carrier": "carrier 3",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 03:00:00"
                    },
                    {
                        "id": 4,
                        "orderId": "1411-10",
                        "userId": 4,
                        "number": "1234",
                        "carrier": "carrier 4",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 04:00:00"
                    },
                    {
                        "id": 5,
                        "orderId": "1412-20",
                        "userId": 5,
                        "number": "1235",
                        "carrier": "carrier 5",
                        "organisationUnitId": 2,
                        "timestamp": "2013-10-10 05:00:00"
                    },
                    {
                        "id": 6,
                        "orderId": "1411-10",
                        "userId": 6,
                        "number": "1236",
                        "carrier": "carrier 6",
                        "organisationUnitId": 1,
                        "timestamp": "2013-10-10 06:00:00"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.15454196929932,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.Order.TrackingCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11178684234619,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.20261311531067,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.18803000450134,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.20816898345947,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.11279988288879,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11832594871521,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11264896392822,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.16776704788208,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.1237211227417,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.19122886657715,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.26944088935852,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.27596998214722,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.18590497970581,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.1434919834137,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11407017707825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11260509490967,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.19040489196777,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.24309206008911,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.19331908226013,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.26416397094727,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Fri, 06 Jun 2014 10:41:43 GMT",
                "Fri, 06 Jun 2014 10:41:44 GMT"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "Fri, 06 Jun 2014 10:41:43 GMT",
                "Fri, 06 Jun 2014 10:41:44 GMT"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.20234894752502,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.25492596626282,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.2024929523468,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.27142596244812,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.26693105697632,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.27040910720825,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.20123410224915,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.20845699310303,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/tracking\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/tracking\/1\"'s etag to change (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.29772996902466,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.20459699630737,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.20570588111877,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.TrackingEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.11215305328369,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.20711398124695,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "changes.shippingAddressCompanyName"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "changes.shippingAddressCompanyName"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "shippingAddressCompanyName",
                "Wilki Ltd",
                "changes",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 201,
            "function": "seeJsonResponseFieldsEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                {
                    "shippingAddressCompanyName": "Wilki Ltd"
                },
                "changes"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "changes",
                {
                    "shippingAddressCompanyName": "Wilki Ltd"
                },
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "changes": {
                        "shippingAddressCompanyName": "Wilki Ltd"
                    },
                    "organisationUnitId": 1
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.20864391326904,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "changes.totalDiscount"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "changes.totalDiscount"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "totalDiscount",
                0.1,
                "changes",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 201,
            "function": "seeJsonResponseFieldsEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                {
                    "totalDiscount": 0.1
                },
                "changes"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "changes",
                {
                    "totalDiscount": 0.1
                },
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "changes": {
                        "totalDiscount": 0.1
                    },
                    "organisationUnitId": 1
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.18161702156067,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.12275505065918,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11586403846741,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.1265389919281,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.1121940612793,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11845088005066,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.1843888759613,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.20209193229675,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\Order\\UserChangeEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "delete primary entity with get collection (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.11693501472473,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.18676114082336,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11410212516785,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.13509488105774,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11123394966125,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.18385195732117,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/order\/1411-10\/userChange"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22855186462402,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.19417190551758,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.18491196632385,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.18224501609802,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10\/userChange",
                "CG\\Order\\Test\\Api\\Page\\Order\\UserChangeEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.20441794395447,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10\/userChange",
                "CG\\Order\\Test\\Api\\Page\\Order\\UserChangeEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Order\\UserChangeEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.18719792366028,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.18391919136047,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10\/userChange",
                "CG\\Order\\Test\\Api\\Page\\Order\\UserChangeEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Order\\UserChangeEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.20776510238647,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10\/userChange",
                "CG\\Order\\Test\\Api\\Page\\Order\\UserChangeEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Order\\UserChangeEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.18743515014648,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10\/userChange",
                "CG\\Order\\Test\\Api\\Page\\Order\\UserChangeEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\Order\\UserChangeEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.2810480594635,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.19843006134033,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/userchange\"'s etag to change (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\/userchange\"'s etag to change (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.28323101997375,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.2108371257782,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.19235920906067,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.Order.UserChangeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.11301612854004,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollection)",
    "status": "pass",
    "time": 0.20155811309814,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkPagination)",
    "status": "pass",
    "time": 0.43471693992615,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderBatchCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.27072286605835,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderBatchCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderBatchCest.hasFilters)",
    "status": "pass",
    "time": 0.11988377571106,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkFilters)",
    "status": "pass",
    "time": 0.19379997253418,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.21053910255432,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEntity)",
    "status": "pass",
    "time": 0.11999607086182,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.11062002182007,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11788511276245,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11142206192017,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.12754702568054,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderBatchCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.11938118934631,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderBatchCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderBatchCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.11509299278259,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.12563896179199,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11271691322327,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderBatchCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderBatchCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.18457794189453,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderBatchCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderBatchCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11783909797668,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testRangeFilters)",
    "status": "pass",
    "time": 0.11114501953125,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.18236303329468,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters. (CG.Order.Test.Api.Cest.OrderBatchCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.19369697570801,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderBatchCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderBatchCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11395692825317,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchCest.viewInHal)",
    "status": "pass",
    "time": 0.19957590103149,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.3344509601593,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchCest.checkUplink)",
    "status": "pass",
    "time": 0.20227909088135,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.27289295196533,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11686992645264,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderBatchCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.1126880645752,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionAll)",
    "status": "pass",
    "time": 0.19834113121033,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderBatchCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.19011902809143,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderBatchCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderBatchCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.37255096435547,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderBatchCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderBatchCest.getSortDirections)",
    "status": "pass",
    "time": 0.12667894363403,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderBatchCest.checkSortCollection)",
    "status": "fail",
    "time": 0.18749499320984,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.orderBatch"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.orderBatch"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderBatchPage",
                "\/orderBatch?orderBy=name&orderDirection=ASC",
                [
                    {
                        "name": "1",
                        "organisationUnitId": 1,
                        "id": "1-1",
                        "active": 1
                    },
                    {
                        "name": "1",
                        "organisationUnitId": 2,
                        "id": "2-1",
                        "active": 1
                    },
                    {
                        "name": "2",
                        "organisationUnitId": 1,
                        "id": "1-2",
                        "active": 1
                    },
                    {
                        "name": "3",
                        "organisationUnitId": 1,
                        "id": "1-3",
                        "active": 1
                    },
                    {
                        "name": "4",
                        "organisationUnitId": 1,
                        "id": "1-4",
                        "active": 1
                    },
                    {
                        "name": "5",
                        "organisationUnitId": 1,
                        "id": "1-5",
                        "active": 0
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.11315512657166,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderBatchCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11283993721008,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.22315502166748,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.19651985168457,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.19012308120728,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.1139190196991,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.24709606170654,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11324000358582,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11917686462402,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11416888237,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.2164568901062,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.26752614974976,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.27232789993286,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.19288611412048,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11284589767456,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11274099349976,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.13023900985718,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderBatchEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.19430303573608,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22243189811707,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.18839287757874,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.29064083099365,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderBatchEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderBatchEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.20671081542969,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.28453707695007,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderBatchEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 1.5542149543762,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.62684917449951,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.26139402389526,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.26458597183228,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.18995594978333,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.20430111885071,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderbatch\/1-1\"'s etag to change (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderbatch\/1-1\"'s etag to change (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.28714108467102,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.19367289543152,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderBatchEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.18526792526245,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderBatchEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.11295986175537,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check posting to \/orderfilter and then filtering by orderfilter returns correct orders (CG.Order.Test.Api.Cest.OrderCest.postingFilterAndFilteringOrdersByFilterIdReturnsExpectedResults)"
}{
    "event": "test",
    "suite": "api",
    "test": "check posting to \/orderfilter and then filtering by orderfilter returns correct orders (CG.Order.Test.Api.Cest.OrderCest.postingFilterAndFilteringOrdersByFilterIdReturnsExpectedResults)",
    "status": "fail",
    "time": 0.22257089614868,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 34,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                201
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sending mutually exclusive filters throw a 400 bad request (CG.Order.Test.Api.Cest.OrderCest.requestingMutuallyExclusiveFiltersReturns400)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sending mutually exclusive filters throw a 400 bad request (CG.Order.Test.Api.Cest.OrderCest.requestingMutuallyExclusiveFiltersReturns400)",
    "status": "pass",
    "time": 0.21756911277771,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryFilter)",
    "status": "fail",
    "time": 0.20766186714172,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 77,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 400 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryExcludeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by country (CG.Order.Test.Api.Cest.OrderCest.checkCountryExcludeFilter)",
    "status": "fail",
    "time": 0.20325899124146,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 98,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 400 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multiline orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiLineFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multiline orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiLineFilter)",
    "status": "fail",
    "time": 0.29147505760193,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 125,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multi same item orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiSameItemFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by multi same item orders (CG.Order.Test.Api.Cest.OrderCest.checkMultiSameItemFilter)",
    "status": "fail",
    "time": 0.29399800300598,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 153,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check archive filter works for this collection (CG.Order.Test.Api.Cest.OrderCest.checkIncludeArchivedFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "check archive filter works for this collection (CG.Order.Test.Api.Cest.OrderCest.checkIncludeArchivedFilter)",
    "status": "fail",
    "time": 0.2003960609436,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/CG\/Order\/Test\/Api\/Cest\/OrderCest.php",
            "line": 181,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [

                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollection)",
    "status": "fail",
    "time": 0.31281900405884,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkPagination)",
    "status": "fail",
    "time": 0.26493501663208,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 237,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json _links.\"last\" equals \"\/order?limit=2&page=9\". Expected \"\/order?page=3&limit=2\""
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3224,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 157,
            "function": "seeLinksContains",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "_links.first": {
                        "href": "\/order?page=1&limit=2"
                    },
                    "_links.last": {
                        "href": "\/order?page=3&limit=2"
                    },
                    "_links.self": {
                        "href": "\/order?page=1&limit=2"
                    },
                    "_links.next": {
                        "href": "\/order?page=2&limit=2"
                    }
                }
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderPage",
                [

                ],
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json _links.\"last\" equals \"\/order?limit=2&page=9\". Expected \"\/order?page=3&limit=2\"",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.40366816520691,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderCest.hasFilters)",
    "status": "pass",
    "time": 0.12094116210938,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkFilters)",
    "status": "fail",
    "time": 0.23933506011963,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 164,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                {
                    "1411-10": {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderCest.checkMultiFilters)",
    "status": "fail",
    "time": 0.28835010528564,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 203,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                {
                    "1411-10": {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderCest.createEntity)",
    "status": "pass",
    "time": 0.11728405952454,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.11230182647705,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11159682273865,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11176514625549,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.1402051448822,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.11422395706177,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.11188101768494,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11404299736023,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11061000823975,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.11103892326355,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.18008804321289,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by a single range filter. (CG.Order.Test.Api.Cest.OrderCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by a single range filter. (CG.Order.Test.Api.Cest.OrderCest.testRangeFilters)",
    "status": "fail",
    "time": 0.20301103591919,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 652,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.72462201118469,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.12587904930115,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by searchterm (CG.Order.Test.Api.Cest.OrderCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "see the order collection returns correct results when filtered by searchterm (CG.Order.Test.Api.Cest.OrderCest.checkSearchTermFilters)",
    "status": "fail",
    "time": 0.29643988609314,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 793,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 756,
            "function": "checkSearchTermFilter",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderCest",
            "type": "->",
            "args": [
                {

                },
                "10",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderCest.viewInHal)",
    "status": "pass",
    "time": 0.29379487037659,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.33414506912231,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderCest.checkUplink)",
    "status": "pass",
    "time": 0.29246401786804,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.4465548992157,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11542296409607,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11551880836487,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.31770515441895,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.order",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-10\" and should be \"1411-10\" or maybe this is missing: Array\n(\n    [id] => 1411-10\n    [accountId] => 1411\n    [externalId] => 10\n    [total] => 21.99\n    [status] => 1\n    [shippingPrice] => 10.99\n    [shippingMethod] => standard\n    [billingAddressCompanyName] => Company Name 1\n    [billingAddressFullName] => Full Name 1\n    [billingAddress1] => address 1 - 1\n    [billingAddress2] => address 2 - 1\n    [billingAddress3] => address 3 - 1\n    [billingAddressCity] => City1\n    [billingAddressCounty] => County1\n    [billingAddressCountry] => UK\n    [billingAddressPostcode] => Postcode1\n    [billingEmailAddress] => emailaddress1@channelgrabber.com\n    [billingPhoneNumber] => 01942673431\n    [billingAddressCountryCode] => GB\n    [shippingAddressCompanyName] => Shipping Company Name 1\n    [shippingAddressFullName] => Full Name 1\n    [shippingAddress1] => shipping address 1 - 1\n    [shippingAddress2] => shipping address 2 - 1\n    [shippingAddress3] => shipping address 3 - 1\n    [shippingAddressCity] => shipping City 1\n    [shippingAddressCounty] => Shipping County 1\n    [shippingAddressCountry] => UK\n    [shippingAddressPostcode] => shipPostcode1\n    [shippingEmailAddress] => shippingemail1@channelgrabber.com\n    [shippingPhoneNumber] => 07415878961\n    [buyerMessage] => Hello, please leave at the door\n    [purchaseDate] => 2013-10-10 00:00:00\n    [paymentDate] => 2013-10-10 01:00:00\n    [printedDate] => 2013-10-10 10:00:00\n    [dispatchDate] => 2013-10-10 10:00:10\n    [tag] => Array\n        (\n            [0] => tag1\n            [1] => tag2\n            [2] => tag5\n        )\n\n    [cancellations] => Array\n        (\n            [0] => Array\n                (\n                    [type] => cancel\n                    [timestamp] => 2014-10-10 00:00:00\n                    [reason] => No Payment Received\n                    [shippingAmount] => 10.99\n                    [items] => Array\n                        (\n                            [0] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 10\n                                    [amount] => 0\n                                    [unitPrice] => 1.99\n                                )\n\n                            [1] => Array\n                                (\n                                    [orderItemId] => 1411-11\n                                    [sku] => test-sku-1\n                                    [quantity] => 0\n                                    [amount] => 19.91\n                                    [unitPrice] => 0\n                                )\n\n                        )\n\n                )\n\n        )\n\n    [batch] => 1\n    [paymentMethod] => paymentMethod1\n    [paymentReference] => paymentReference1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.21145915985107,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderCest.checkFiltersPagination)",
    "status": "fail",
    "time": 0.23770403862,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 91,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.order",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "order",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 108,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderPage",
                {
                    "id": [
                        "1411-10"
                    ],
                    "organisationUnitId": [
                        1
                    ],
                    "status": [
                        "1"
                    ],
                    "accountId": [
                        1411
                    ],
                    "channel": [
                        "ebay"
                    ],
                    "shippingMethod": [
                        "standard"
                    ],
                    "batch": [
                        1
                    ]
                },
                {
                    "1411-10": {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.order",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderCest.getSortDirections)",
    "status": "pass",
    "time": 0.10996508598328,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderCest.checkSortCollection)",
    "status": "fail",
    "time": 0.32059097290039,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ],
                [
                    {
                        "id": "1-493",
                        "accountId": 1,
                        "externalId": "493",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 5.99,
                        "status": "dispatched",
                        "shippingPrice": 0,
                        "shippingMethod": "UK_RoyalMailSecondClassStandard",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": "",
                        "billingAddress1": "",
                        "billingAddress2": "",
                        "billingAddress3": "",
                        "billingAddressCity": "",
                        "billingAddressCounty": "",
                        "billingAddressCountry": "",
                        "billingAddressPostcode": "",
                        "billingEmailAddress": "",
                        "billingPhoneNumber": "",
                        "billingAddressCountryCode": "",
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": "wade bestwick",
                        "shippingAddress1": "3 maelor court",
                        "shippingAddress2": "",
                        "shippingAddress3": "",
                        "shippingAddressCity": "overton",
                        "shippingAddressCounty": "Wrexham",
                        "shippingAddressCountry": "GB",
                        "shippingAddressPostcode": "ll130he",
                        "shippingEmailAddress": "",
                        "shippingPhoneNumber": 7817350909,
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2014-02-04 22:46:29",
                        "paymentDate": "2014-02-04 22:46:30",
                        "printedDate": null,
                        "dispatchDate": "2014-02-05 14:40:18",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": {
                            "orderId": "",
                            "username": "wadeandbeth1"
                        },
                        "batch": null,
                        "paymentMethod": "PayPal",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1-493"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1-1048880348006",
                                    "externalId": "161214454037-1048880348006",
                                    "orderId": "1-493",
                                    "accountId": 1,
                                    "itemName": "MAC Zoom Lash Mascara Black     **FREE UK POSTAGE**",
                                    "itemSku": "MACmascaraJ",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 1,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1-1048880348006"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1-494",
                        "accountId": 1,
                        "externalId": "494",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 5.99,
                        "status": "dispatched",
                        "shippingPrice": 0,
                        "shippingMethod": "UK_RoyalMailSecondClassStandard",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": "",
                        "billingAddress1": "",
                        "billingAddress2": "",
                        "billingAddress3": "",
                        "billingAddressCity": "",
                        "billingAddressCounty": "",
                        "billingAddressCountry": "",
                        "billingAddressPostcode": "",
                        "billingEmailAddress": "",
                        "billingPhoneNumber": "",
                        "billingAddressCountryCode": "",
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": "Charlie-Louise Millward",
                        "shippingAddress1": "20 Shawbury Close",
                        "shippingAddress2": "Winyates East",
                        "shippingAddress3": "",
                        "shippingAddressCity": "Redditch",
                        "shippingAddressCounty": "Worcestershire",
                        "shippingAddressCountry": "GB",
                        "shippingAddressPostcode": "B980PE",
                        "shippingEmailAddress": "",
                        "shippingPhoneNumber": "01527 453194",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2014-02-04 23:01:19",
                        "paymentDate": "2014-02-04 23:01:20",
                        "printedDate": "2014-05-29 14:21:00",
                        "dispatchDate": "2014-02-05 14:47:42",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "123",
                            "afa",
                            "feaf",
                            "vddv"
                        ],
                        "custom": {
                            "orderId": "",
                            "username": "millward94charl"
                        },
                        "batch": null,
                        "paymentMethod": "PayPal",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1-494"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1-1048885552006",
                                    "externalId": "161214454037-1048885552006",
                                    "orderId": "1-494",
                                    "accountId": 1,
                                    "itemName": "MAC Zoom Lash Mascara Black     **FREE UK POSTAGE**",
                                    "itemSku": "MACmascaraJ",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 1,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1-1048885552006"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1-495",
                        "accountId": 1,
                        "externalId": "495",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 5.99,
                        "status": "dispatched",
                        "shippingPrice": 0,
                        "shippingMethod": "UK_RoyalMailSecondClassStandard",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": "",
                        "billingAddress1": "",
                        "billingAddress2": "",
                        "billingAddress3": "",
                        "billingAddressCity": "",
                        "billingAddressCounty": "",
                        "billingAddressCountry": "",
                        "billingAddressPostcode": "",
                        "billingEmailAddress": "",
                        "billingPhoneNumber": "",
                        "billingAddressCountryCode": "",
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": "Balmoral house ",
                        "shippingAddress1": "Low Road",
                        "shippingAddress2": "great yarmouth",
                        "shippingAddress3": "",
                        "shippingAddressCity": "winterton-on-sea",
                        "shippingAddressCounty": "Norfolk",
                        "shippingAddressCountry": "GB",
                        "shippingAddressPostcode": "NR29 4BJ",
                        "shippingEmailAddress": "",
                        "shippingPhoneNumber": "",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2014-02-05 07:33:04",
                        "paymentDate": "2014-02-05 07:33:04",
                        "printedDate": "2014-05-29 14:21:00",
                        "dispatchDate": "2014-02-05 14:47:43",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "123",
                            "afa",
                            "feaf",
                            "vddv"
                        ],
                        "custom": {
                            "orderId": "",
                            "username": "gabby_waterman216"
                        },
                        "batch": null,
                        "paymentMethod": "PayPal",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1-495"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1-1049004110006",
                                    "externalId": "161214454037-1049004110006",
                                    "orderId": "1-495",
                                    "accountId": 1,
                                    "itemName": "MAC Zoom Lash Mascara Black     **FREE UK POSTAGE**",
                                    "itemSku": "MACmascaraJ",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 1,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1-1049004110006"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1-497",
                        "accountId": 1,
                        "externalId": "497",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 5.99,
                        "status": "refunding",
                        "shippingPrice": 0,
                        "shippingMethod": "UK_RoyalMailSecondClassStandard",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": "",
                        "billingAddress1": "",
                        "billingAddress2": "",
                        "billingAddress3": "",
                        "billingAddressCity": "",
                        "billingAddressCounty": "",
                        "billingAddressCountry": "",
                        "billingAddressPostcode": "",
                        "billingEmailAddress": "",
                        "billingPhoneNumber": "",
                        "billingAddressCountryCode": "",
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": "Elena Barker",
                        "shippingAddress1": "6 Parklands Close",
                        "shippingAddress2": "",
                        "shippingAddress3": "",
                        "shippingAddressCity": "Redditch",
                        "shippingAddressCounty": "Worcestershire",
                        "shippingAddressCountry": "GB",
                        "shippingAddressPostcode": "B97 6PZ",
                        "shippingEmailAddress": "",
                        "shippingPhoneNumber": "01527 584476",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2014-02-05 13:28:47",
                        "paymentDate": "2014-02-05 13:29:41",
                        "printedDate": "2014-05-29 14:21:00",
                        "dispatchDate": "2014-02-05 14:47:45",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "123",
                            "afa",
                            "feaf",
                            "vddv"
                        ],
                        "custom": {
                            "orderId": "",
                            "username": "elenalou1278"
                        },
                        "batch": null,
                        "paymentMethod": "PayPal",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1-497"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1-1049089526006",
                                    "externalId": "161214454037-1049089526006",
                                    "orderId": "1-497",
                                    "accountId": 1,
                                    "itemName": "MAC Zoom Lash Mascara Black     **FREE UK POSTAGE**",
                                    "itemSku": "MACmascaraJ",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 1,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1-1049089526006"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1-498",
                        "accountId": 1,
                        "externalId": "498",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 5.99,
                        "status": "dispatched",
                        "shippingPrice": 0,
                        "shippingMethod": "UK_RoyalMailSecondClassStandard",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": "",
                        "billingAddress1": "",
                        "billingAddress2": "",
                        "billingAddress3": "",
                        "billingAddressCity": "",
                        "billingAddressCounty": "",
                        "billingAddressCountry": "",
                        "billingAddressPostcode": "",
                        "billingEmailAddress": "",
                        "billingPhoneNumber": "",
                        "billingAddressCountryCode": "",
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": "lisa aldridge",
                        "shippingAddress1": "20 nock gardens",
                        "shippingAddress2": "",
                        "shippingAddress3": "",
                        "shippingAddressCity": "kesgrave",
                        "shippingAddressCounty": "Suffolk",
                        "shippingAddressCountry": "GB",
                        "shippingAddressPostcode": "ip52du",
                        "shippingEmailAddress": "",
                        "shippingPhoneNumber": "01473 635964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2014-02-05 13:41:04",
                        "paymentDate": "2014-02-05 13:41:04",
                        "printedDate": "2014-05-29 14:21:00",
                        "dispatchDate": "2014-02-05 14:47:45",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "123",
                            "afa",
                            "feaf",
                            "vddv"
                        ],
                        "custom": {
                            "orderId": "",
                            "username": "lisaaldridge"
                        },
                        "batch": null,
                        "paymentMethod": "PayPal",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1-498"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1-1049093343006",
                                    "externalId": "161214454037-1049093343006",
                                    "orderId": "1-498",
                                    "accountId": 1,
                                    "itemName": "MAC Zoom Lash Mascara Black     **FREE UK POSTAGE**",
                                    "itemSku": "MACmascaraJ",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 1,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1-1049093343006"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "1-503",
                        "accountId": 1,
                        "externalId": "503",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 5.99,
                        "status": "dispatched",
                        "shippingPrice": 0,
                        "shippingMethod": "UK_RoyalMailSecondClassStandard",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": "",
                        "billingAddress1": "",
                        "billingAddress2": "",
                        "billingAddress3": "",
                        "billingAddressCity": "",
                        "billingAddressCounty": "",
                        "billingAddressCountry": "",
                        "billingAddressPostcode": "",
                        "billingEmailAddress": "",
                        "billingPhoneNumber": "",
                        "billingAddressCountryCode": "",
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": "Della Copley",
                        "shippingAddress1": "44 Wembley Road",
                        "shippingAddress2": "Arnold",
                        "shippingAddress3": "",
                        "shippingAddressCity": "Nottingham",
                        "shippingAddressCounty": "Nottinghamshire",
                        "shippingAddressCountry": "GB",
                        "shippingAddressPostcode": "NG5 6RR",
                        "shippingEmailAddress": "",
                        "shippingPhoneNumber": "",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2014-02-05 20:00:12",
                        "paymentDate": "2014-02-05 20:00:12",
                        "printedDate": "2014-05-29 14:21:00",
                        "dispatchDate": "2014-02-05 23:45:11",
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [
                            "123",
                            "afa",
                            "feaf",
                            "vddv"
                        ],
                        "custom": {
                            "orderId": "",
                            "username": "dickos16"
                        },
                        "batch": null,
                        "paymentMethod": "PayPal",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/1-503"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "1-1049251702006",
                                    "externalId": "161214454037-1049251702006",
                                    "orderId": "1-503",
                                    "accountId": 1,
                                    "itemName": "MAC Zoom Lash Mascara Black     **FREE UK POSTAGE**",
                                    "itemSku": "MACmascaraJ",
                                    "individualItemPrice": 5.99,
                                    "itemQuantity": 1,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/1-1049251702006"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "2-026-0194006-8907511",
                        "accountId": 2,
                        "externalId": "026-0194006-8907511",
                        "channel": "amazon",
                        "organisationUnitId": 1,
                        "total": 0,
                        "status": "cancelled",
                        "shippingPrice": 0,
                        "shippingMethod": "Std UK Dom",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": null,
                        "billingAddress1": null,
                        "billingAddress2": null,
                        "billingAddress3": null,
                        "billingAddressCity": null,
                        "billingAddressCounty": null,
                        "billingAddressCountry": null,
                        "billingAddressPostcode": null,
                        "billingEmailAddress": null,
                        "billingPhoneNumber": null,
                        "billingAddressCountryCode": null,
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": null,
                        "shippingAddress1": null,
                        "shippingAddress2": null,
                        "shippingAddress3": null,
                        "shippingAddressCity": null,
                        "shippingAddressCounty": null,
                        "shippingAddressCountry": null,
                        "shippingAddressPostcode": null,
                        "shippingEmailAddress": null,
                        "shippingPhoneNumber": null,
                        "shippingAddressCountryCode": null,
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2010-12-07 22:26:02",
                        "paymentDate": "2010-12-07 22:26:02",
                        "printedDate": null,
                        "dispatchDate": null,
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": {
                            "shippingTax": null,
                            "deliveryStartDate": null,
                            "deliveryEndDate": null,
                            "deliveryTimeZone": null
                        },
                        "batch": null,
                        "paymentMethod": "Other",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/2-026-0194006-8907511"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "2-48865074516843",
                                    "externalId": "48865074516843",
                                    "orderId": "2-026-0194006-8907511",
                                    "accountId": 2,
                                    "itemName": "Call of Duty: Black Ops (PS3) [Unknown format] [PlayStation 3]",
                                    "itemSku": "12345678",
                                    "individualItemPrice": 0,
                                    "itemQuantity": 0,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/2-48865074516843"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "2-026-2509435-3411544",
                        "accountId": 2,
                        "externalId": "026-2509435-3411544",
                        "channel": "amazon",
                        "organisationUnitId": 1,
                        "total": 0,
                        "status": "cancelled",
                        "shippingPrice": 0,
                        "shippingMethod": "Std UK Dom",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": null,
                        "billingAddress1": null,
                        "billingAddress2": null,
                        "billingAddress3": null,
                        "billingAddressCity": null,
                        "billingAddressCounty": null,
                        "billingAddressCountry": null,
                        "billingAddressPostcode": null,
                        "billingEmailAddress": null,
                        "billingPhoneNumber": null,
                        "billingAddressCountryCode": null,
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": null,
                        "shippingAddress1": null,
                        "shippingAddress2": null,
                        "shippingAddress3": null,
                        "shippingAddressCity": null,
                        "shippingAddressCounty": null,
                        "shippingAddressCountry": null,
                        "shippingAddressPostcode": null,
                        "shippingEmailAddress": null,
                        "shippingPhoneNumber": null,
                        "shippingAddressCountryCode": null,
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2010-11-29 08:56:59",
                        "paymentDate": "2010-11-29 08:56:59",
                        "printedDate": null,
                        "dispatchDate": null,
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": {
                            "shippingTax": null,
                            "deliveryStartDate": null,
                            "deliveryEndDate": null,
                            "deliveryTimeZone": null
                        },
                        "batch": null,
                        "paymentMethod": "Other",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/2-026-2509435-3411544"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "2-21134966942195",
                                    "externalId": "21134966942195",
                                    "orderId": "2-026-2509435-3411544",
                                    "accountId": 2,
                                    "itemName": "Vauxhall toothbrush2",
                                    "itemSku": "TB12",
                                    "individualItemPrice": 0,
                                    "itemQuantity": 0,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/2-21134966942195"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "2-202-1804183-2985148",
                        "accountId": 2,
                        "externalId": "202-1804183-2985148",
                        "channel": "amazon",
                        "organisationUnitId": 1,
                        "total": 0,
                        "status": "cancelled",
                        "shippingPrice": 0,
                        "shippingMethod": "Std UK Dom",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": null,
                        "billingAddress1": null,
                        "billingAddress2": null,
                        "billingAddress3": null,
                        "billingAddressCity": null,
                        "billingAddressCounty": null,
                        "billingAddressCountry": null,
                        "billingAddressPostcode": null,
                        "billingEmailAddress": null,
                        "billingPhoneNumber": null,
                        "billingAddressCountryCode": null,
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": null,
                        "shippingAddress1": null,
                        "shippingAddress2": null,
                        "shippingAddress3": null,
                        "shippingAddressCity": null,
                        "shippingAddressCounty": null,
                        "shippingAddressCountry": null,
                        "shippingAddressPostcode": null,
                        "shippingEmailAddress": null,
                        "shippingPhoneNumber": null,
                        "shippingAddressCountryCode": null,
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2010-12-07 22:07:11",
                        "paymentDate": "2010-12-07 22:07:11",
                        "printedDate": null,
                        "dispatchDate": null,
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": {
                            "shippingTax": null,
                            "deliveryStartDate": null,
                            "deliveryEndDate": null,
                            "deliveryTimeZone": null
                        },
                        "batch": null,
                        "paymentMethod": "Other",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/2-202-1804183-2985148"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "2-37431916933299",
                                    "externalId": "37431916933299",
                                    "orderId": "2-202-1804183-2985148",
                                    "accountId": 2,
                                    "itemName": "Call of Duty: Black Ops (PS3) [Unknown format] [PlayStation 3]",
                                    "itemSku": "12345678",
                                    "individualItemPrice": 0,
                                    "itemQuantity": 0,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/2-37431916933299"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "id": "2-202-4492222-3847534",
                        "accountId": 2,
                        "externalId": "202-4492222-3847534",
                        "channel": "amazon",
                        "organisationUnitId": 1,
                        "total": 0,
                        "status": "cancelled",
                        "shippingPrice": 0,
                        "shippingMethod": "Std UK Dom",
                        "billingAddressCompanyName": "",
                        "billingAddressFullName": null,
                        "billingAddress1": null,
                        "billingAddress2": null,
                        "billingAddress3": null,
                        "billingAddressCity": null,
                        "billingAddressCounty": null,
                        "billingAddressCountry": null,
                        "billingAddressPostcode": null,
                        "billingEmailAddress": null,
                        "billingPhoneNumber": null,
                        "billingAddressCountryCode": null,
                        "shippingAddressCompanyName": "",
                        "shippingAddressFullName": null,
                        "shippingAddress1": null,
                        "shippingAddress2": null,
                        "shippingAddress3": null,
                        "shippingAddressCity": null,
                        "shippingAddressCounty": null,
                        "shippingAddressCountry": null,
                        "shippingAddressPostcode": null,
                        "shippingEmailAddress": null,
                        "shippingPhoneNumber": null,
                        "shippingAddressCountryCode": null,
                        "totalDiscount": 0,
                        "buyerMessage": "",
                        "purchaseDate": "2010-10-22 11:13:43",
                        "paymentDate": "2010-10-22 11:13:43",
                        "printedDate": null,
                        "dispatchDate": null,
                        "currencyCode": "GBP",
                        "archived": false,
                        "tag": [

                        ],
                        "custom": {
                            "shippingTax": null,
                            "deliveryStartDate": null,
                            "deliveryEndDate": null,
                            "deliveryTimeZone": null
                        },
                        "batch": null,
                        "paymentMethod": "Other",
                        "paymentReference": "",
                        "cancellations": [

                        ],
                        "_links": {
                            "self": {
                                "href": "\/order\/2-202-4492222-3847534"
                            },
                            "up": {
                                "href": "\/order"
                            }
                        },
                        "_embedded": {
                            "item": [
                                {
                                    "id": "2-49381477274051",
                                    "externalId": "49381477274051",
                                    "orderId": "2-202-4492222-3847534",
                                    "accountId": 2,
                                    "itemName": "Vauxhall exhaust",
                                    "itemSku": "321",
                                    "individualItemPrice": 0,
                                    "itemQuantity": 0,
                                    "itemTaxPercentage": 0,
                                    "individualItemDiscountPrice": 0,
                                    "itemVariationAttribute": [

                                    ],
                                    "organisationUnitId": 1,
                                    "_links": {
                                        "self": {
                                            "href": "\/orderItem\/2-49381477274051"
                                        },
                                        "up": {
                                            "href": "\/orderItem"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderPage",
                "\/order?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-10",
                        "accountId": 1411,
                        "externalId": "10",
                        "channel": "ebay",
                        "organisationUnitId": 1,
                        "total": 21.99,
                        "status": "1",
                        "shippingPrice": 10.99,
                        "shippingMethod": "standard",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 1",
                        "billingAddressFullName": "Full Name 1",
                        "billingAddress1": "address 1 - 1",
                        "billingAddress2": "address 2 - 1",
                        "billingAddress3": "address 3 - 1",
                        "billingAddressCity": "City1",
                        "billingAddressCounty": "County1",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode1",
                        "billingEmailAddress": "emailaddress1@channelgrabber.com",
                        "billingPhoneNumber": "01942673431",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 1",
                        "shippingAddressFullName": "Full Name 1",
                        "shippingAddress1": "shipping address 1 - 1",
                        "shippingAddress2": "shipping address 2 - 1",
                        "shippingAddress3": "shipping address 3 - 1",
                        "shippingAddressCity": "shipping City 1",
                        "shippingAddressCounty": "Shipping County 1",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode1",
                        "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                        "shippingPhoneNumber": "07415878961",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0,
                        "buyerMessage": "Hello, please leave at the door",
                        "purchaseDate": "2013-10-10 00:00:00",
                        "paymentDate": "2013-10-10 01:00:00",
                        "printedDate": "2013-10-10 10:00:00",
                        "dispatchDate": "2013-10-10 10:00:10",
                        "archived": false,
                        "tag": [
                            "tag1",
                            "tag2",
                            "tag5"
                        ],
                        "cancellations": [
                            {
                                "type": "cancel",
                                "timestamp": "2014-10-10 00:00:00",
                                "reason": "No Payment Received",
                                "shippingAmount": 10.99,
                                "items": [
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 10,
                                        "amount": 0,
                                        "unitPrice": 1.99
                                    },
                                    {
                                        "orderItemId": "1411-11",
                                        "sku": "test-sku-1",
                                        "quantity": 0,
                                        "amount": 19.91,
                                        "unitPrice": 0
                                    }
                                ]
                            }
                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod1",
                        "paymentReference": "paymentReference1"
                    },
                    {
                        "id": "1412-20",
                        "accountId": 1412,
                        "externalId": "20",
                        "channel": "ebay2",
                        "organisationUnitId": 2,
                        "total": 22.99,
                        "status": "2",
                        "shippingPrice": 20.99,
                        "shippingMethod": "standard2",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 2",
                        "billingAddressFullName": "Full Name 2",
                        "billingAddress1": "address 1 - 2",
                        "billingAddress2": "address 2 - 2",
                        "billingAddress3": "address 3 - 2",
                        "billingAddressCity": "City2",
                        "billingAddressCounty": "County2",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode2",
                        "billingEmailAddress": "emailaddress2@channelgrabber.com",
                        "billingPhoneNumber": "01942673432",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 2",
                        "shippingAddressFullName": "Full Name 2",
                        "shippingAddress1": "shipping address 1 - 2",
                        "shippingAddress2": "shipping address 2 - 2",
                        "shippingAddress3": "shipping address 3 - 2",
                        "shippingAddressCity": "shipping City 2",
                        "shippingAddressCounty": "Shipping County 2",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode2",
                        "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                        "shippingPhoneNumber": "07415878962",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.02,
                        "buyerMessage": "Hello, please leave at the door2",
                        "purchaseDate": "2013-10-10 00:20:00",
                        "paymentDate": "2013-10-10 01:20:00",
                        "printedDate": "2013-10-10 10:20:00",
                        "dispatchDate": "2013-10-10 10:20:10",
                        "archived": false,
                        "tag": [
                            "tag2",
                            "tag3"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod2",
                        "paymentReference": "paymentReference2"
                    },
                    {
                        "id": "1413-30",
                        "accountId": 1413,
                        "externalId": "30",
                        "channel": "ebay3",
                        "organisationUnitId": 3,
                        "total": 23.99,
                        "status": "3",
                        "shippingPrice": 30.99,
                        "shippingMethod": "standard3",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 3",
                        "billingAddressFullName": "Full Name 3",
                        "billingAddress1": "address 1 - 3",
                        "billingAddress2": "address 2 - 3",
                        "billingAddress3": "address 3 - 3",
                        "billingAddressCity": "City3",
                        "billingAddressCounty": "County3",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode3",
                        "billingEmailAddress": "emailaddress3@channelgrabber.com",
                        "billingPhoneNumber": "01942673433",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 3",
                        "shippingAddressFullName": "Full Name 3",
                        "shippingAddress1": "shipping address 1 - 3",
                        "shippingAddress2": "shipping address 2 - 3",
                        "shippingAddress3": "shipping address 3 - 3",
                        "shippingAddressCity": "shipping City 3",
                        "shippingAddressCounty": "Shipping County 3",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode3",
                        "shippingEmailAddress": "shippingemail3@channelgrabber.com",
                        "shippingPhoneNumber": "07415878963",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.03,
                        "buyerMessage": "Hello, please leave at the door3",
                        "purchaseDate": "2013-10-10 00:30:00",
                        "paymentDate": "2013-10-10 01:30:00",
                        "printedDate": "2013-10-10 10:30:00",
                        "dispatchDate": "2013-10-10 10:30:10",
                        "archived": false,
                        "tag": [
                            "tag3",
                            "tag4"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod3",
                        "paymentReference": "paymentReference3"
                    },
                    {
                        "id": "1414-40",
                        "accountId": 1414,
                        "externalId": "40",
                        "channel": "ebay4",
                        "organisationUnitId": 4,
                        "total": 24.99,
                        "status": "4",
                        "shippingPrice": 40.99,
                        "shippingMethod": "standard4",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 4",
                        "billingAddressFullName": "Full Name 4",
                        "billingAddress1": "address 1 - 4",
                        "billingAddress2": "address 2 - 4",
                        "billingAddress3": "address 3 - 4",
                        "billingAddressCity": "City4",
                        "billingAddressCounty": "County4",
                        "billingAddressCountry": "UK",
                        "billingAddressPostcode": "Postcode4",
                        "billingEmailAddress": "emailaddress4@channelgrabber.com",
                        "billingPhoneNumber": "01942673434",
                        "billingAddressCountryCode": "GB",
                        "shippingAddressCompanyName": "Shipping Company Name 4",
                        "shippingAddressFullName": "Full Name 4",
                        "shippingAddress1": "shipping address 1 - 4",
                        "shippingAddress2": "shipping address 2 - 4",
                        "shippingAddress3": "shipping address 3 - 4",
                        "shippingAddressCity": "shipping City 4",
                        "shippingAddressCounty": "Shipping County 4",
                        "shippingAddressCountry": "UK",
                        "shippingAddressPostcode": "shipPostcode4",
                        "shippingEmailAddress": "shippingemail4@channelgrabber.com",
                        "shippingPhoneNumber": "07415878964",
                        "shippingAddressCountryCode": "GB",
                        "totalDiscount": 0.04,
                        "buyerMessage": "Hello, please leave at the door4",
                        "purchaseDate": "2013-10-10 00:40:00",
                        "paymentDate": "2013-10-10 01:40:00",
                        "printedDate": "2013-10-10 10:40:00",
                        "dispatchDate": "2013-10-10 10:40:10",
                        "archived": false,
                        "tag": [
                            "tag4",
                            "tag5"
                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 1,
                        "paymentMethod": "paymentMethod4",
                        "paymentReference": "paymentReference4"
                    },
                    {
                        "id": "1415-50",
                        "accountId": 1415,
                        "externalId": "50",
                        "channel": "ebay5",
                        "organisationUnitId": 5,
                        "total": 25.99,
                        "status": "5",
                        "shippingPrice": 50.99,
                        "shippingMethod": "standard5",
                        "currencyCode": "GBP",
                        "billingAddressCompanyName": "Company Name 5",
                        "billingAddressFullName": "Full Name 5",
                        "billingAddress1": "address 1 - 5",
                        "billingAddress2": "address 2 - 5",
                        "billingAddress3": "address 3 - 5",
                        "billingAddressCity": "City5",
                        "billingAddressCounty": "County5",
                        "billingAddressCountry": "France",
                        "billingAddressPostcode": "Postcode5",
                        "billingEmailAddress": "emailaddress5@channelgrabber.com",
                        "billingPhoneNumber": "01942673435",
                        "billingAddressCountryCode": "FR",
                        "shippingAddressCompanyName": "Shipping Company Name 5",
                        "shippingAddressFullName": "Full Name 5",
                        "shippingAddress1": "shipping address 1 - 5",
                        "shippingAddress2": "shipping address 2 - 5",
                        "shippingAddress3": "shipping address 3 - 5",
                        "shippingAddressCity": "shipping City 5",
                        "shippingAddressCounty": "Shipping County 5",
                        "shippingAddressCountry": "France",
                        "shippingAddressPostcode": "shipPostcode5",
                        "shippingEmailAddress": "shippingemail5@channelgrabber.com",
                        "shippingPhoneNumber": "07415878965",
                        "shippingAddressCountryCode": "FR",
                        "totalDiscount": 0.05,
                        "buyerMessage": "Hello, please leave at the door5",
                        "purchaseDate": "2013-10-10 00:50:00",
                        "paymentDate": "2013-10-10 01:50:00",
                        "printedDate": "2013-10-10 10:50:00",
                        "dispatchDate": "2013-10-10 10:50:10",
                        "archived": false,
                        "tag": [

                        ],
                        "cancellations": [

                        ],
                        "custom": [

                        ],
                        "batch": 2,
                        "paymentMethod": "paymentMethod5",
                        "paymentReference": "paymentReference5"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.13316583633423,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.10988688468933,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.22788596153259,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1411-10",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1411-10",
                    "accountId": 1411,
                    "externalId": "10",
                    "channel": "ebay",
                    "organisationUnitId": 1,
                    "total": 21.99,
                    "status": "1",
                    "shippingPrice": 10.99,
                    "shippingMethod": "standard",
                    "currencyCode": "GBP",
                    "billingAddressCompanyName": "Company Name 1",
                    "billingAddressFullName": "Full Name 1",
                    "billingAddress1": "address 1 - 1",
                    "billingAddress2": "address 2 - 1",
                    "billingAddress3": "address 3 - 1",
                    "billingAddressCity": "City1",
                    "billingAddressCounty": "County1",
                    "billingAddressCountry": "UK",
                    "billingAddressPostcode": "Postcode1",
                    "billingEmailAddress": "emailaddress1@channelgrabber.com",
                    "billingPhoneNumber": "01942673431",
                    "billingAddressCountryCode": "GB",
                    "shippingAddressCompanyName": "Shipping Company Name 1",
                    "shippingAddressFullName": "Full Name 1",
                    "shippingAddress1": "shipping address 1 - 1",
                    "shippingAddress2": "shipping address 2 - 1",
                    "shippingAddress3": "shipping address 3 - 1",
                    "shippingAddressCity": "shipping City 1",
                    "shippingAddressCounty": "Shipping County 1",
                    "shippingAddressCountry": "UK",
                    "shippingAddressPostcode": "shipPostcode1",
                    "shippingEmailAddress": "shippingemail1@channelgrabber.com",
                    "shippingPhoneNumber": "07415878961",
                    "shippingAddressCountryCode": "GB",
                    "totalDiscount": 0,
                    "buyerMessage": "Hello, please leave at the door",
                    "purchaseDate": "2013-10-10 00:00:00",
                    "paymentDate": "2013-10-10 01:00:00",
                    "printedDate": "2013-10-10 10:00:00",
                    "dispatchDate": "2013-10-10 10:00:10",
                    "tag": [
                        "tag1",
                        "tag2",
                        "tag5"
                    ],
                    "cancellations": [
                        {
                            "type": "cancel",
                            "timestamp": "2014-10-10 00:00:00",
                            "reason": "No Payment Received",
                            "shippingAmount": 10.99,
                            "items": [
                                {
                                    "orderItemId": "1411-11",
                                    "sku": "test-sku-1",
                                    "quantity": 10,
                                    "amount": 0,
                                    "unitPrice": 1.99
                                },
                                {
                                    "orderItemId": "1411-11",
                                    "sku": "test-sku-1",
                                    "quantity": 0,
                                    "amount": 19.91,
                                    "unitPrice": 0
                                }
                            ]
                        }
                    ],
                    "custom": [

                    ],
                    "batch": 1,
                    "paymentMethod": "paymentMethod1",
                    "paymentReference": "paymentReference1"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.23248720169067,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1412-20",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1412-20",
                    "accountId": 1412,
                    "externalId": "20",
                    "channel": "ebay2",
                    "organisationUnitId": 2,
                    "total": 22.99,
                    "status": "2",
                    "shippingPrice": 20.99,
                    "shippingMethod": "standard2",
                    "currencyCode": "GBP",
                    "billingAddressCompanyName": "Company Name 2",
                    "billingAddressFullName": "Full Name 2",
                    "billingAddress1": "address 1 - 2",
                    "billingAddress2": "address 2 - 2",
                    "billingAddress3": "address 3 - 2",
                    "billingAddressCity": "City2",
                    "billingAddressCounty": "County2",
                    "billingAddressCountry": "UK",
                    "billingAddressPostcode": "Postcode2",
                    "billingEmailAddress": "emailaddress2@channelgrabber.com",
                    "billingPhoneNumber": "01942673432",
                    "billingAddressCountryCode": "GB",
                    "shippingAddressCompanyName": "Shipping Company Name 2",
                    "shippingAddressFullName": "Full Name 2",
                    "shippingAddress1": "shipping address 1 - 2",
                    "shippingAddress2": "shipping address 2 - 2",
                    "shippingAddress3": "shipping address 3 - 2",
                    "shippingAddressCity": "shipping City 2",
                    "shippingAddressCounty": "Shipping County 2",
                    "shippingAddressCountry": "UK",
                    "shippingAddressPostcode": "shipPostcode2",
                    "shippingEmailAddress": "shippingemail2@channelgrabber.com",
                    "shippingPhoneNumber": "07415878962",
                    "shippingAddressCountryCode": "GB",
                    "totalDiscount": 0.02,
                    "buyerMessage": "Hello, please leave at the door2",
                    "purchaseDate": "2013-10-10 00:20:00",
                    "paymentDate": "2013-10-10 01:20:00",
                    "printedDate": "2013-10-10 10:20:00",
                    "dispatchDate": "2013-10-10 10:20:10",
                    "tag": [
                        "tag2",
                        "tag3"
                    ],
                    "cancellations": [

                    ],
                    "custom": [

                    ],
                    "batch": 1,
                    "paymentMethod": "paymentMethod2",
                    "paymentReference": "paymentReference2"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.21693992614746,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.10934209823608,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.12307190895081,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.13538002967834,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11518883705139,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11392188072205,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.20985698699951,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.21643495559692,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.22928094863892,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.2127640247345,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderEntityCest.checkEntityEmbed)",
    "status": "fail",
    "time": 0.22029995918274,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 327,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 1.4808709621429,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.12022185325623,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.21804714202881,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/order\/1411-10"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22666597366333,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.2371039390564,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.22020602226257,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.21446299552917,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10",
                "CG\\Order\\Test\\Api\\Page\\OrderEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.22405910491943,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10",
                "CG\\Order\\Test\\Api\\Page\\OrderEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.21816492080688,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.21186304092407,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10",
                "CG\\Order\\Test\\Api\\Page\\OrderEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.21123695373535,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10",
                "CG\\Order\\Test\\Api\\Page\\OrderEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.23664402961731,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/order\/1411-10",
                "CG\\Order\\Test\\Api\\Page\\OrderEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.28486704826355,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.24931812286377,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\"'s etag to change (CG.Order.Test.Api.Cest.OrderEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/order\/1411-10\"'s etag to change (CG.Order.Test.Api.Cest.OrderEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.34132385253906,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.23711895942688,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.23661589622498,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 0.26443719863892,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 328,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollection)",
    "status": "pass",
    "time": 0.18886613845825,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkPagination)",
    "status": "pass",
    "time": 0.4197039604187,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.26077604293823,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.hasFilters)",
    "status": "pass",
    "time": 0.11816000938416,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFilters)",
    "status": "pass",
    "time": 0.11120915412903,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.12901282310486,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntity)",
    "status": "pass",
    "time": 0.11914896965027,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.11366605758667,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.29207587242126,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11224603652954,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.13600587844849,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.18292093276978,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.18285393714905,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.18203115463257,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11024403572083,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.15281391143799,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11877608299255,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testRangeFilters)",
    "status": "pass",
    "time": 0.11709403991699,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.11840605735779,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.10931706428528,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11226511001587,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewInHal)",
    "status": "pass",
    "time": 0.27691292762756,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.28143215179443,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkUplink)",
    "status": "pass",
    "time": 0.19233894348145,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.28426790237427,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11368298530579,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.FeeCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11257696151733,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.20204591751099,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field orderItemId is \"1411-12\" and should be \"1411-12\" or maybe this is missing: Array\n(\n    [orderItemId] => 1411-12\n    [amount] => 5.99\n    [id] => 5\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.fee",
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field orderItemId is \"1411-12\" and should be \"1411-12\" or maybe this is missing: Array\n(\n    [orderItemId] => 1411-12\n    [amount] => 5.99\n    [id] => 5\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.21674919128418,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.11575102806091,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.FeeCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.FeeCest.getSortDirections)",
    "status": "pass",
    "time": 0.11738681793213,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.FeeCest.checkSortCollection)",
    "status": "fail",
    "time": 0.19260692596436,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 1
                    }
                ],
                [
                    {
                        "name": "eBayFee",
                        "amount": 1.99,
                        "orderItemId": "1411-11",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/1"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 2.99,
                        "orderItemId": "1411-11",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/2"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 3.99,
                        "orderItemId": "1411-11",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/3"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 4.99,
                        "orderItemId": "1411-11",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/4"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    },
                    {
                        "name": "eBayFee",
                        "amount": 6.99,
                        "orderItemId": "1411-11",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/fee\/6"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/fee"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItem\\FeePage",
                "\/orderItem\/1411-11\/fee?orderBy=orderItemId&orderDirection=ASC",
                [
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 1.99,
                        "id": 1,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 2.99,
                        "id": 2,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 3.99,
                        "id": 3,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 4.99,
                        "id": 4,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-11",
                        "name": "eBayFee",
                        "amount": 6.99,
                        "id": 6,
                        "organisationUnitId": 1
                    },
                    {
                        "orderItemId": "1411-12",
                        "name": "eBayFee",
                        "amount": 5.99,
                        "id": 5,
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.11214780807495,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.FeeCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.15409398078918,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.21931505203247,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.18696904182434,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.1936469078064,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.12673211097717,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11341714859009,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11575198173523,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11136412620544,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.12034893035889,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.19182109832764,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.32566595077515,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.26935195922852,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.19473600387573,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.12424302101135,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11465811729431,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11541390419006,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.1873300075531,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22225499153137,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.20190215110779,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.26223397254944,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.19676113128662,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.28066205978394,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.18896579742432,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.26411509513855,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.29655408859253,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.26417088508606,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.19913721084595,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.21704077720642,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/fee\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/fee\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.47240400314331,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 1.3632619380951,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.19993209838867,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.FeeEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.11327290534973,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollection)",
    "status": "pass",
    "time": 0.19699192047119,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkPagination)",
    "status": "pass",
    "time": 0.42613315582275,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.25973010063171,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.hasFilters)",
    "status": "pass",
    "time": 0.11109495162964,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFilters)",
    "status": "pass",
    "time": 0.11386489868164,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.11873197555542,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntity)",
    "status": "pass",
    "time": 0.11484003067017,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.11273789405823,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.29683184623718,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11406493186951,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.1338632106781,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.18331694602966,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.1817479133606,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.18250012397766,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11224102973938,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.1424400806427,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11097407341003,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testRangeFilters)",
    "status": "pass",
    "time": 0.10973501205444,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.1128249168396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.10949397087097,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11536693572998,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewInHal)",
    "status": "pass",
    "time": 0.19566798210144,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.29778599739075,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkUplink)",
    "status": "pass",
    "time": 0.19492101669312,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.26264786720276,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11905813217163,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11529397964478,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.19995903968811,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderItemId] => 1411-12\n    [giftWrapMessage] => Wrap Message 5\n    [giftWrapPrice] => 5.99\n    [giftWrapTaxPercentage] => 0.5\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.giftWrap",
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"5\" and should be \"5\" or maybe this is missing: Array\n(\n    [id] => 5\n    [orderItemId] => 1411-12\n    [giftWrapMessage] => Wrap Message 5\n    [giftWrapPrice] => 5.99\n    [giftWrapTaxPercentage] => 0.5\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.19164896011353,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.1129469871521,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.getSortDirections)",
    "status": "pass",
    "time": 0.1311149597168,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.checkSortCollection)",
    "status": "fail",
    "time": 0.19654893875122,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ],
                [
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "orderItemId": "1411-11",
                        "id": 1,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/1"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "orderItemId": "1411-11",
                        "id": 2,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/2"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "orderItemId": "1411-11",
                        "id": 3,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/3"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "orderItemId": "1411-11",
                        "id": 4,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/4"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    },
                    {
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "orderItemId": "1411-11",
                        "id": 6,
                        "organisationUnitId": 1,
                        "_links": {
                            "self": {
                                "href": "\/orderItem\/1411-11\/giftWrap\/6"
                            },
                            "up": {
                                "href": "\/orderItem\/1411-11\/giftWrap"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItem\\GiftWrapPage",
                "\/orderItem\/1411-11\/giftWrap?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": 1,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 1",
                        "giftWrapPrice": 1.99,
                        "giftWrapTaxPercentage": 0.1,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 2,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 2",
                        "giftWrapPrice": 2.99,
                        "giftWrapTaxPercentage": 0.2,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 3,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 3",
                        "giftWrapPrice": 3.99,
                        "giftWrapTaxPercentage": 0.3,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 4,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 4",
                        "giftWrapPrice": 4.99,
                        "giftWrapTaxPercentage": 0.4,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 5,
                        "orderItemId": "1411-12",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 5",
                        "giftWrapPrice": 5.99,
                        "giftWrapTaxPercentage": 0.5,
                        "organisationUnitId": 1
                    },
                    {
                        "id": 6,
                        "orderItemId": "1411-11",
                        "giftWrapType": "Standard",
                        "giftWrapMessage": "Wrap Message 6",
                        "giftWrapPrice": 6.99,
                        "giftWrapTaxPercentage": 0.6,
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.11705899238586,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItem.GiftWrapCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11313009262085,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.22095489501953,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewSecondaryEntity)",
    "status": "pass",
    "time": 0.22785305976868,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.19007110595703,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.11456179618835,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11174893379211,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11192393302917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.14214897155762,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.12241911888123,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.19568610191345,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.26694393157959,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.27004408836365,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.19957208633423,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.115718126297,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11253094673157,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11039590835571,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.19251489639282,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.23635387420654,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.19149017333984,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.2869770526886,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.hasETagHeader)",
    "status": "pass",
    "time": 0.20453095436096,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.25788688659668,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 41,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.sendInvalidETagGetNewETag)",
    "status": "pass",
    "time": 0.18580007553101,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.27256608009338,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 85,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.27901721000671,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 109,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.26564502716064,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 138,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                304
            ]
        }
    ],
    "message": "Failed asserting that 409 matches expected 304.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETag)",
    "status": "pass",
    "time": 0.20144701004028,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.20434212684631,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/giftwrap\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\/giftwrap\/1\"'s etag to change (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.46178507804871,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.20953607559204,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.20107483863831,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.OrderItem.GiftWrapEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.11212301254272,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollection)",
    "status": "fail",
    "time": 0.21380305290222,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-11\" and should be \"1411-11\" or maybe this is missing: Array\n(\n    [id] => 1411-11\n    [orderId] => 1411-10\n    [accountId] => 1411\n    [itemName] => Order Item 1\n    [individualItemPrice] => 1.99\n    [itemQuantity] => 10\n    [itemSku] => test-sku-1\n    [itemTaxPercentage] => 0.1\n    [individualItemDiscountPrice] => 0.199\n    [itemVariationAttribute] => Array\n        (\n            [colour] => red\n            [size] => 10cm\n        )\n\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.item",
                [
                    {
                        "id": "1411-11",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 1",
                        "individualItemPrice": 1.99,
                        "itemQuantity": 10,
                        "itemSku": "test-sku-1",
                        "itemTaxPercentage": 0.1,
                        "individualItemDiscountPrice": 0.199,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "10cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-12",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 2",
                        "individualItemPrice": 2.99,
                        "itemQuantity": 20,
                        "itemSku": "test-sku-2",
                        "itemTaxPercentage": 0.2,
                        "individualItemDiscountPrice": 0.299,
                        "itemVariationAttribute": {
                            "colour": "blue",
                            "size": "20cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-13",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 3",
                        "individualItemPrice": 3.99,
                        "itemQuantity": 30,
                        "itemSku": "test-sku-3",
                        "itemTaxPercentage": 0.3,
                        "individualItemDiscountPrice": 0.399,
                        "itemVariationAttribute": {
                            "colour": "yellow",
                            "size": "30cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-44",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-1",
                        "individualItemPrice": 4.99,
                        "itemQuantity": 40,
                        "itemSku": "test-sku-4",
                        "itemTaxPercentage": 0.4,
                        "individualItemDiscountPrice": 0.499,
                        "itemVariationAttribute": {
                            "colour": "green",
                            "size": "40cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-45",
                        "orderId": "1412-20",
                        "accountId": 1411,
                        "itemName": "Order Item-2",
                        "individualItemPrice": 5.99,
                        "itemQuantity": 50,
                        "itemSku": "test-sku-5",
                        "itemTaxPercentage": 0.5,
                        "individualItemDiscountPrice": 0.599,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "50cm"
                        },
                        "organisationUnitId": 2
                    },
                    {
                        "id": "1411-46",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-6",
                        "individualItemPrice": 6.99,
                        "itemQuantity": 60,
                        "itemSku": "test-sku-6",
                        "itemTaxPercentage": 0.6,
                        "individualItemDiscountPrice": 0.699,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "60cm"
                        },
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-11\" and should be \"1411-11\" or maybe this is missing: Array\n(\n    [id] => 1411-11\n    [orderId] => 1411-10\n    [accountId] => 1411\n    [itemName] => Order Item 1\n    [individualItemPrice] => 1.99\n    [itemQuantity] => 10\n    [itemSku] => test-sku-1\n    [itemTaxPercentage] => 0.1\n    [individualItemDiscountPrice] => 0.199\n    [itemVariationAttribute] => Array\n        (\n            [colour] => red\n            [size] => 10cm\n        )\n\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItemCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItemCest.checkPagination)",
    "status": "fail",
    "time": 0.20564293861389,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 237,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json _links.\"last\" equals \"\/orderItem?limit=2&page=9\". Expected \"\/orderItem?page=3&limit=2\""
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3224,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 157,
            "function": "seeLinksContains",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "_links.first": {
                        "href": "\/orderItem?page=1&limit=2"
                    },
                    "_links.last": {
                        "href": "\/orderItem?page=3&limit=2"
                    },
                    "_links.self": {
                        "href": "\/orderItem?page=1&limit=2"
                    },
                    "_links.next": {
                        "href": "\/orderItem?page=2&limit=2"
                    }
                }
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItemPage",
                [

                ],
                [
                    {
                        "id": "1411-11",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 1",
                        "individualItemPrice": 1.99,
                        "itemQuantity": 10,
                        "itemSku": "test-sku-1",
                        "itemTaxPercentage": 0.1,
                        "individualItemDiscountPrice": 0.199,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "10cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-12",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 2",
                        "individualItemPrice": 2.99,
                        "itemQuantity": 20,
                        "itemSku": "test-sku-2",
                        "itemTaxPercentage": 0.2,
                        "individualItemDiscountPrice": 0.299,
                        "itemVariationAttribute": {
                            "colour": "blue",
                            "size": "20cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-13",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 3",
                        "individualItemPrice": 3.99,
                        "itemQuantity": 30,
                        "itemSku": "test-sku-3",
                        "itemTaxPercentage": 0.3,
                        "individualItemDiscountPrice": 0.399,
                        "itemVariationAttribute": {
                            "colour": "yellow",
                            "size": "30cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-44",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-1",
                        "individualItemPrice": 4.99,
                        "itemQuantity": 40,
                        "itemSku": "test-sku-4",
                        "itemTaxPercentage": 0.4,
                        "individualItemDiscountPrice": 0.499,
                        "itemVariationAttribute": {
                            "colour": "green",
                            "size": "40cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-45",
                        "orderId": "1412-20",
                        "accountId": 1411,
                        "itemName": "Order Item-2",
                        "individualItemPrice": 5.99,
                        "itemQuantity": 50,
                        "itemSku": "test-sku-5",
                        "itemTaxPercentage": 0.5,
                        "individualItemDiscountPrice": 0.599,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "50cm"
                        },
                        "organisationUnitId": 2
                    },
                    {
                        "id": "1411-46",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-6",
                        "individualItemPrice": 6.99,
                        "itemQuantity": 60,
                        "itemSku": "test-sku-6",
                        "itemTaxPercentage": 0.6,
                        "individualItemDiscountPrice": 0.699,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "60cm"
                        },
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Response Json _links.\"last\" equals \"\/orderItem?limit=2&page=9\". Expected \"\/orderItem?page=3&limit=2\"",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItemCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderItemCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.29767203330994,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItemCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderItemCest.hasFilters)",
    "status": "pass",
    "time": 0.11550807952881,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItemCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.OrderItemCest.checkFilters)",
    "status": "pass",
    "time": 0.1126708984375,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItemCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.OrderItemCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.1205141544342,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItemCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderItemCest.createEntity)",
    "status": "pass",
    "time": 0.12336206436157,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.1216139793396,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11217212677002,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.13548398017883,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderItemCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11166501045227,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderItemCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderItemCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.11415719985962,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderItemCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderItemCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.11122703552246,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.15267395973206,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderItemCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11095595359802,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItemCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderItemCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.11106586456299,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItemCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderItemCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.12681889533997,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItemCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderItemCest.testRangeFilters)",
    "status": "pass",
    "time": 0.11184906959534,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItemCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.OrderItemCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.12986302375793,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItemCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderItemCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.13809895515442,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItemCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderItemCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.12277007102966,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemCest.viewInHal)",
    "status": "pass",
    "time": 0.21017694473267,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.33616900444031,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemCest.checkUplink)",
    "status": "pass",
    "time": 0.22766399383545,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.31639504432678,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.109295129776,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderItemCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11585998535156,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.22663307189941,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1411-11\" and should be \"1411-11\" or maybe this is missing: Array\n(\n    [id] => 1411-11\n    [orderId] => 1411-10\n    [accountId] => 1411\n    [itemName] => Order Item 1\n    [individualItemPrice] => 1.99\n    [itemQuantity] => 10\n    [itemSku] => test-sku-1\n    [itemTaxPercentage] => 0.1\n    [individualItemDiscountPrice] => 0.199\n    [itemVariationAttribute] => Array\n        (\n            [colour] => red\n            [size] => 10cm\n        )\n\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.item",
                [
                    {
                        "id": "1411-11",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 1",
                        "individualItemPrice": 1.99,
                        "itemQuantity": 10,
                        "itemSku": "test-sku-1",
                        "itemTaxPercentage": 0.1,
                        "individualItemDiscountPrice": 0.199,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "10cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-12",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 2",
                        "individualItemPrice": 2.99,
                        "itemQuantity": 20,
                        "itemSku": "test-sku-2",
                        "itemTaxPercentage": 0.2,
                        "individualItemDiscountPrice": 0.299,
                        "itemVariationAttribute": {
                            "colour": "blue",
                            "size": "20cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-13",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 3",
                        "individualItemPrice": 3.99,
                        "itemQuantity": 30,
                        "itemSku": "test-sku-3",
                        "itemTaxPercentage": 0.3,
                        "individualItemDiscountPrice": 0.399,
                        "itemVariationAttribute": {
                            "colour": "yellow",
                            "size": "30cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-44",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-1",
                        "individualItemPrice": 4.99,
                        "itemQuantity": 40,
                        "itemSku": "test-sku-4",
                        "itemTaxPercentage": 0.4,
                        "individualItemDiscountPrice": 0.499,
                        "itemVariationAttribute": {
                            "colour": "green",
                            "size": "40cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-45",
                        "orderId": "1412-20",
                        "accountId": 1411,
                        "itemName": "Order Item-2",
                        "individualItemPrice": 5.99,
                        "itemQuantity": 50,
                        "itemSku": "test-sku-5",
                        "itemTaxPercentage": 0.5,
                        "individualItemDiscountPrice": 0.599,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "50cm"
                        },
                        "organisationUnitId": 2
                    },
                    {
                        "id": "1411-46",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-6",
                        "individualItemPrice": 6.99,
                        "itemQuantity": 60,
                        "itemSku": "test-sku-6",
                        "itemTaxPercentage": 0.6,
                        "individualItemDiscountPrice": 0.699,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "60cm"
                        },
                        "organisationUnitId": 1
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1411-11\" and should be \"1411-11\" or maybe this is missing: Array\n(\n    [id] => 1411-11\n    [orderId] => 1411-10\n    [accountId] => 1411\n    [itemName] => Order Item 1\n    [individualItemPrice] => 1.99\n    [itemQuantity] => 10\n    [itemSku] => test-sku-1\n    [itemTaxPercentage] => 0.1\n    [individualItemDiscountPrice] => 0.199\n    [itemVariationAttribute] => Array\n        (\n            [colour] => red\n            [size] => 10cm\n        )\n\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderItemCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.18820405006409,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItemCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.OrderItemCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.11213397979736,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItemCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderItemCest.getSortDirections)",
    "status": "pass",
    "time": 0.11928701400757,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItemCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderItemCest.checkSortCollection)",
    "status": "fail",
    "time": 0.17662882804871,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.item"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.item"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderItemPage",
                "\/orderItem?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-11",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 1",
                        "individualItemPrice": 1.99,
                        "itemQuantity": 10,
                        "itemSku": "test-sku-1",
                        "itemTaxPercentage": 0.1,
                        "individualItemDiscountPrice": 0.199,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "10cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-12",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 2",
                        "individualItemPrice": 2.99,
                        "itemQuantity": 20,
                        "itemSku": "test-sku-2",
                        "itemTaxPercentage": 0.2,
                        "individualItemDiscountPrice": 0.299,
                        "itemVariationAttribute": {
                            "colour": "blue",
                            "size": "20cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-13",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item 3",
                        "individualItemPrice": 3.99,
                        "itemQuantity": 30,
                        "itemSku": "test-sku-3",
                        "itemTaxPercentage": 0.3,
                        "individualItemDiscountPrice": 0.399,
                        "itemVariationAttribute": {
                            "colour": "yellow",
                            "size": "30cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-44",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-1",
                        "individualItemPrice": 4.99,
                        "itemQuantity": 40,
                        "itemSku": "test-sku-4",
                        "itemTaxPercentage": 0.4,
                        "individualItemDiscountPrice": 0.499,
                        "itemVariationAttribute": {
                            "colour": "green",
                            "size": "40cm"
                        },
                        "organisationUnitId": 1
                    },
                    {
                        "id": "1411-45",
                        "orderId": "1412-20",
                        "accountId": 1411,
                        "itemName": "Order Item-2",
                        "individualItemPrice": 5.99,
                        "itemQuantity": 50,
                        "itemSku": "test-sku-5",
                        "itemTaxPercentage": 0.5,
                        "individualItemDiscountPrice": 0.599,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "50cm"
                        },
                        "organisationUnitId": 2
                    },
                    {
                        "id": "1411-46",
                        "orderId": "1411-10",
                        "accountId": 1411,
                        "itemName": "Order Item-6",
                        "individualItemPrice": 6.99,
                        "itemQuantity": 60,
                        "itemSku": "test-sku-6",
                        "itemTaxPercentage": 0.6,
                        "individualItemDiscountPrice": 0.699,
                        "itemVariationAttribute": {
                            "colour": "red",
                            "size": "60cm"
                        },
                        "organisationUnitId": 1
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.14887595176697,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderItemCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.12028288841248,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.57285499572754,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1411-11",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1411-11",
                    "orderId": "1411-10",
                    "accountId": 1411,
                    "itemName": "Order Item 1",
                    "individualItemPrice": 1.99,
                    "itemQuantity": 10,
                    "itemSku": "test-sku-1",
                    "itemTaxPercentage": 0.1,
                    "individualItemDiscountPrice": 0.199,
                    "itemVariationAttribute": {
                        "colour": "red",
                        "size": "10cm"
                    },
                    "organisationUnitId": 1
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.21397304534912,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1411-12",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1411-12",
                    "orderId": "1411-10",
                    "accountId": 1411,
                    "itemName": "Order Item 2",
                    "individualItemPrice": 2.99,
                    "itemQuantity": 20,
                    "itemSku": "test-sku-2",
                    "itemTaxPercentage": 0.2,
                    "individualItemDiscountPrice": 0.299,
                    "itemVariationAttribute": {
                        "colour": "blue",
                        "size": "20cm"
                    },
                    "organisationUnitId": 1
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.19337201118469,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.11192202568054,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11753010749817,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11266112327576,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.15408301353455,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderItemEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.1342761516571,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.19451498985291,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.19087886810303,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.19248294830322,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.23840403556824,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "see that entity contains correct embedded data (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkEntityEmbed)",
    "status": "fail",
    "time": 0.1921648979187,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 327,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 1.027302980423,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.12023186683655,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderItemEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.20615196228027,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/orderItem\/1411-11"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22377896308899,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.18930816650391,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.19267988204956,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItemEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.OrderItemEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.21282505989075,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/orderItem\/1411-11",
                "CG\\Order\\Test\\Api\\Page\\OrderItemEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.19337201118469,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/orderItem\/1411-11",
                "CG\\Order\\Test\\Api\\Page\\OrderItemEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.OrderItemEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.19809508323669,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.19250082969666,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/orderItem\/1411-11",
                "CG\\Order\\Test\\Api\\Page\\OrderItemEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.21606302261353,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/orderItem\/1411-11",
                "CG\\Order\\Test\\Api\\Page\\OrderItemEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.19467115402222,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/orderItem\/1411-11",
                "CG\\Order\\Test\\Api\\Page\\OrderItemEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\OrderItemEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.23718309402466,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "pass",
    "time": 0.20685791969299,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\"'s etag to change (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/orderitem\/1411-11\"'s etag to change (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.54063010215759,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 229,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "pass",
    "time": 0.20684313774109,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.OrderItemEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "pass",
    "time": 0.21751689910889,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not update an entity with the wrong parent id (CG.Order.Test.Api.Cest.OrderItemEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "fail",
    "time": 0.27264809608459,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 328,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollection)",
    "status": "pass",
    "time": 0.21576404571533,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkPagination)",
    "status": "pass",
    "time": 0.48133707046509,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.OrderTagCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.26771593093872,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderTagCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.OrderTagCest.hasFilters)",
    "status": "pass",
    "time": 0.11209082603455,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkFilters)",
    "status": "pass",
    "time": 0.21378087997437,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.OrderTagCest.checkMultiFilters)",
    "status": "pass",
    "time": 0.19258594512939,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderTagCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.OrderTagCest.createEntity)",
    "status": "pass",
    "time": 0.11297678947449,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.11081314086914,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11159610748291,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.13266515731812,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.OrderTagCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.12163591384888,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderTagCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.OrderTagCest.createEmptyEntity)",
    "status": "pass",
    "time": 0.1105329990387,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderTagCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.OrderTagCest.createInvalidEntity)",
    "status": "pass",
    "time": 0.11166596412659,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11053204536438,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.OrderTagCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.12376403808594,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderTagCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.OrderTagCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.11007285118103,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderTagCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.OrderTagCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.13905715942383,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderTagCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.OrderTagCest.testRangeFilters)",
    "status": "pass",
    "time": 0.11578798294067,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderTagCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.OrderTagCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.24640107154846,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderTagCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.OrderTagCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.12463998794556,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderTagCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.OrderTagCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11192393302917,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagCest.viewInHal)",
    "status": "pass",
    "time": 0.19545292854309,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.35635900497437,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagCest.checkUplink)",
    "status": "pass",
    "time": 0.20175290107727,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.2898690700531,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.11957001686096,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.OrderTagCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11335492134094,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionAll)",
    "status": "pass",
    "time": 0.19940805435181,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.OrderTagCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.1795961856842,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderTagCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.OrderTagCest.checkFiltersPagination)",
    "status": "pass",
    "time": 0.30653309822083,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderTagCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.OrderTagCest.getSortDirections)",
    "status": "pass",
    "time": 2.0301389694214,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderTagCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.OrderTagCest.checkSortCollection)",
    "status": "fail",
    "time": 0.18345785140991,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.orderTag"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.orderTag"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\OrderTagPage",
                "\/orderTag?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1411-10-tag1",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag1"
                    },
                    {
                        "id": "1411-10-tag2",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag2"
                    },
                    {
                        "id": "1411-10-tag5",
                        "orderId": "1411-10",
                        "organisationUnitId": 1,
                        "tag": "tag5"
                    },
                    {
                        "id": "1412-20-tag3",
                        "orderId": "1412-20",
                        "organisationUnitId": 2,
                        "tag": "tag3"
                    },
                    {
                        "id": "1413-30-tag4",
                        "orderId": "1413-30",
                        "organisationUnitId": 3,
                        "tag": "tag4"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.12268710136414,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.OrderTagCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.1105649471283,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get page class (CG.Order.Test.Api.Cest.OrderTagEntityCest.getPageClass)"
}{
    "event": "test",
    "suite": "api",
    "test": "get page class (CG.Order.Test.Api.Cest.OrderTagEntityCest.getPageClass)",
    "status": "pass",
    "time": 0.10829305648804,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewPrimaryEntity)",
    "status": "pass",
    "time": 0.22390604019165,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.22684788703918,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 244,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "1411-10-tag2",
                "1412-20-tag2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "isEqual",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "1411-10-tag2",
                "1412-20-tag2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1411-10-tag2",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1411-10-tag2",
                    "orderId": "1411-10",
                    "organisationUnitId": 1,
                    "tag": "tag2"
                }
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.18453598022461,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.11085414886475,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11243891716003,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11380314826965,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11159205436707,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.OrderTagEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.1587929725647,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntity)",
    "status": "pass",
    "time": 0.19572997093201,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGet)",
    "status": "pass",
    "time": 0.2565438747406,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "pass",
    "time": 0.26669192314148,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.OrderTagEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.21181607246399,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11776399612427,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11677002906799,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11678910255432,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.OrderTagEntityCest.viewInHal)",
    "status": "pass",
    "time": 0.18541717529297,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.2225980758667,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkUplink)",
    "status": "pass",
    "time": 0.21762990951538,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.OrderTagEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.25323700904846,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the \/ endpoints (CG.Order.Test.Api.Cest.RootCest.viewEndpoints)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the \/ endpoints (CG.Order.Test.Api.Cest.RootCest.viewEndpoints)",
    "status": "pass",
    "time": 0.17707705497742,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.RootCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.RootCest.viewInHal)",
    "status": "pass",
    "time": 0.16674017906189,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.RootCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.RootCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.36930108070374,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check uplink (CG.Order.Test.Api.Cest.RootCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check uplink (CG.Order.Test.Api.Cest.RootCest.checkUplink)",
    "status": "pass",
    "time": 0.12324690818787,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.RootCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.RootCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.2306079864502,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollection)",
    "status": "fail",
    "time": 0.22983002662659,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1\" and should be \"1\" or maybe this is missing: Array\n(\n    [id] => 1\n    [minHeight] => 100\n    [minWidth] => 200\n    [elements] => Array\n        (\n            [0] => Array\n                (\n                    [templateType] => Text\n                    [fontSize] => 12\n                    [fontFamily] => CG\\Template\\FontFamily\\Courier\n                    [text] => Random Text\n                    [fontColour] => red\n                )\n\n        )\n\n    [name] => name1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.template",
                [
                    {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    },
                    {
                        "id": "2",
                        "type": "product",
                        "organisationUnitId": 2,
                        "minHeight": 200,
                        "minWidth": 300,
                        "elements": [
                            {
                                "templateType": "SellerAddress",
                                "fontSize": 14,
                                "fontFamily": "CG\\Template\\FontFamily\\Helvetica",
                                "fontColour": "blue"
                            }
                        ],
                        "name": "name2"
                    },
                    {
                        "id": "3",
                        "type": "ebay",
                        "organisationUnitId": 3,
                        "minHeight": 300,
                        "minWidth": 400,
                        "elements": [
                            {
                                "templateType": "DeliveryAddress",
                                "fontSize": 16,
                                "fontFamily": "CG\\Template\\FontFamily\\Symbol",
                                "fontColour": "green"
                            }
                        ],
                        "name": "name3"
                    },
                    {
                        "id": "4",
                        "type": "amazon",
                        "organisationUnitId": 4,
                        "minHeight": 400,
                        "minWidth": 500,
                        "elements": [
                            {
                                "templateType": "OrderTable"
                            }
                        ],
                        "name": "name4"
                    },
                    {
                        "id": "5",
                        "type": "invoice",
                        "organisationUnitId": 5,
                        "minHeight": 500,
                        "minWidth": 600,
                        "elements": [
                            {
                                "templateType": "Image",
                                "source": "data:\/\/image\/jpeg;base64,base64encodedImageData",
                                "format": "jpeg"
                            }
                        ],
                        "name": "name5"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1\" and should be \"1\" or maybe this is missing: Array\n(\n    [id] => 1\n    [minHeight] => 100\n    [minWidth] => 200\n    [elements] => Array\n        (\n            [0] => Array\n                (\n                    [templateType] => Text\n                    [fontSize] => 12\n                    [fontFamily] => CG\\Template\\FontFamily\\Courier\n                    [text] => Random Text\n                    [fontColour] => red\n                )\n\n        )\n\n    [name] => name1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.TemplateCest.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.TemplateCest.checkPagination)",
    "status": "fail",
    "time": 0.22659993171692,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 237,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json _links.\"last\" equals \"\/template?limit=2&page=2\". Expected \"\/template?page=3&limit=2\""
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3224,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 157,
            "function": "seeLinksContains",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "_links.first": {
                        "href": "\/template?page=1&limit=2"
                    },
                    "_links.last": {
                        "href": "\/template?page=3&limit=2"
                    },
                    "_links.self": {
                        "href": "\/template?page=1&limit=2"
                    },
                    "_links.next": {
                        "href": "\/template?page=2&limit=2"
                    }
                }
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\TemplatePage",
                [

                ],
                [
                    {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    },
                    {
                        "id": "2",
                        "type": "product",
                        "organisationUnitId": 2,
                        "minHeight": 200,
                        "minWidth": 300,
                        "elements": [
                            {
                                "templateType": "SellerAddress",
                                "fontSize": 14,
                                "fontFamily": "CG\\Template\\FontFamily\\Helvetica",
                                "fontColour": "blue"
                            }
                        ],
                        "name": "name2"
                    },
                    {
                        "id": "3",
                        "type": "ebay",
                        "organisationUnitId": 3,
                        "minHeight": 300,
                        "minWidth": 400,
                        "elements": [
                            {
                                "templateType": "DeliveryAddress",
                                "fontSize": 16,
                                "fontFamily": "CG\\Template\\FontFamily\\Symbol",
                                "fontColour": "green"
                            }
                        ],
                        "name": "name3"
                    },
                    {
                        "id": "4",
                        "type": "amazon",
                        "organisationUnitId": 4,
                        "minHeight": 400,
                        "minWidth": 500,
                        "elements": [
                            {
                                "templateType": "OrderTable"
                            }
                        ],
                        "name": "name4"
                    },
                    {
                        "id": "5",
                        "type": "invoice",
                        "organisationUnitId": 5,
                        "minHeight": 500,
                        "minWidth": 600,
                        "elements": [
                            {
                                "templateType": "Image",
                                "source": "data:\/\/image\/jpeg;base64,base64encodedImageData",
                                "format": "jpeg"
                            }
                        ],
                        "name": "name5"
                    }
                ]
            ]
        }
    ],
    "message": "Response Json _links.\"last\" equals \"\/template?limit=2&page=2\". Expected \"\/template?page=3&limit=2\"",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.TemplateCest.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.TemplateCest.checkCollectionCache)",
    "status": "pass",
    "time": 0.28892111778259,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.TemplateCest.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.TemplateCest.hasFilters)",
    "status": "pass",
    "time": 0.11737489700317,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkFilters)",
    "status": "fail",
    "time": 0.18824195861816,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 164,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.template",
                {
                    "1": {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.template",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection (CG.Order.Test.Api.Cest.TemplateCest.checkMultiFilters)",
    "status": "fail",
    "time": 0.1930079460144,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 203,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.template",
                {
                    "1": {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.template",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.TemplateCest.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.TemplateCest.createEntity)",
    "status": "pass",
    "time": 0.12074017524719,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGet)",
    "status": "pass",
    "time": 0.11719918251038,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollection)",
    "status": "fail",
    "time": 0.20928502082825,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 281,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                null,
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 326,
            "function": "createEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create a new entity (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionWithFilters)",
    "status": "fail",
    "time": 0.19351601600647,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 281,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                null,
                201
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 349,
            "function": "createEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 201.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.TemplateCest.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.TemplateCest.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11116790771484,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.TemplateCest.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with empty data (CG.Order.Test.Api.Cest.TemplateCest.createEmptyEntity)",
    "status": "fail",
    "time": 0.24430322647095,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 413,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3485,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 449,
            "function": "checkForFieldErrors",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                [
                    "type",
                    "organisationUnitId",
                    "minWidth",
                    "minHeight",
                    "elements",
                    "name"
                ]
            ]
        }
    ],
    "message": "Failed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.TemplateCest.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a entity with invalid data (CG.Order.Test.Api.Cest.TemplateCest.createInvalidEntity)",
    "status": "fail",
    "time": 0.18907713890076,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 413,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3485,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 478,
            "function": "checkForFieldErrors",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                [
                    "id",
                    "type",
                    "organisationUnitId",
                    "minWidth",
                    "minHeight",
                    "elements",
                    "name"
                ]
            ]
        }
    ],
    "message": "Failed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not create a new entity if i send additional fields (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.19998908042908,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.TemplateCest.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.11147499084473,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.TemplateCest.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.TemplateCest.testSingleDateFilter)",
    "status": "pass",
    "time": 0.11119508743286,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.TemplateCest.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.TemplateCest.testDateRangeFilter)",
    "status": "pass",
    "time": 0.15581297874451,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.TemplateCest.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.TemplateCest.testRangeFilters)",
    "status": "pass",
    "time": 0.12343883514404,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.TemplateCest.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters. (CG.Order.Test.Api.Cest.TemplateCest.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.31007480621338,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.TemplateCest.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.TemplateCest.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.11074495315552,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.TemplateCest.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.TemplateCest.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11296916007996,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateCest.viewInHal)",
    "status": "pass",
    "time": 0.23879909515381,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.29793214797974,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateCest.checkUplink)",
    "status": "pass",
    "time": 0.2267689704895,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.32065987586975,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.12410092353821,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.TemplateCest.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11806011199951,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionAll)",
    "status": "fail",
    "time": 0.23958992958069,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field id is \"1\" and should be \"1\" or maybe this is missing: Array\n(\n    [id] => 1\n    [minHeight] => 100\n    [minWidth] => 200\n    [elements] => Array\n        (\n            [0] => Array\n                (\n                    [templateType] => Text\n                    [fontSize] => 12\n                    [fontFamily] => CG\\Template\\FontFamily\\Courier\n                    [text] => Random Text\n                    [fontColour] => red\n                )\n\n        )\n\n    [name] => name1\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.template",
                [
                    {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    },
                    {
                        "id": "2",
                        "type": "product",
                        "organisationUnitId": 2,
                        "minHeight": 200,
                        "minWidth": 300,
                        "elements": [
                            {
                                "templateType": "SellerAddress",
                                "fontSize": 14,
                                "fontFamily": "CG\\Template\\FontFamily\\Helvetica",
                                "fontColour": "blue"
                            }
                        ],
                        "name": "name2"
                    },
                    {
                        "id": "3",
                        "type": "ebay",
                        "organisationUnitId": 3,
                        "minHeight": 300,
                        "minWidth": 400,
                        "elements": [
                            {
                                "templateType": "DeliveryAddress",
                                "fontSize": 16,
                                "fontFamily": "CG\\Template\\FontFamily\\Symbol",
                                "fontColour": "green"
                            }
                        ],
                        "name": "name3"
                    },
                    {
                        "id": "4",
                        "type": "amazon",
                        "organisationUnitId": 4,
                        "minHeight": 400,
                        "minWidth": 500,
                        "elements": [
                            {
                                "templateType": "OrderTable"
                            }
                        ],
                        "name": "name4"
                    },
                    {
                        "id": "5",
                        "type": "invoice",
                        "organisationUnitId": 5,
                        "minHeight": 500,
                        "minWidth": 600,
                        "elements": [
                            {
                                "templateType": "Image",
                                "source": "data:\/\/image\/jpeg;base64,base64encodedImageData",
                                "format": "jpeg"
                            }
                        ],
                        "name": "name5"
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field id is \"1\" and should be \"1\" or maybe this is missing: Array\n(\n    [id] => 1\n    [minHeight] => 100\n    [minWidth] => 200\n    [elements] => Array\n        (\n            [0] => Array\n                (\n                    [templateType] => Text\n                    [fontSize] => 12\n                    [fontFamily] => CG\\Template\\FontFamily\\Courier\n                    [text] => Random Text\n                    [fontColour] => red\n                )\n\n        )\n\n    [name] => name1\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.TemplateCest.viewCollectionZeroLimit)",
    "status": "pass",
    "time": 0.18510413169861,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.TemplateCest.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters work for this collection with pagination (CG.Order.Test.Api.Cest.TemplateCest.checkFiltersPagination)",
    "status": "fail",
    "time": 0.19887089729309,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 262,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Response Json does not have required key: _embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 91,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "template",
                1
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 108,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateCest",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\TemplatePage",
                {
                    "id": [
                        "1"
                    ],
                    "organisationUnitId": [
                        1
                    ],
                    "type": [
                        "invoice"
                    ]
                },
                {
                    "1": {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    }
                }
            ]
        }
    ],
    "message": "Response Json does not have required key: _embedded.template",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.TemplateCest.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.TemplateCest.getSortDirections)",
    "status": "pass",
    "time": 0.13717699050903,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.TemplateCest.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.TemplateCest.checkSortCollection)",
    "status": "fail",
    "time": 0.18589687347412,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.template"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\TemplatePage",
                "\/template?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1",
                        "type": "invoice",
                        "organisationUnitId": 1,
                        "minHeight": 100,
                        "minWidth": 200,
                        "elements": [
                            {
                                "templateType": "Text",
                                "fontSize": 12,
                                "fontFamily": "CG\\Template\\FontFamily\\Courier",
                                "text": "Random Text",
                                "fontColour": "red"
                            }
                        ],
                        "name": "name1"
                    },
                    {
                        "id": "2",
                        "type": "product",
                        "organisationUnitId": 2,
                        "minHeight": 200,
                        "minWidth": 300,
                        "elements": [
                            {
                                "templateType": "SellerAddress",
                                "fontSize": 14,
                                "fontFamily": "CG\\Template\\FontFamily\\Helvetica",
                                "fontColour": "blue"
                            }
                        ],
                        "name": "name2"
                    },
                    {
                        "id": "3",
                        "type": "ebay",
                        "organisationUnitId": 3,
                        "minHeight": 300,
                        "minWidth": 400,
                        "elements": [
                            {
                                "templateType": "DeliveryAddress",
                                "fontSize": 16,
                                "fontFamily": "CG\\Template\\FontFamily\\Symbol",
                                "fontColour": "green"
                            }
                        ],
                        "name": "name3"
                    },
                    {
                        "id": "4",
                        "type": "amazon",
                        "organisationUnitId": 4,
                        "minHeight": 400,
                        "minWidth": 500,
                        "elements": [
                            {
                                "templateType": "OrderTable"
                            }
                        ],
                        "name": "name4"
                    },
                    {
                        "id": "5",
                        "type": "invoice",
                        "organisationUnitId": 5,
                        "minHeight": 500,
                        "minWidth": 600,
                        "elements": [
                            {
                                "templateType": "Image",
                                "source": "data:\/\/image\/jpeg;base64,base64encodedImageData",
                                "format": "jpeg"
                            }
                        ],
                        "name": "name5"
                    }
                ],
                true
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.TemplateCest.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.TemplateCest.testTimestampFilter)",
    "status": "pass",
    "time": 0.1125271320343,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.TemplateCest.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.TemplateCest.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11200499534607,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.18133616447449,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1",
                    "type": "invoice",
                    "organisationUnitId": 1,
                    "minHeight": 100,
                    "minWidth": 200,
                    "elements": [
                        {
                            "templateType": "Text",
                            "fontSize": 12,
                            "fontFamily": "CG\\Template\\FontFamily\\Courier",
                            "text": "Random Text",
                            "fontColour": "red"
                        }
                    ],
                    "name": "name1"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.18191003799438,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "2",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "2",
                    "type": "product",
                    "organisationUnitId": 2,
                    "minHeight": 200,
                    "minWidth": 300,
                    "elements": [
                        {
                            "templateType": "SellerAddress",
                            "fontSize": 14,
                            "fontFamily": "CG\\Template\\FontFamily\\Helvetica",
                            "fontColour": "blue"
                        }
                    ],
                    "name": "name2"
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.25481200218201,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.12011790275574,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11586689949036,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.11872696876526,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.12830400466919,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.TemplateEntityCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11041808128357,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.23388504981995,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.18763208389282,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.21703219413757,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.TemplateEntityCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.18303203582764,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.13180112838745,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.12092900276184,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11216497421265,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateEntityCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.TemplateEntityCest.viewInHal)",
    "status": "fail",
    "time": 0.18521404266357,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/template\/1"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.TemplateEntityCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22471714019775,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateEntityCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.TemplateEntityCest.checkUplink)",
    "status": "fail",
    "time": 0.18294095993042,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateEntityCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.TemplateEntityCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.20698499679565,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.TemplateEntityCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.TemplateEntityCest.hasETagHeader)",
    "status": "fail",
    "time": 0.18227601051331,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/template\/1",
                "CG\\Order\\Test\\Api\\Page\\TemplateEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.TemplateEntityCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.TemplateEntityCest.sendETagGet304)",
    "status": "fail",
    "time": 0.18697094917297,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/template\/1",
                "CG\\Order\\Test\\Api\\Page\\TemplateEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.TemplateEntityCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.TemplateEntityCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.18312621116638,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.18435788154602,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/template\/1",
                "CG\\Order\\Test\\Api\\Page\\TemplateEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.20014619827271,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/template\/1",
                "CG\\Order\\Test\\Api\\Page\\TemplateEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.19245195388794,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/template\/1",
                "CG\\Order\\Test\\Api\\Page\\TemplateEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.18920397758484,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "fail",
    "time": 0.19834089279175,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 184,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/template\/1\"'s etag to change (CG.Order.Test.Api.Cest.TemplateEntityCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/template\/1\"'s etag to change (CG.Order.Test.Api.Cest.TemplateEntityCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.21926689147949,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/template\/1",
                "CG\\Order\\Test\\Api\\Page\\TemplateEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 223,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\TemplateEntityCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.20810103416443,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.TemplateEntityCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.19228482246399,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 422 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.TemplateEntityCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.12674999237061,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollection)",
    "status": "fail",
    "time": 0.17916083335876,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 304,
            "function": "assertTrue",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                false,
                "Expected value not found in the response Json field preference is \"Array\n(\n    [orderTable] => Array\n        (\n            [0] => tags\n            [1] => orderInformation\n            [2] => shippingService\n            [3] => dispatch\n        )\n\n    [other] => 1\n)\n\" and should be \"Array\n(\n    [orderTable] => Array\n        (\n            [0] => tags\n            [1] => orderInformation\n            [2] => shippingService\n            [3] => dispatch\n        )\n\n    [other] => 1\n)\n\" or maybe this is missing: Array\n(\n    [preference] => Array\n        (\n            [orderTable] => Array\n                (\n                    [0] => tags\n                    [1] => orderInformation\n                    [2] => shippingService\n                    [3] => dispatch\n                )\n\n            [other] => 1\n        )\n\n)\n"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 78,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.userPreference",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ]
            ]
        }
    ],
    "message": "Expected value not found in the response Json field preference is \"Array\n(\n    [orderTable] => Array\n        (\n            [0] => tags\n            [1] => orderInformation\n            [2] => shippingService\n            [3] => dispatch\n        )\n\n    [other] => 1\n)\n\" and should be \"Array\n(\n    [orderTable] => Array\n        (\n            [0] => tags\n            [1] => orderInformation\n            [2] => shippingService\n            [3] => dispatch\n        )\n\n    [other] => 1\n)\n\" or maybe this is missing: Array\n(\n    [preference] => Array\n        (\n            [orderTable] => Array\n                (\n                    [0] => tags\n                    [1] => orderInformation\n                    [2] => shippingService\n                    [3] => dispatch\n                )\n\n            [other] => 1\n        )\n\n)\n\nFailed asserting that false is true.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkPagination)",
    "status": "fail",
    "time": 0.20369100570679,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 117,
            "function": "fail",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "Failed asserting that 1 is equal to 2"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 95,
            "function": "isOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                1,
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 38,
            "function": "seeFieldIsOfSize",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 2889,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 136,
            "function": "seeEmbeddedTypeIsOfSize",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "userPreference",
                2
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/CollectionTrait.php",
            "line": 114,
            "function": "doPagination",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreference",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\UserPreferencePage",
                [

                ],
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ]
            ]
        }
    ],
    "message": "Failed asserting that 1 is equal to 2",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkCollectionCache)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection by page (CG.Order.Test.Api.Cest.UserPreference.checkCollectionCache)",
    "status": "pass",
    "time": 0.26055002212524,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.UserPreference.hasFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "has filters (CG.Order.Test.Api.Cest.UserPreference.hasFilters)",
    "status": "pass",
    "time": 0.11543607711792,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.UserPreference.checkFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters (CG.Order.Test.Api.Cest.UserPreference.checkFilters)",
    "status": "pass",
    "time": 0.11161804199219,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.UserPreference.checkMultiFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check multi filters (CG.Order.Test.Api.Cest.UserPreference.checkMultiFilters)",
    "status": "pass",
    "time": 0.11170721054077,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.UserPreference.createEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity (CG.Order.Test.Api.Cest.UserPreference.createEntity)",
    "status": "pass",
    "time": 0.11023998260498,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGet)",
    "status": "pass",
    "time": 0.15840291976929,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollection)",
    "status": "pass",
    "time": 0.11233901977539,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionWithFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection with filters (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionWithFilters)",
    "status": "pass",
    "time": 0.11849999427795,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityPutEntityThenGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity put entity then get collection (CG.Order.Test.Api.Cest.UserPreference.createEntityPutEntityThenGetCollection)",
    "status": "pass",
    "time": 0.111083984375,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.UserPreference.createEmptyEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create empty entity (CG.Order.Test.Api.Cest.UserPreference.createEmptyEntity)",
    "status": "pass",
    "time": 0.13300395011902,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.UserPreference.createInvalidEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "create invalid entity (CG.Order.Test.Api.Cest.UserPreference.createInvalidEntity)",
    "status": "pass",
    "time": 0.11094403266907,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.UserPreference.createEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with additional fields (CG.Order.Test.Api.Cest.UserPreference.createEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11151313781738,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.UserPreference.createEntityWithInvalidDateRange)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity with invalid date range (CG.Order.Test.Api.Cest.UserPreference.createEntityWithInvalidDateRange)",
    "status": "pass",
    "time": 0.15622401237488,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.UserPreference.testSingleDateFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test single date filter (CG.Order.Test.Api.Cest.UserPreference.testSingleDateFilter)",
    "status": "pass",
    "time": 0.115877866745,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.UserPreference.testDateRangeFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test date range filter (CG.Order.Test.Api.Cest.UserPreference.testDateRangeFilter)",
    "status": "pass",
    "time": 0.11215591430664,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.UserPreference.testRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test range filters (CG.Order.Test.Api.Cest.UserPreference.testRangeFilters)",
    "status": "pass",
    "time": 0.12063908576965,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.UserPreference.testArrayFiltersDontAcceptString)"
}{
    "event": "test",
    "suite": "api",
    "test": "test array filters dont accept string (CG.Order.Test.Api.Cest.UserPreference.testArrayFiltersDontAcceptString)",
    "status": "pass",
    "time": 0.11419010162354,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.UserPreference.testStringFiltersDontAcceptArray)"
}{
    "event": "test",
    "suite": "api",
    "test": "test string filters dont accept array (CG.Order.Test.Api.Cest.UserPreference.testStringFiltersDontAcceptArray)",
    "status": "pass",
    "time": 0.11754393577576,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.UserPreference.checkSearchTermFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "check search term filters (CG.Order.Test.Api.Cest.UserPreference.checkSearchTermFilters)",
    "status": "pass",
    "time": 0.11045289039612,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreference.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreference.viewInHal)",
    "status": "pass",
    "time": 0.18190813064575,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreference.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreference.checkAllowedMethods)",
    "status": "pass",
    "time": 0.34564709663391,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreference.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreference.checkUplink)",
    "status": "pass",
    "time": 0.18093800544739,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreference.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreference.checkHeadRequest)",
    "status": "fail",
    "time": 0.26883697509766,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 442,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3542,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 130,
            "function": "checkValuesAreTheSame",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "chunked",
                "?"
            ]
        }
    ],
    "message": "Failed asserting that two strings are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimes)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimes)",
    "status": "pass",
    "time": 0.1286838054657,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimesFromExisting)"
}{
    "event": "test",
    "suite": "api",
    "test": "create entity then get collection multiple times from existing (CG.Order.Test.Api.Cest.UserPreference.createEntityThenGetCollectionMultipleTimesFromExisting)",
    "status": "pass",
    "time": 0.11518216133118,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionAll)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionAll)",
    "status": "fail",
    "time": 0.17819881439209,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                ""
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 330,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                ""
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 261,
            "function": "jsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference",
                ""
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 268,
            "function": "seeJsonHasField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 276,
            "function": "getArrayFromJsonField",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "_embedded.userPreference"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3410,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 45,
            "function": "seeJsonFieldContainsArrayValues",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "_embedded.userPreference",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ]
            ]
        }
    ],
    "message": "Response is not of JSON format or is malformed",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionZeroLimit)"
}{
    "event": "test",
    "suite": "api",
    "test": "view a collection (CG.Order.Test.Api.Cest.UserPreference.viewCollectionZeroLimit)",
    "status": "fail",
    "time": 0.18778300285339,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/PaginationTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                400
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 400.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.UserPreference.checkFiltersPagination)"
}{
    "event": "test",
    "suite": "api",
    "test": "check filters pagination (CG.Order.Test.Api.Cest.UserPreference.checkFiltersPagination)",
    "status": "pass",
    "time": 0.11115288734436,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.UserPreference.getSortDirections)"
}{
    "event": "test",
    "suite": "api",
    "test": "get sort directions (CG.Order.Test.Api.Cest.UserPreference.getSortDirections)",
    "status": "pass",
    "time": 0.10848116874695,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.UserPreference.checkSortCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check sort collection (CG.Order.Test.Api.Cest.UserPreference.checkSortCollection)",
    "status": "fail",
    "time": 0.18363499641418,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 452,
            "function": "assertEquals",
            "class": "Codeception\\Module",
            "type": "->",
            "args": [
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ],
                [
                    {
                        "id": 1,
                        "preference": {
                            "order-saved-filters": {
                                "Crazy": {
                                    "purchaseDate": {
                                        "from": "",
                                        "to": "",
                                        "listOption": null
                                    },
                                    "status": [
                                        ""
                                    ],
                                    "search": "",
                                    "shippingAddressCountry": [
                                        "GB"
                                    ],
                                    "total": {
                                        "from": "1",
                                        "to": "10"
                                    },
                                    "channel": [
                                        "ebay"
                                    ]
                                }
                            }
                        },
                        "_links": {
                            "self": {
                                "href": "\/userPreference\/1"
                            },
                            "up": {
                                "href": "\/userPreference"
                            }
                        }
                    }
                ]
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3561,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/Collection\/SortTrait.php",
            "line": 38,
            "function": "checkCustomFilter",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "CG\\Order\\Test\\Api\\Page\\UserPreferencePage",
                "\/userPreference?orderBy=id&orderDirection=ASC",
                [
                    {
                        "id": "1",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch"
                            ],
                            "other": 1
                        }
                    },
                    {
                        "id": "2",
                        "preference": {
                            "orderTable": [
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "tags"
                            ],
                            "other": 2
                        }
                    },
                    {
                        "id": "3",
                        "preference": {
                            "orderTable": [
                                "tags",
                                "orderInformation",
                                "shippingService",
                                "dispatch",
                                "invoice"
                            ],
                            "other": 3
                        }
                    },
                    {
                        "id": "4",
                        "preference": {
                            "other": 4
                        }
                    },
                    {
                        "id": "5",
                        "preference": {
                            "orderTable": [
                                "checkbox",
                                "orderInformation",
                                "shippingService",
                                "buyerName"
                            ]
                        }
                    }
                ],
                true
            ]
        }
    ],
    "message": "Failed asserting that two arrays are equal.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.UserPreference.testTimestampFilter)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp filter (CG.Order.Test.Api.Cest.UserPreference.testTimestampFilter)",
    "status": "pass",
    "time": 0.12040185928345,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.UserPreference.testTimestampRangeFilters)"
}{
    "event": "test",
    "suite": "api",
    "test": "test timestamp range filters (CG.Order.Test.Api.Cest.UserPreference.testTimestampRangeFilters)",
    "status": "pass",
    "time": 0.11150097846985,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewPrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewPrimaryEntity)",
    "status": "fail",
    "time": 0.1829149723053,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "1",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 28,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "1",
                    "preference": {
                        "orderTable": [
                            "tags",
                            "orderInformation",
                            "shippingService",
                            "dispatch"
                        ],
                        "other": 1
                    }
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewSecondaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "view the secondary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewSecondaryEntity)",
    "status": "fail",
    "time": 0.20490503311157,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 123,
            "function": "grabDataFromJsonResponse",
            "class": "Codeception\\Module\\REST",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 205,
            "function": "getJson",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 191,
            "function": "seeJsonResponseFieldEquals",
            "class": "CG\\Codeception\\ApiHelper",
            "type": "->",
            "args": [
                "id",
                "2",
                "",
                true
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3113,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 51,
            "function": "seeJsonResponseFieldsEquals",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {
                    "id": "2",
                    "preference": {
                        "orderTable": [
                            "orderInformation",
                            "shippingService",
                            "dispatch",
                            "tags"
                        ],
                        "other": 2
                    }
                }
            ]
        }
    ],
    "message": "Response does not have required data",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not view a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.viewNonExistentEntity)",
    "status": "pass",
    "time": 0.18869209289551,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntity)",
    "status": "pass",
    "time": 0.16965508460999,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityThenGet)",
    "status": "pass",
    "time": 0.11201000213623,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithEmptyData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with empty data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithEmptyData)",
    "status": "pass",
    "time": 0.1247079372406,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithInvalidData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with invalid data (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithInvalidData)",
    "status": "pass",
    "time": 0.11309289932251,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithAdditionalFields)"
}{
    "event": "test",
    "suite": "api",
    "test": "update primary entity with additional fields (CG.Order.Test.Api.Cest.UserPreferenceCest.updatePrimaryEntityWithAdditionalFields)",
    "status": "pass",
    "time": 0.11215710639954,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntity)",
    "status": "fail",
    "time": 0.19124388694763,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGet)",
    "status": "fail",
    "time": 0.2084641456604,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 255,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGetCollection)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i delete the primary entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deletePrimaryEntityWithGetCollection)",
    "status": "fail",
    "time": 0.18683505058289,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 240,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                204
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityTrait.php",
            "line": 276,
            "function": "deletePrimaryEntity",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 204.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deleteNonExistentEntity)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can not delete a non existent entity (CG.Order.Test.Api.Cest.UserPreferenceCest.deleteNonExistentEntity)",
    "status": "pass",
    "time": 0.18457102775574,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkEntityEmbed)"
}{
    "event": "test",
    "suite": "api",
    "test": "check entity embed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkEntityEmbed)",
    "status": "pass",
    "time": 0.11308884620667,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.112144947052,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentId)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent id (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentId)",
    "status": "pass",
    "time": 0.11552214622498,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreferenceCest.viewInHal)"
}{
    "event": "test",
    "suite": "api",
    "test": "see a resource endpoint contains hal (CG.Order.Test.Api.Cest.UserPreferenceCest.viewInHal)",
    "status": "fail",
    "time": 0.20674681663513,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 183,
            "function": "seeResponseCodeIs",
            "class": "Codeception\\Module\\PhpBrowser",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3076,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 26,
            "function": "validateResponse",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                "\/userPreference\/1"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkAllowedMethods)"
}{
    "event": "test",
    "suite": "api",
    "test": "check only the allowed methods are allowed (CG.Order.Test.Api.Cest.UserPreferenceCest.checkAllowedMethods)",
    "status": "pass",
    "time": 0.22901916503906,
    "trace": [

    ],
    "message": "",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreferenceCest.checkUplink)"
}{
    "event": "test",
    "suite": "api",
    "test": "check the up link is set as the parents url (CG.Order.Test.Api.Cest.UserPreferenceCest.checkUplink)",
    "status": "fail",
    "time": 0.18267011642456,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 72,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreferenceCest.checkHeadRequest)"
}{
    "event": "test",
    "suite": "api",
    "test": "check headers for head request and that body is empty (CG.Order.Test.Api.Cest.UserPreferenceCest.checkHeadRequest)",
    "status": "fail",
    "time": 0.183758020401,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/RestTrait.php",
            "line": 113,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.UserPreferenceCest.hasETagHeader)"
}{
    "event": "test",
    "suite": "api",
    "test": "has e tag header (CG.Order.Test.Api.Cest.UserPreferenceCest.hasETagHeader)",
    "status": "fail",
    "time": 0.18951416015625,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/userPreference\/1",
                "CG\\Order\\Test\\Api\\Page\\UserPreferenceEntityPage"
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.UserPreferenceCest.sendETagGet304)"
}{
    "event": "test",
    "suite": "api",
    "test": "get a 304 when i send the etag on a second get request (CG.Order.Test.Api.Cest.UserPreferenceCest.sendETagGet304)",
    "status": "fail",
    "time": 0.19226408004761,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/userPreference\/1",
                "CG\\Order\\Test\\Api\\Page\\UserPreferenceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 35,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.UserPreferenceCest.sendInvalidETagGetNewETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check that if i send an invalid etag i get the entity (CG.Order.Test.Api.Cest.UserPreferenceCest.sendInvalidETagGetNewETag)",
    "status": "fail",
    "time": 0.18485498428345,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 61,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETag)",
    "status": "fail",
    "time": 0.1828670501709,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/userPreference\/1",
                "CG\\Order\\Test\\Api\\Page\\UserPreferenceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 78,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagThenGet)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag then get (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagThenGet)",
    "status": "fail",
    "time": 0.18208599090576,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/userPreference\/1",
                "CG\\Order\\Test\\Api\\Page\\UserPreferenceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 101,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with matching etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithETagAndIdenticalData)",
    "status": "fail",
    "time": 0.21711015701294,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/userPreference\/1",
                "CG\\Order\\Test\\Api\\Page\\UserPreferenceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 131,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETag)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETag)",
    "status": "fail",
    "time": 0.20398998260498,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 161,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETagAndIdenticalData)"
}{
    "event": "test",
    "suite": "api",
    "test": "check i can't update the primary entity with an invalid etag and identical data (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithInvalidETagAndIdenticalData)",
    "status": "fail",
    "time": 0.19477009773254,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 184,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 200 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/userpreference\/1\"'s etag to change (CG.Order.Test.Api.Cest.UserPreferenceCest.checkDuplicateClassNameETagIssue)"
}{
    "event": "test",
    "suite": "api",
    "test": "check getting other entities doesn't cause \"\/userpreference\/1\"'s etag to change (CG.Order.Test.Api.Cest.UserPreferenceCest.checkDuplicateClassNameETagIssue)",
    "status": "fail",
    "time": 0.19964098930359,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/ApiHelper.php",
            "line": 540,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                200
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 3674,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 19,
            "function": "urlHasETagHeader",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                {

                },
                "\/userPreference\/1",
                "CG\\Order\\Test\\Api\\Page\\UserPreferenceEntityPage"
            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 223,
            "function": "hasETagHeader",
            "class": "CG\\Order\\Test\\Api\\Cest\\UserPreferenceCest",
            "type": "->",
            "args": [
                {

                }
            ]
        }
    ],
    "message": "Failed asserting that 404 matches expected 200.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithoutEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity without etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithoutEtagShouldFail)",
    "status": "fail",
    "time": 0.18800806999207,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 252,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithEmptyEtagShouldFail)"
}{
    "event": "test",
    "suite": "api",
    "test": "update the primary entity with empty etag (CG.Order.Test.Api.Cest.UserPreferenceCest.updateEntityWithEmptyEtagShouldFail)",
    "status": "fail",
    "time": 0.19025897979736,
    "trace": [
        {
            "file": "\/var\/www\/cg_app\/current\/tests\/api\/ApiGuy.php",
            "line": 222,
            "function": "runStep",
            "class": "Codeception\\Scenario",
            "type": "->",
            "args": [

            ]
        },
        {
            "file": "\/var\/www\/cg_app\/current\/vendor\/channelgrabber\/codeception\/CG\/Codeception\/Cest\/Rest\/EntityETagTrait.php",
            "line": 274,
            "function": "seeResponseCodeIs",
            "class": "ApiGuy",
            "type": "->",
            "args": [
                409
            ]
        }
    ],
    "message": "Failed asserting that 500 matches expected 409.",
    "output": ""
}{
    "event": "testStart",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)"
}{
    "event": "test",
    "suite": "api",
    "test": "check put children endpoints with wrong parent idwith e tags (CG.Order.Test.Api.Cest.UserPreferenceCest.checkPutChildrenEndpointsWithWrongParentIdwithETags)",
    "status": "pass",
    "time": 0.12041211128235,
    "trace": [

    ],
    "message": "",
    "output": ""
}